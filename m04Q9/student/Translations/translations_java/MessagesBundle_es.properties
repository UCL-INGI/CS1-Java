# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
!=Project-Id-Version\: PACKAGE VERSION\nReport-Msgid-Bugs-To\: \nPOT-Creation-Date\: 2017-09-15 15\:04+0200\nPO-Revision-Date\: 2017-09-14 08\:08+0000\nLast-Translator\: Olivier MARTIN <olivier.martin@student.uclouvain.be>\nLanguage-Team\: none\nLanguage\: es\nMIME-Version\: 1.0\nContent-Type\: text/plain; charset\=UTF-8\nContent-Transfer-Encoding\: 8bit\nPlural-Forms\: nplurals\=2; plural\=n \!\= 1;\nX-Generator\: Weblate 2.16\n

#: utilities/run.py:164
La\ limite\ de\ m\u00e9moire\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=Se ha superado el l\u00edmite de memoria de su programa

#: utilities/run.py:167
La\ limite\ de\ temps\ d'ex\u00e9cution\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=Se ha superado el l\u00edmite de tiempo de su programa

#: utilities/run.py:172 utilities/run.py:190
#, fuzzy
!Il\ semble\ que\ vous\ ayiez\ fait\ des\ erreurs\ dans\ votre\ code\u2026\n\n=Parece que has cometido errores en tu c\u00f3digo ...\n

#: utilities/run.py:186
Vous\ avez\ bien\ r\u00e9pondu\ \u00e0\ cette\ question=Contestaste bien esta pregunta

#: utilities/run.py:195
Le\ programme\ ne\ compile\ pas\ \:\ \n=El programa no compila\: \n

#: utilities/run.py:203
Impossible\ de\ d\u00e9coder\ le\ config.json=No se puede descodificar config.json

#: m01Q10/src/Tests.java:33
#, java-format
{0}\ <\ {1}\ <\ {2}\ est\ {3}\ mais\ votre\ code\ indique\ {4}.\n={0} <{1} <{2} es {3} pero su c\u00f3digo dice {4}.\n

#: m01Q10/src/Tests.java:54 m01Q11/src/Tests.java:52 m01Q12/src/Tests.java:55
#: m01Q13/src/Tests.java:54 m01Q14/src/Tests.java:52 m01Q15/src/Tests.java:63
#: m01Q16/src/Tests.java:50 m01Q17/src/Tests.java:67 m01Q18/src/Tests.java:56
#: m01Q2/src/Tests.java:86 m01Q20/src/Tests.java:70 m01Q3/src/Tests.java:59
#: m01Q4/src/Tests.java:54 m01Q5/src/Tests.java:50 m01Q6/src/Tests.java:49
#: m01Q7/src/Tests.java:49 m01Q8/src/Tests.java:54 m01Q9/src/Tests.java:77
#: m01_bf/src/Tests.java:49 m02Q1/src/Tests.java:46 m02Q10/src/Tests.java:52
#: m02Q3/src/Tests.java:68 m02Q4/src/Tests.java:50 m02Q5/src/Tests.java:49
#: m02Q6/src/Tests.java:47 m02Q7/src/Tests.java:50 m02Q8/src/Tests.java:74
#: m02Q9/src/Tests.java:46 m02_bf/src/Tests.java:49 m02dem2/src/Tests.java:57
#: m02dem3/src/Tests.java:62 m02dem4/src/Tests.java:49
#: m02dem5/src/Tests.java:88 m03Q1/src/Tests.java:81 m03Q2/src/Tests.java:55
#: m03Q3/src/Tests.java:57 m03Q4/src/Tests.java:61 m03Q5/src/Tests.java:55
#: m03Q6/src/Tests.java:54 m03Q7/src/Tests.java:54 m03_bf/src/Tests.java:56
#: m03dem2/src/Tests.java:63 m03dem3/src/Tests.java:51
#: m03dem4/src/Tests.java:78 m03dem5/src/Tests.java:49 m04Q1/src/Tests.java:57
#: m04Q10/src/Tests.java:52 m04Q11/src/Tests.java:51 m04Q2/src/Tests.java:52
#: m04Q3/src/Tests.java:58 m04Q4/src/Tests.java:145 m04Q5/src/Tests.java:60
#: m04Q6/src/Tests.java:64 m04Q7/src/Tests.java:61 m04Q8/src/Tests.java:59
#: m04Q9/src/Tests.java:52 m04_bf/src/Tests.java:70 m04dem1/src/Tests.java:74
#: m04dem2/src/Tests.java:73 m04dem3/src/Tests.java:67
#: m04dem4/src/Tests.java:61 m04dem5/src/Tests.java:89 m05Q1/src/Tests.java:64
#: m05Q10/src/Tests.java:66 m05Q11/src/Tests.java:70
#: m05Q12/src/TestsQ1.java:62 m05Q12/src/TestsQ2.java:58
#: m05Q2/src/Tests.java:65 m05Q3/src/Tests.java:64 m05Q4/src/Tests.java:63
#: m05Q5/src/Tests.java:54 m05Q6/src/Tests.java:59 m05Q7/src/Tests.java:71
#: m05Q8/src/Tests.java:79 m05Q9/src/Tests.java:65 m05_bf/src/Tests.java:92
#: m05dem1/src/Tests.java:95 m05dem2/src/Tests.java:71
#: m05dem3/src/Tests.java:56 m05dem4/src/Tests.java:175
#: m05dem5/src/Tests.java:101 m06Q1/src/TestCode.java:61
#: m06Q10/src/TestCode.java:110 m06Q11/src/TestParam.java:67
#: m06Q2/src/TestCode.java:102 m06Q3/src/TestCode.java:71
#: m06Q3/src/TestParam.java:66 m06Q4/src/TestCode.java:84
#: m06Q4/src/TestParam.java:64 m06Q5/src/TestCode.java:86
#: m06Q6/src/TestCode.java:77 m06Q6/src/TestParam.java:66
#: m06Q7/src/TestCode.java:87 m06Q8/src/TestCode.java:89
#: m06Q8/src/TestParam.java:74 m06Q9/src/TestCode.java:107
#: m06_bf/src/TestInspect.java:57 m06_bf/src/TestCode.java:58
#: m06dem1/src/TestCode.java:136 m06dem2/src/TestCode.java:232
#: m06dem3/src/TestCode.java:105 m06dem4/src/TestCode.java:116
#: m07Q1/src/TestParam.java:66 m07Q10/src/TestCode.java:49
#: m07Q11/src/TestParam.java:75 m07Q2/src/TestCode.java:101
#: m07Q3/src/TestParam.java:76 m07Q4/src/TestCode.java:48
#: m07Q5/src/TestCode.java:49 m07Q6/src/TestParam.java:69
#: m07Q7/src/TestCode.java:49 m07Q8/src/TestCode.java:50
#: m07Q9/src/TestCode.java:48 m07_bf/src/TestInspectCD.java:57
#: m07_bf/src/TestItem.java:62 m07_bf/src/TestCD.java:119
#: m07dem1/src/TestCode.java:172 m07dem2/src/TestCode.java:86
#: m08Q1/src/TestCode.java:50 m08Q2/src/TestCode.java:51
#: m08Q3/src/TestParam.java:67 m08Q4/src/TestAnd.java:75
#: m08Q4/src/TestGet.java:79 m08Q4/src/TestReset.java:78
#: m08Q4/src/TestRotate.java:74 m08Q4/src/TestSet.java:85
#: m08Q4/src/TestShift.java:74 m08Q4/src/TestConstruct.java:49
#: m08Q5/src/TestGet.java:74 m08Q5/src/TestReset.java:77
#: m08Q5/src/TestRotate.java:79 m08Q5/src/TestSet.java:77
#: m08Q5/src/TestShift.java:79 m08Q6/src/TestMax.java:65
#: m08Q6/src/TestMin.java:65 m08Q6/src/TestMoyenne.java:63
#: m08Q7/src/TestMax.java:64 m08Q7/src/TestMin.java:64
#: m08Q7/src/TestMoyenne.java:64 m08dem1/src/TestParam1.java:65
#: m08dem1/src/TestParam2.java:76 m09Q1/src/TestParam.java:82
#: m09Q2/src/TestParam.java:80 m09Q3/src/TestCode.java:65
#: m09Q4/src/TestParam.java:67 m09Q4/src/TestCode.java:65
#: m09Q5/src/TestCode.java:56 m09Q6/src/TestCode.java:59
#: m09Q7/src/TestCode.java:61 m09dem1/src/TestParam.java:80
#: m09dem2/src/TestCode.java:62 m09dem2/src/TestRes.java:62
#: m10Q1/src/Tests.java:78 m10Q2/src/Tests.java:118 m10Q3/src/Tests.java:163
#: m10Q4/src/TestListAdd.java:107 m10Q4/src/TestListContains.java:85
#: m10Q4/src/TestListGet.java:89 m10Q4/src/TestListSet.java:99
#: m10dem1/src/Tests.java:162 m10dem1/src/TestOut.java:85
#: m10dem2/src/TestContenuFichier.java:135
#: m10dem2/src/TestValeurRetour.java:108 m11Q1/src/Tests.java:170
#: m11Q2/src/Tests.java:159 m11Q3/src/Tests.java:110 m11Q4/src/Tests.java:166
#: m11Q5/src/Tests.java:170 m11Q6/src/Tests.java:138 mX1Q19/src/Tests.java:110
Attention,\ il\ est\ interdit\ de\ diviser\ par\ z\u00e9ro.=Atenci\u00f3n, se proh\u00edbe dividir por cero.

#: m01Q10/src/Tests.java:56 m01Q11/src/Tests.java:54 m01Q12/src/Tests.java:57
#: m01Q13/src/Tests.java:56 m01Q14/src/Tests.java:54 m01Q15/src/Tests.java:65
#: m01Q16/src/Tests.java:52 m01Q17/src/Tests.java:69 m01Q18/src/Tests.java:58
#: m01Q2/src/Tests.java:88 m01Q20/src/Tests.java:72 m01Q3/src/Tests.java:61
#: m01Q4/src/Tests.java:56 m01Q5/src/Tests.java:52 m01Q6/src/Tests.java:51
#: m01Q7/src/Tests.java:51 m01Q8/src/Tests.java:56 m01Q9/src/Tests.java:79
#: m01_bf/src/Tests.java:51 m02Q1/src/Tests.java:48 m02Q10/src/Tests.java:54
#: m02Q3/src/Tests.java:70 m02Q4/src/Tests.java:52 m02Q5/src/Tests.java:51
#: m02Q6/src/Tests.java:49 m02Q7/src/Tests.java:52 m02Q8/src/Tests.java:76
#: m02Q9/src/Tests.java:48 m02_bf/src/Tests.java:51 m02dem2/src/Tests.java:59
#: m02dem3/src/Tests.java:64 m02dem4/src/Tests.java:51
#: m02dem5/src/Tests.java:90 m03Q1/src/Tests.java:83 m03Q2/src/Tests.java:57
#: m03Q3/src/Tests.java:59 m03Q4/src/Tests.java:63 m03Q5/src/Tests.java:57
#: m03Q6/src/Tests.java:56 m03Q7/src/Tests.java:56 m03_bf/src/Tests.java:58
#: m03dem2/src/Tests.java:65 m03dem3/src/Tests.java:53
#: m03dem4/src/Tests.java:80 m03dem5/src/Tests.java:51 m04Q1/src/Tests.java:59
#: m04Q10/src/Tests.java:54 m04Q11/src/Tests.java:53 m04Q2/src/Tests.java:54
#: m04Q3/src/Tests.java:60 m04Q4/src/Tests.java:147 m04Q5/src/Tests.java:62
#: m04Q6/src/Tests.java:66 m04Q7/src/Tests.java:63 m04Q8/src/Tests.java:61
#: m04Q9/src/Tests.java:54 m04_bf/src/Tests.java:72 m04dem1/src/Tests.java:76
#: m04dem2/src/Tests.java:75 m04dem3/src/Tests.java:69
#: m04dem4/src/Tests.java:63 m04dem5/src/Tests.java:91 m05Q1/src/Tests.java:66
#: m05Q10/src/Tests.java:68 m05Q11/src/Tests.java:72
#: m05Q12/src/TestsQ1.java:64 m05Q12/src/TestsQ2.java:60
#: m05Q2/src/Tests.java:67 m05Q3/src/Tests.java:66 m05Q4/src/Tests.java:65
#: m05Q5/src/Tests.java:56 m05Q6/src/Tests.java:61 m05Q7/src/Tests.java:73
#: m05Q8/src/Tests.java:81 m05Q9/src/Tests.java:67 m05_bf/src/Tests.java:94
#: m05dem1/src/Tests.java:97 m05dem2/src/Tests.java:73
#: m05dem3/src/Tests.java:58 m05dem4/src/Tests.java:177
#: m05dem5/src/Tests.java:103 m06Q1/src/TestCode.java:63
#: m06Q10/src/TestCode.java:112 m06Q11/src/TestParam.java:69
#: m06Q2/src/TestCode.java:104 m06Q3/src/TestCode.java:73
#: m06Q3/src/TestParam.java:68 m06Q4/src/TestCode.java:86
#: m06Q4/src/TestParam.java:66 m06Q5/src/TestCode.java:88
#: m06Q6/src/TestCode.java:79 m06Q6/src/TestParam.java:68
#: m06Q7/src/TestCode.java:89 m06Q8/src/TestCode.java:91
#: m06Q8/src/TestParam.java:76 m06Q9/src/TestCode.java:109
#: m06_bf/src/TestInspect.java:59 m06_bf/src/TestCode.java:60
#: m06dem1/src/TestCode.java:138 m06dem2/src/TestCode.java:234
#: m06dem3/src/TestCode.java:107 m06dem4/src/TestCode.java:118
#: m07Q1/src/TestParam.java:68 m07Q10/src/TestCode.java:51
#: m07Q11/src/TestParam.java:77 m07Q2/src/TestCode.java:103
#: m07Q3/src/TestParam.java:78 m07Q4/src/TestCode.java:50
#: m07Q5/src/TestCode.java:51 m07Q6/src/TestParam.java:71
#: m07Q7/src/TestCode.java:51 m07Q8/src/TestCode.java:52
#: m07Q9/src/TestCode.java:50 m07_bf/src/TestInspectCD.java:59
#: m07_bf/src/TestItem.java:64 m07_bf/src/TestCD.java:121
#: m07dem1/src/TestCode.java:174 m07dem2/src/TestCode.java:88
#: m08Q1/src/TestCode.java:52 m08Q2/src/TestCode.java:53
#: m08Q3/src/TestParam.java:69 m08Q4/src/TestAnd.java:77
#: m08Q4/src/TestGet.java:81 m08Q4/src/TestReset.java:80
#: m08Q4/src/TestRotate.java:76 m08Q4/src/TestSet.java:87
#: m08Q4/src/TestShift.java:76 m08Q4/src/TestConstruct.java:51
#: m08Q5/src/TestGet.java:76 m08Q5/src/TestReset.java:79
#: m08Q5/src/TestRotate.java:81 m08Q5/src/TestSet.java:79
#: m08Q5/src/TestShift.java:81 m08Q6/src/TestMax.java:67
#: m08Q6/src/TestMin.java:67 m08Q6/src/TestMoyenne.java:65
#: m08Q7/src/TestMax.java:66 m08Q7/src/TestMin.java:66
#: m08Q7/src/TestMoyenne.java:66 m08dem1/src/TestParam1.java:67
#: m08dem1/src/TestParam2.java:78 m09Q1/src/TestParam.java:84
#: m09Q2/src/TestParam.java:82 m09Q3/src/TestCode.java:67
#: m09Q4/src/TestParam.java:69 m09Q4/src/TestCode.java:67
#: m09Q5/src/TestCode.java:58 m09Q6/src/TestCode.java:61
#: m09Q7/src/TestCode.java:63 m09dem1/src/TestParam.java:82
#: m09dem2/src/TestCode.java:65 m09dem2/src/TestRes.java:65
#: m10Q1/src/Tests.java:80 m10Q2/src/Tests.java:120 m10Q3/src/Tests.java:165
#: m10Q4/src/TestListAdd.java:109 m10Q4/src/TestListContains.java:87
#: m10Q4/src/TestListGet.java:91 m10Q4/src/TestListSet.java:101
#: m10dem1/src/Tests.java:164 m10dem1/src/TestOut.java:87
#: m10dem2/src/TestContenuFichier.java:137
#: m10dem2/src/TestValeurRetour.java:110 m11Q1/src/Tests.java:172
#: m11Q2/src/Tests.java:161 m11Q3/src/Tests.java:112 m11Q4/src/Tests.java:168
#: m11Q5/src/Tests.java:172 m11Q6/src/Tests.java:140 mX1Q19/src/Tests.java:112
Attention,\ certaines\ variables\ ont\ \u00e9t\u00e9\ mal\ cast\u00e9es\ \!=Atenci\u00f3n, algunas variables han sido mal fundidas\!

#: m01Q10/src/Tests.java:58 m01Q11/src/Tests.java:56 m01Q12/src/Tests.java:59
#: m01Q13/src/Tests.java:58 m01Q14/src/Tests.java:56 m01Q15/src/Tests.java:67
#: m01Q16/src/Tests.java:54 m01Q17/src/Tests.java:71 m01Q18/src/Tests.java:60
#: m01Q2/src/Tests.java:90 m01Q20/src/Tests.java:74 m01Q3/src/Tests.java:63
#: m01Q4/src/Tests.java:58 m01Q5/src/Tests.java:54 m01Q6/src/Tests.java:53
#: m01Q7/src/Tests.java:53 m01Q8/src/Tests.java:58 m01Q9/src/Tests.java:81
#: m01_bf/src/Tests.java:53 m02Q1/src/Tests.java:50 m02Q10/src/Tests.java:56
#: m02Q3/src/Tests.java:72 m02Q4/src/Tests.java:54 m02Q5/src/Tests.java:53
#: m02Q6/src/Tests.java:51 m02Q7/src/Tests.java:54 m02Q8/src/Tests.java:78
#: m02Q9/src/Tests.java:50 m02_bf/src/Tests.java:53 m02dem2/src/Tests.java:61
#: m02dem3/src/Tests.java:66 m02dem4/src/Tests.java:53
#: m02dem5/src/Tests.java:92 m03Q1/src/Tests.java:85 m03Q2/src/Tests.java:59
#: m03Q3/src/Tests.java:61 m03Q4/src/Tests.java:65 m03Q5/src/Tests.java:59
#: m03Q6/src/Tests.java:58 m03Q7/src/Tests.java:58 m03_bf/src/Tests.java:60
#: m03dem2/src/Tests.java:67 m03dem3/src/Tests.java:55
#: m03dem4/src/Tests.java:82 m03dem5/src/Tests.java:53 m04Q1/src/Tests.java:61
#: m04Q10/src/Tests.java:56 m04Q11/src/Tests.java:55 m04Q2/src/Tests.java:56
#: m04Q3/src/Tests.java:62 m04Q4/src/Tests.java:149 m04Q5/src/Tests.java:64
#: m04Q6/src/Tests.java:68 m04Q7/src/Tests.java:65 m04Q8/src/Tests.java:63
#: m04Q9/src/Tests.java:56 m04_bf/src/Tests.java:74 m04dem1/src/Tests.java:78
#: m04dem2/src/Tests.java:77 m04dem3/src/Tests.java:71
#: m04dem4/src/Tests.java:65 m04dem5/src/Tests.java:93 m05Q1/src/Tests.java:68
#: m05Q10/src/Tests.java:70 m05Q11/src/Tests.java:74
#: m05Q12/src/TestsQ1.java:66 m05Q12/src/TestsQ2.java:62
#: m05Q2/src/Tests.java:69 m05Q3/src/Tests.java:68 m05Q4/src/Tests.java:67
#: m05Q5/src/Tests.java:58 m05Q6/src/Tests.java:63 m05Q7/src/Tests.java:75
#: m05Q8/src/Tests.java:83 m05Q9/src/Tests.java:69 m05_bf/src/Tests.java:96
#: m05dem1/src/Tests.java:99 m05dem2/src/Tests.java:75
#: m05dem3/src/Tests.java:60 m05dem4/src/Tests.java:179
#: m05dem5/src/Tests.java:105 m06Q1/src/TestCode.java:65
#: m06Q10/src/TestCode.java:114 m06Q11/src/TestParam.java:71
#: m06Q2/src/TestCode.java:106 m06Q3/src/TestCode.java:75
#: m06Q3/src/TestParam.java:70 m06Q4/src/TestCode.java:88
#: m06Q4/src/TestParam.java:68 m06Q5/src/TestCode.java:90
#: m06Q6/src/TestCode.java:81 m06Q6/src/TestParam.java:70
#: m06Q7/src/TestCode.java:91 m06Q8/src/TestCode.java:93
#: m06Q8/src/TestParam.java:78 m06Q9/src/TestCode.java:111
#: m06_bf/src/TestInspect.java:61 m06_bf/src/TestCode.java:62
#: m06dem1/src/TestCode.java:140 m06dem2/src/TestCode.java:236
#: m06dem3/src/TestCode.java:109 m06dem4/src/TestCode.java:120
#: m07Q1/src/TestParam.java:70 m07Q10/src/TestCode.java:53
#: m07Q11/src/TestParam.java:79 m07Q2/src/TestCode.java:105
#: m07Q3/src/TestParam.java:80 m07Q4/src/TestCode.java:52
#: m07Q5/src/TestCode.java:53 m07Q6/src/TestParam.java:73
#: m07Q7/src/TestCode.java:53 m07Q8/src/TestCode.java:54
#: m07Q9/src/TestCode.java:52 m07_bf/src/TestInspectCD.java:61
#: m07_bf/src/TestItem.java:66 m07_bf/src/TestCD.java:123
#: m07dem1/src/TestCode.java:176 m07dem2/src/TestCode.java:90
#: m08Q1/src/TestCode.java:54 m08Q2/src/TestCode.java:55
#: m08Q3/src/TestParam.java:71 m08Q4/src/TestAnd.java:79
#: m08Q4/src/TestGet.java:83 m08Q4/src/TestReset.java:82
#: m08Q4/src/TestRotate.java:78 m08Q4/src/TestSet.java:89
#: m08Q4/src/TestShift.java:78 m08Q4/src/TestConstruct.java:53
#: m08Q5/src/TestGet.java:78 m08Q5/src/TestReset.java:81
#: m08Q5/src/TestRotate.java:83 m08Q5/src/TestSet.java:81
#: m08Q5/src/TestShift.java:83 m08Q6/src/TestMax.java:69
#: m08Q6/src/TestMin.java:69 m08Q6/src/TestMoyenne.java:67
#: m08Q7/src/TestMax.java:68 m08Q7/src/TestMin.java:68
#: m08Q7/src/TestMoyenne.java:68 m08dem1/src/TestParam1.java:69
#: m08dem1/src/TestParam2.java:80 m09Q1/src/TestParam.java:86
#: m09Q2/src/TestParam.java:84 m09Q3/src/TestCode.java:69
#: m09Q4/src/TestParam.java:71 m09Q4/src/TestCode.java:69
#: m09Q5/src/TestCode.java:60 m09Q6/src/TestCode.java:63
#: m09Q7/src/TestCode.java:65 m09dem1/src/TestParam.java:84
#: m09dem2/src/TestCode.java:68 m09dem2/src/TestRes.java:68
#: m10Q1/src/Tests.java:82 m10Q2/src/Tests.java:122 m10Q3/src/Tests.java:167
#: m10Q4/src/TestListAdd.java:111 m10Q4/src/TestListContains.java:89
#: m10Q4/src/TestListGet.java:93 m10Q4/src/TestListSet.java:103
#: m10dem1/src/Tests.java:166 m10dem1/src/TestOut.java:89
#: m10dem2/src/TestContenuFichier.java:139
#: m10dem2/src/TestValeurRetour.java:112 m11Q1/src/Tests.java:174
#: m11Q2/src/Tests.java:163 m11Q3/src/Tests.java:114 m11Q4/src/Tests.java:170
#: m11Q5/src/Tests.java:174 m11Q6/src/Tests.java:142 mX1Q19/src/Tests.java:114
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ String\ \!\ (StringIndexOutOfBoundsException)=Atenci\u00f3n, intenta leer fuera de los l\u00edmites de una cadena\! (StringIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:60 m01Q11/src/Tests.java:58 m01Q12/src/Tests.java:61
#: m01Q13/src/Tests.java:60 m01Q14/src/Tests.java:58 m01Q15/src/Tests.java:69
#: m01Q16/src/Tests.java:56 m01Q17/src/Tests.java:73 m01Q18/src/Tests.java:62
#: m01Q2/src/Tests.java:92 m01Q20/src/Tests.java:76 m01Q3/src/Tests.java:65
#: m01Q4/src/Tests.java:60 m01Q5/src/Tests.java:56 m01Q6/src/Tests.java:55
#: m01Q7/src/Tests.java:55 m01Q8/src/Tests.java:60 m01Q9/src/Tests.java:83
#: m01_bf/src/Tests.java:55 m02Q1/src/Tests.java:52 m02Q10/src/Tests.java:58
#: m02Q3/src/Tests.java:74 m02Q4/src/Tests.java:56 m02Q5/src/Tests.java:55
#: m02Q6/src/Tests.java:53 m02Q7/src/Tests.java:56 m02Q8/src/Tests.java:80
#: m02Q9/src/Tests.java:52 m02_bf/src/Tests.java:55 m02dem2/src/Tests.java:63
#: m02dem3/src/Tests.java:68 m02dem4/src/Tests.java:55
#: m02dem5/src/Tests.java:94 m03Q1/src/Tests.java:87 m03Q2/src/Tests.java:61
#: m03Q3/src/Tests.java:63 m03Q4/src/Tests.java:67 m03Q5/src/Tests.java:61
#: m03Q6/src/Tests.java:60 m03Q7/src/Tests.java:60 m03_bf/src/Tests.java:62
#: m03dem2/src/Tests.java:69 m03dem3/src/Tests.java:57
#: m03dem4/src/Tests.java:84 m03dem5/src/Tests.java:55 m04Q1/src/Tests.java:63
#: m04Q10/src/Tests.java:58 m04Q11/src/Tests.java:57 m04Q2/src/Tests.java:58
#: m04Q3/src/Tests.java:64 m04Q4/src/Tests.java:151 m04Q5/src/Tests.java:66
#: m04Q6/src/Tests.java:70 m04Q7/src/Tests.java:67 m04Q8/src/Tests.java:65
#: m04Q9/src/Tests.java:58 m04_bf/src/Tests.java:76 m04dem1/src/Tests.java:80
#: m04dem2/src/Tests.java:79 m04dem3/src/Tests.java:73
#: m04dem4/src/Tests.java:67 m04dem5/src/Tests.java:95 m05Q1/src/Tests.java:70
#: m05Q10/src/Tests.java:72 m05Q11/src/Tests.java:76
#: m05Q12/src/TestsQ1.java:68 m05Q12/src/TestsQ2.java:64
#: m05Q2/src/Tests.java:71 m05Q3/src/Tests.java:70 m05Q4/src/Tests.java:69
#: m05Q5/src/Tests.java:60 m05Q6/src/Tests.java:65 m05Q7/src/Tests.java:79
#: m05Q8/src/Tests.java:87 m05Q9/src/Tests.java:71 m05_bf/src/Tests.java:98
#: m05dem1/src/Tests.java:101 m05dem2/src/Tests.java:77
#: m05dem3/src/Tests.java:62 m05dem4/src/Tests.java:181
#: m05dem5/src/Tests.java:107 m06Q1/src/TestCode.java:67
#: m06Q10/src/TestCode.java:116 m06Q11/src/TestParam.java:73
#: m06Q2/src/TestCode.java:108 m06Q3/src/TestCode.java:77
#: m06Q3/src/TestParam.java:72 m06Q4/src/TestCode.java:90
#: m06Q4/src/TestParam.java:70 m06Q5/src/TestCode.java:92
#: m06Q6/src/TestCode.java:83 m06Q6/src/TestParam.java:72
#: m06Q7/src/TestCode.java:93 m06Q8/src/TestCode.java:95
#: m06Q8/src/TestParam.java:80 m06Q9/src/TestCode.java:113
#: m06_bf/src/TestInspect.java:63 m06_bf/src/TestCode.java:64
#: m06dem1/src/TestCode.java:142 m06dem2/src/TestCode.java:238
#: m06dem3/src/TestCode.java:111 m06dem4/src/TestCode.java:122
#: m07Q1/src/TestParam.java:72 m07Q10/src/TestCode.java:55
#: m07Q11/src/TestParam.java:81 m07Q2/src/TestCode.java:107
#: m07Q3/src/TestParam.java:82 m07Q4/src/TestCode.java:54
#: m07Q5/src/TestCode.java:55 m07Q6/src/TestParam.java:75
#: m07Q7/src/TestCode.java:55 m07Q8/src/TestCode.java:56
#: m07Q9/src/TestCode.java:54 m07_bf/src/TestInspectCD.java:63
#: m07_bf/src/TestItem.java:68 m07_bf/src/TestCD.java:125
#: m07dem1/src/TestCode.java:178 m07dem2/src/TestCode.java:92
#: m08Q1/src/TestCode.java:56 m08Q2/src/TestCode.java:57
#: m08Q3/src/TestParam.java:73 m08Q4/src/TestAnd.java:81
#: m08Q4/src/TestGet.java:85 m08Q4/src/TestReset.java:84
#: m08Q4/src/TestRotate.java:80 m08Q4/src/TestSet.java:91
#: m08Q4/src/TestShift.java:80 m08Q4/src/TestConstruct.java:55
#: m08Q5/src/TestGet.java:80 m08Q5/src/TestReset.java:83
#: m08Q5/src/TestRotate.java:85 m08Q5/src/TestSet.java:83
#: m08Q5/src/TestShift.java:85 m08Q6/src/TestMax.java:71
#: m08Q6/src/TestMin.java:71 m08Q6/src/TestMoyenne.java:69
#: m08Q7/src/TestMax.java:70 m08Q7/src/TestMin.java:70
#: m08Q7/src/TestMoyenne.java:70 m08dem1/src/TestParam1.java:71
#: m08dem1/src/TestParam2.java:82 m09Q1/src/TestParam.java:88
#: m09Q2/src/TestParam.java:86 m09Q3/src/TestCode.java:71
#: m09Q4/src/TestParam.java:73 m09Q4/src/TestCode.java:71
#: m09Q5/src/TestCode.java:62 m09Q6/src/TestCode.java:65
#: m09Q7/src/TestCode.java:67 m09dem1/src/TestParam.java:86
#: m09dem2/src/TestCode.java:71 m09dem2/src/TestRes.java:71
#: m10Q1/src/Tests.java:84 m10Q2/src/Tests.java:124 m10Q3/src/Tests.java:169
#: m10Q4/src/TestListAdd.java:113 m10Q4/src/TestListContains.java:91
#: m10Q4/src/TestListGet.java:95 m10Q4/src/TestListSet.java:105
#: m10dem1/src/Tests.java:168 m10dem1/src/TestOut.java:91
#: m10dem2/src/TestContenuFichier.java:141
#: m10dem2/src/TestValeurRetour.java:114 m11Q1/src/Tests.java:176
#: m11Q2/src/Tests.java:165 m11Q3/src/Tests.java:116 m11Q4/src/Tests.java:172
#: m11Q5/src/Tests.java:176 m11Q6/src/Tests.java:144 mX1Q19/src/Tests.java:116
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ tableau\ \!\ (ArrayIndexOutOfBoundsException)=Atenci\u00f3n tratando de leer fuera de los l\u00edmites de una mesa\! (ArrayIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:62 m01Q11/src/Tests.java:60 m01Q12/src/Tests.java:63
#: m01Q13/src/Tests.java:62 m01Q14/src/Tests.java:60 m01Q15/src/Tests.java:71
#: m01Q16/src/Tests.java:58 m01Q17/src/Tests.java:75 m01Q18/src/Tests.java:64
#: m01Q2/src/Tests.java:94 m01Q20/src/Tests.java:78 m01Q3/src/Tests.java:67
#: m01Q4/src/Tests.java:62 m01Q5/src/Tests.java:58 m01Q6/src/Tests.java:57
#: m01Q7/src/Tests.java:57 m01Q8/src/Tests.java:62 m01Q9/src/Tests.java:85
#: m01_bf/src/Tests.java:57 m02Q1/src/Tests.java:54 m02Q10/src/Tests.java:60
#: m02Q3/src/Tests.java:76 m02Q4/src/Tests.java:58 m02Q5/src/Tests.java:57
#: m02Q6/src/Tests.java:55 m02Q7/src/Tests.java:58 m02Q8/src/Tests.java:82
#: m02Q9/src/Tests.java:54 m02_bf/src/Tests.java:57 m02dem2/src/Tests.java:65
#: m02dem3/src/Tests.java:70 m02dem4/src/Tests.java:57
#: m02dem5/src/Tests.java:96 m03Q1/src/Tests.java:89 m03Q2/src/Tests.java:63
#: m03Q3/src/Tests.java:65 m03Q4/src/Tests.java:69 m03Q5/src/Tests.java:63
#: m03Q6/src/Tests.java:62 m03Q7/src/Tests.java:62 m03_bf/src/Tests.java:64
#: m03dem2/src/Tests.java:71 m03dem3/src/Tests.java:59
#: m03dem4/src/Tests.java:86 m03dem5/src/Tests.java:57 m04Q1/src/Tests.java:65
#: m04Q10/src/Tests.java:60 m04Q11/src/Tests.java:59 m04Q2/src/Tests.java:60
#: m04Q3/src/Tests.java:66 m04Q4/src/Tests.java:153 m04Q5/src/Tests.java:68
#: m04Q6/src/Tests.java:72 m04Q7/src/Tests.java:69 m04Q8/src/Tests.java:67
#: m04Q9/src/Tests.java:60 m04_bf/src/Tests.java:78 m04dem1/src/Tests.java:82
#: m04dem2/src/Tests.java:81 m04dem3/src/Tests.java:75
#: m04dem4/src/Tests.java:69 m04dem5/src/Tests.java:97 m05Q1/src/Tests.java:72
#: m05Q10/src/Tests.java:74 m05Q11/src/Tests.java:78
#: m05Q12/src/TestsQ1.java:70 m05Q12/src/TestsQ2.java:66
#: m05Q2/src/Tests.java:73 m05Q3/src/Tests.java:72 m05Q4/src/Tests.java:71
#: m05Q5/src/Tests.java:62 m05Q6/src/Tests.java:67 m05Q7/src/Tests.java:81
#: m05Q8/src/Tests.java:89 m05Q9/src/Tests.java:73 m05_bf/src/Tests.java:100
#: m05dem1/src/Tests.java:103 m05dem2/src/Tests.java:79
#: m05dem3/src/Tests.java:64 m05dem4/src/Tests.java:183
#: m05dem5/src/Tests.java:109 m06Q1/src/TestCode.java:69
#: m06Q10/src/TestCode.java:118 m06Q11/src/TestParam.java:75
#: m06Q2/src/TestCode.java:110 m06Q3/src/TestCode.java:79
#: m06Q3/src/TestParam.java:74 m06Q4/src/TestCode.java:92
#: m06Q4/src/TestParam.java:72 m06Q5/src/TestCode.java:94
#: m06Q6/src/TestCode.java:85 m06Q6/src/TestParam.java:74
#: m06Q7/src/TestCode.java:95 m06Q8/src/TestCode.java:97
#: m06Q8/src/TestParam.java:82 m06Q9/src/TestCode.java:115
#: m06_bf/src/TestInspect.java:66 m06_bf/src/TestCode.java:67
#: m06dem1/src/TestCode.java:144 m06dem2/src/TestCode.java:240
#: m06dem3/src/TestCode.java:113 m06dem4/src/TestCode.java:124
#: m07Q1/src/TestParam.java:74 m07Q10/src/TestCode.java:57
#: m07Q11/src/TestParam.java:83 m07Q2/src/TestCode.java:109
#: m07Q3/src/TestParam.java:84 m07Q4/src/TestCode.java:56
#: m07Q5/src/TestCode.java:57 m07Q6/src/TestParam.java:77
#: m07Q7/src/TestCode.java:57 m07Q8/src/TestCode.java:58
#: m07Q9/src/TestCode.java:56 m07_bf/src/TestInspectCD.java:66
#: m07_bf/src/TestItem.java:70 m07_bf/src/TestCD.java:127
#: m07dem1/src/TestCode.java:180 m07dem2/src/TestCode.java:94
#: m08Q1/src/TestCode.java:58 m08Q2/src/TestCode.java:59
#: m08Q3/src/TestParam.java:75 m08Q4/src/TestAnd.java:83
#: m08Q4/src/TestGet.java:87 m08Q4/src/TestReset.java:86
#: m08Q4/src/TestRotate.java:82 m08Q4/src/TestSet.java:93
#: m08Q4/src/TestShift.java:82 m08Q4/src/TestConstruct.java:57
#: m08Q5/src/TestGet.java:82 m08Q5/src/TestReset.java:85
#: m08Q5/src/TestRotate.java:87 m08Q5/src/TestSet.java:85
#: m08Q5/src/TestShift.java:87 m08Q6/src/TestMax.java:73
#: m08Q6/src/TestMin.java:73 m08Q6/src/TestMoyenne.java:71
#: m08Q7/src/TestMax.java:72 m08Q7/src/TestMin.java:72
#: m08Q7/src/TestMoyenne.java:72 m08dem1/src/TestParam1.java:73
#: m08dem1/src/TestParam2.java:84 m09Q1/src/TestParam.java:90
#: m09Q2/src/TestParam.java:88 m09Q3/src/TestCode.java:74
#: m09Q4/src/TestParam.java:75 m09Q4/src/TestCode.java:73
#: m09Q5/src/TestCode.java:65 m09Q6/src/TestCode.java:68
#: m09Q7/src/TestCode.java:69 m09dem1/src/TestParam.java:88
#: m09dem2/src/TestCode.java:74 m09dem2/src/TestRes.java:74
#: m10Q1/src/Tests.java:86 m10Q2/src/Tests.java:126 m10Q3/src/Tests.java:171
#: m10Q4/src/TestListAdd.java:115 m10Q4/src/TestListContains.java:93
#: m10Q4/src/TestListGet.java:97 m10Q4/src/TestListSet.java:107
#: m10dem1/src/Tests.java:170 m10dem1/src/TestOut.java:93
#: m10dem2/src/TestContenuFichier.java:143
#: m10dem2/src/TestValeurRetour.java:116 m11Q1/src/Tests.java:178
#: m11Q2/src/Tests.java:167 m11Q3/src/Tests.java:118 m11Q4/src/Tests.java:174
#: m11Q5/src/Tests.java:178 m11Q6/src/Tests.java:146 mX1Q19/src/Tests.java:118
Attention,\ vous\ faites\ une\ op\u00e9ration\ sur\ un\ objet\ qui\ vaut\ null\ \!\ Veillez\ \u00e0\ bien\ g\u00e9rer\ ce\ cas.=Atenci\u00f3n haces una operaci\u00f3n en un objeto que es nulo\! Aseg\u00farese de manejar este caso.

#: m01Q10/src/Tests.java:64 m01Q11/src/Tests.java:62 m01Q12/src/Tests.java:65
#: m01Q13/src/Tests.java:64 m01Q14/src/Tests.java:62 m01Q15/src/Tests.java:73
#: m01Q16/src/Tests.java:60 m01Q17/src/Tests.java:77 m01Q18/src/Tests.java:66
#: m01Q2/src/Tests.java:96 m01Q20/src/Tests.java:80 m01Q3/src/Tests.java:69
#: m01Q4/src/Tests.java:64 m01Q5/src/Tests.java:60 m01Q6/src/Tests.java:59
#: m01Q7/src/Tests.java:59 m01Q8/src/Tests.java:64 m01Q9/src/Tests.java:87
#: m01_bf/src/Tests.java:63 m02Q1/src/Tests.java:56 m02Q10/src/Tests.java:62
#: m02Q3/src/Tests.java:78 m02Q4/src/Tests.java:60 m02Q5/src/Tests.java:59
#: m02Q6/src/Tests.java:57 m02Q7/src/Tests.java:60 m02Q8/src/Tests.java:84
#: m02Q9/src/Tests.java:56 m02_bf/src/Tests.java:63 m02dem2/src/Tests.java:67
#: m02dem3/src/Tests.java:72 m02dem4/src/Tests.java:59
#: m02dem5/src/Tests.java:98 m03Q1/src/Tests.java:93 m03Q1/src/Tests.java:96
#: m03Q2/src/Tests.java:67 m03Q2/src/Tests.java:70 m03Q3/src/Tests.java:69
#: m03Q3/src/Tests.java:72 m03Q4/src/Tests.java:73 m03Q4/src/Tests.java:76
#: m03Q5/src/Tests.java:67 m03Q5/src/Tests.java:70 m03Q6/src/Tests.java:66
#: m03Q6/src/Tests.java:69 m03Q7/src/Tests.java:66 m03Q7/src/Tests.java:69
#: m03_bf/src/Tests.java:70 m03dem2/src/Tests.java:75
#: m03dem2/src/Tests.java:78 m03dem3/src/Tests.java:63
#: m03dem3/src/Tests.java:66 m03dem4/src/Tests.java:90
#: m03dem4/src/Tests.java:93 m03dem5/src/Tests.java:61 m04Q1/src/Tests.java:71
#: m04Q1/src/Tests.java:74 m04Q10/src/Tests.java:66 m04Q10/src/Tests.java:69
#: m04Q11/src/Tests.java:65 m04Q11/src/Tests.java:68 m04Q2/src/Tests.java:66
#: m04Q2/src/Tests.java:69 m04Q3/src/Tests.java:72 m04Q3/src/Tests.java:75
#: m04Q4/src/Tests.java:159 m04Q4/src/Tests.java:162 m04Q5/src/Tests.java:74
#: m04Q5/src/Tests.java:77 m04Q6/src/Tests.java:78 m04Q6/src/Tests.java:81
#: m04Q7/src/Tests.java:75 m04Q7/src/Tests.java:78 m04Q8/src/Tests.java:73
#: m04Q8/src/Tests.java:76 m04Q9/src/Tests.java:66 m04Q9/src/Tests.java:69
#: m04_bf/src/Tests.java:84 m04dem1/src/Tests.java:84
#: m04dem2/src/Tests.java:85 m04dem3/src/Tests.java:77
#: m04dem4/src/Tests.java:75 m04dem5/src/Tests.java:103
#: m05Q1/src/Tests.java:78 m05Q1/src/Tests.java:81 m05Q10/src/Tests.java:80
#: m05Q10/src/Tests.java:83 m05Q11/src/Tests.java:84 m05Q11/src/Tests.java:87
#: m05Q12/src/TestsQ1.java:76 m05Q12/src/TestsQ1.java:79
#: m05Q12/src/TestsQ2.java:72 m05Q12/src/TestsQ2.java:75
#: m05Q2/src/Tests.java:79 m05Q2/src/Tests.java:82 m05Q3/src/Tests.java:78
#: m05Q3/src/Tests.java:81 m05Q4/src/Tests.java:77 m05Q4/src/Tests.java:80
#: m05Q5/src/Tests.java:68 m05Q5/src/Tests.java:71 m05Q6/src/Tests.java:73
#: m05Q6/src/Tests.java:76 m05Q7/src/Tests.java:87 m05Q7/src/Tests.java:90
#: m05Q8/src/Tests.java:95 m05Q8/src/Tests.java:98 m05Q9/src/Tests.java:79
#: m05Q9/src/Tests.java:82 m05_bf/src/Tests.java:106
#: m05dem1/src/Tests.java:109 m05dem2/src/Tests.java:85
#: m05dem3/src/Tests.java:70 m05dem4/src/Tests.java:189
#: m05dem5/src/Tests.java:115 m06Q1/src/TestCode.java:75
#: m06Q10/src/TestCode.java:124 m06Q11/src/TestParam.java:81
#: m06Q2/src/TestCode.java:116 m06Q3/src/TestCode.java:85
#: m06Q3/src/TestParam.java:80 m06Q4/src/TestCode.java:98
#: m06Q4/src/TestParam.java:78 m06Q5/src/TestCode.java:100
#: m06Q6/src/TestCode.java:91 m06Q6/src/TestParam.java:80
#: m06Q7/src/TestCode.java:101 m06Q8/src/TestCode.java:103
#: m06Q8/src/TestParam.java:88 m06Q9/src/TestCode.java:121
#: m06_bf/src/TestInspect.java:72 m06_bf/src/TestCode.java:73
#: m06dem1/src/TestCode.java:150 m06dem2/src/TestCode.java:246
#: m06dem3/src/TestCode.java:119 m06dem4/src/TestCode.java:130
#: m07Q1/src/TestParam.java:80 m07Q10/src/TestCode.java:63
#: m07Q11/src/TestParam.java:89 m07Q2/src/TestCode.java:115
#: m07Q3/src/TestParam.java:90 m07Q4/src/TestCode.java:62
#: m07Q5/src/TestCode.java:63 m07Q6/src/TestParam.java:83
#: m07Q7/src/TestCode.java:63 m07Q8/src/TestCode.java:64
#: m07Q9/src/TestCode.java:62 m07_bf/src/TestInspectCD.java:72
#: m07_bf/src/TestItem.java:76 m07_bf/src/TestCD.java:133
#: m07dem1/src/TestCode.java:182 m07dem1/src/TestCode.java:185
#: m07dem2/src/TestCode.java:100 m08Q1/src/TestCode.java:64
#: m08Q2/src/TestCode.java:65 m08Q3/src/TestParam.java:81
#: m08Q4/src/TestAnd.java:89 m08Q4/src/TestGet.java:93
#: m08Q4/src/TestReset.java:92 m08Q4/src/TestRotate.java:88
#: m08Q4/src/TestSet.java:99 m08Q4/src/TestShift.java:88
#: m08Q4/src/TestConstruct.java:63 m08Q5/src/TestGet.java:88
#: m08Q5/src/TestReset.java:91 m08Q5/src/TestRotate.java:93
#: m08Q5/src/TestSet.java:91 m08Q5/src/TestShift.java:93
#: m08Q6/src/TestMax.java:79 m08Q6/src/TestMin.java:79
#: m08Q6/src/TestMoyenne.java:77 m08Q7/src/TestMax.java:78
#: m08Q7/src/TestMin.java:78 m08Q7/src/TestMoyenne.java:78
#: m08dem1/src/TestParam1.java:79 m08dem1/src/TestParam2.java:90
#: m09Q1/src/TestParam.java:96 m09Q2/src/TestParam.java:94
#: m09Q3/src/TestCode.java:80 m09Q4/src/TestParam.java:81
#: m09Q4/src/TestCode.java:79 m09Q5/src/TestCode.java:71
#: m09Q6/src/TestCode.java:74 m09Q6/src/TestCode.java:115
#: m09Q6/src/TestCode.java:132 m09Q6/src/TestCode.java:146
#: m09Q6/src/TestCode.java:148 m09Q6/src/TestCode.java:165
#: m09Q6/src/TestCode.java:173 m09Q6/src/TestCode.java:200
#: m09Q7/src/TestCode.java:75 m09Q7/src/TestCode.java:139
#: m09Q7/src/TestCode.java:152 m09Q7/src/TestCode.java:154
#: m09Q7/src/TestCode.java:173 m09Q7/src/TestCode.java:181
#: m09Q7/src/TestCode.java:199 m09Q7/src/TestCode.java:201
#: m09Q7/src/TestCode.java:228 m09Q7/src/TestCode.java:234
#: m09Q7/src/TestCode.java:236 m09Q7/src/TestCode.java:244
#: m09dem1/src/TestParam.java:94 m09dem2/src/TestCode.java:83
#: m09dem2/src/TestRes.java:83 m10Q1/src/Tests.java:92 m10Q1/src/Tests.java:95
#: m10Q3/src/Tests.java:177 m10Q4/src/TestListAdd.java:122
#: m10Q4/src/TestListContains.java:99 m10Q4/src/TestListGet.java:103
#: m10Q4/src/TestListSet.java:113 m10dem1/src/Tests.java:176
#: m10dem1/src/Tests.java:179 m10dem1/src/TestOut.java:99
#: m10dem1/src/TestOut.java:102 m10dem2/src/TestContenuFichier.java:149
#: m10dem2/src/TestValeurRetour.java:122 m11Q1/src/Tests.java:184
#: m11Q2/src/Tests.java:173 m11Q3/src/Tests.java:124 m11Q4/src/Tests.java:180
#: m11Q5/src/Tests.java:184 m11Q6/src/Tests.java:152 mX1Q19/src/Tests.java:120
Une\ erreur\ inattendue\ est\ survenue\ dans\ votre\ t\u00e2che\ \:\ =Se ha producido un error inesperado en la tarea\: 

#: m01Q11/src/Tests.java:38
#, java-format
La\ moyenne\ entre\ {0,number,\#},\ {1,number,\#}\ et\ {2,number,\#}\ vaut\ {3,number,\#},\ or\ votre\ programme\ calcule\ {4,number,\#}.\n=El promedio de {0,number,\#}, {1,number,\#} y {2,number,\#} es {3,number,\#} y su programa calcula {4,number,\#}.\n

#: m01Q12/src/Tests.java:34 m01Q13/src/Tests.java:33 m01Q3/src/Tests.java:33
Veuillez\ placer\ le\ r\u00e9sultat\ dans\ la\ variable=Coloque el resultado en la variable

#: m01Q12/src/Tests.java:38 m03Q3/src/Tests.java:36
#, java-format
!Le\ maximum\ entre\ les\ variables\ a\={0},\ b\={1}\ et\ c\={2}\ est\ {3}\ or\ votre\ programme\ calcule\ {4}.\n=

#: m01Q13/src/Tests.java:37
#, java-format
!Le\ minimum\ entre\ les\ variables\ a\={0},\ b\={1},\ c\={2}\ et\ d\={3}\ est\ {4}\ or\ votre\ programme\ calcule\ {5}.\n=

#: m01Q14/src/Tests.java:33
#, java-format
!Il\ y\ a\ {0}\ valeurs\ diff\u00e9rentes\ parmi\ {1},\ {2},\ {3}.\nCependant,\ votre\ code\ indique\ qu''il\ y\ en\ a\ {4}.\n=

#: m01Q15/src/Tests.java:34
#, java-format
!Pour\ le\ {0}/{1}/2016\ la\ saison\ est\ ''{2}''\ alors\ que\ votre\ code\ indique\ ''{3}''.\n=

#: m01Q16/src/Tests.java:33
#, java-format
!Pour\ {0}h{1}m{2}s,\ le\ total\ attendu\ est\ {3,number,\#}s\ or\ votre\ code\ indique\ {4,number,\#}s.\n=

#: m01Q17/src/Tests.java:32 m01Q9/src/Tests.java:31 m03Q1/src/Tests.java:32
!est=

#: m01Q17/src/Tests.java:33 m01Q9/src/Tests.java:32 m03Q1/src/Tests.java:33
!n'est\ pas=

#: m01Q17/src/Tests.java:34
#, java-format
!L''ann\u00e9e\ {0,number,\#}\ {1}\ une\ ann\u00e9e\ bissextile.\nCependant,\ votre\ code\ indique\ que\ {0,number,\#}\ {2}\ une\ ann\u00e9e\ bissextile\n=

#: m01Q18/src/Tests.java:31
#, java-format
!L''ann\u00e9e\ {0,number,\#}\ est\ au\ si\u00e8cle\ {1,number,\#}\ or\ votre\ code\ indique\ si\u00e8cle\ {2,number,\#}.\n=

#: m01Q2/src/Tests.java:33
#, java-format
!{0}\ \:\ Un\ v\u00e9hicule\ roulant\ \u00e0\ {1}km/h\ dans\ une\ zone\ limit\u00e9e\ \u00e0\ {2}km/h\ doit\ recevoir\ une\ amende\ de\ {3}\u20ac.\ Cependant,\ votre\ code\ calcule\ {4}\u20ac.\n=

#: m01Q2/src/Tests.java:52 m02Q8/src/Tests.java:65 m04Q4/src/Tests.java:134
#: m05dem4/src/Tests.java:83 m05dem4/src/Tests.java:103
#: m05dem4/src/Tests.java:135 m05dem4/src/Tests.java:161
#: m06Q10/src/TestCode.java:50 m06Q2/src/TestCode.java:41
#: m06Q4/src/TestCode.java:46 m06Q5/src/TestCode.java:40
#: m06Q6/src/TestCode.java:45 m06Q7/src/TestCode.java:45
#: m06Q8/src/TestCode.java:50 m06Q9/src/TestCode.java:50
#: m06_bf/src/TestInspect.java:44 m06_bf/src/TestCode.java:45
#: m06dem1/src/TestCode.java:37 m06dem2/src/TestCode.java:37
#: m06dem3/src/TestCode.java:36 m06dem4/src/TestCode.java:42
#: m07Q10/src/TestCode.java:36 m07Q2/src/TestCode.java:37
#: m07Q4/src/TestCode.java:35 m07Q5/src/TestCode.java:36
#: m07Q7/src/TestCode.java:36 m07Q8/src/TestCode.java:37
#: m07Q9/src/TestCode.java:35 m07_bf/src/TestInspectCD.java:44
#: m07dem1/src/TestCode.java:53 m07dem2/src/TestCode.java:49
#: m08Q1/src/TestCode.java:37 m08Q2/src/TestCode.java:38
#: m08Q4/src/TestConstruct.java:36 m09Q3/src/TestCode.java:52
#: m09Q4/src/TestCode.java:52 m09Q5/src/TestCode.java:43
#: m09Q6/src/TestCode.java:46 m09Q7/src/TestCode.java:48
#: m09dem2/src/TestCode.java:48 m09dem2/src/TestRes.java:48
#: m10Q2/src/Tests.java:77 m10Q2/src/Tests.java:105 m10Q3/src/Tests.java:113
#: m10Q3/src/Tests.java:151 m10dem1/src/Tests.java:151
#: m10dem1/src/TestOut.java:74 m10dem2/src/TestContenuFichier.java:105
#: m10dem2/src/TestValeurRetour.java:99
#, java-format
{0}\ \:\ r\u00e9ussi={0}\: exitoso

#: m01Q2/src/Tests.java:64
!Lorsque\ l'exc\u00e8s\ de\ vitesse\ d\u00e9passe\ 10km/h,\ l'amende\ est\ doubl\u00e9e.\n=

#: m01Q2/src/Tests.java:69 m01Q2/src/Tests.java:74
!Lorsque\ les\ vitesses\ sont\ \u00e9gales,\ l'amende\ doit\ \u00eatre\ de\ z\u00e9ro.\n=

#: m01Q2/src/Tests.java:79
!Pas\ d'amende\ requise\ car\ la\ vitesse\ du\ v\u00e9hicule\ est\ inf\u00e9rieure\ \u00e0\ la\ vitesse\ maximale.\n=

#: m01Q20/src/Tests.java:30
!une\ consonne=

#: m01Q20/src/Tests.java:31
!une\ voyelle=

#: m01Q20/src/Tests.java:32
!un\ chiffre=

#: m01Q20/src/Tests.java:38
#, java-format
!''{0}''\ est\ {1}.\ Cependant,\ votre\ code\ indique\ que\ c''est\ {2}.\n=

#: m01Q3/src/Tests.java:36
#, java-format
!Pour\ une\ personne\ de\ {0}m\ et\ {1}kg,\ votre\ r\u00e9ponse\ {2}\ ne\ correspond\ pas\ \u00e0\ la\ valeur\ attendue\ {3}.\n=

#: m01Q4/src/Tests.java:31
#, java-format
!Lorsque\ la\ voiture\ entre\ en\ section\ {0}\ et\ sort\ en\ section\ {1},\ la\ voiture\ a\ pacouru\ {2}\ section(s)\ et\ le\ prix\ attendu\ est\ {3}\u20ac\ alors\ que\ votre\ code\ calcule\ {4}\u20ac.\n=

#: m01Q5/src/Tests.java:30
#, java-format
!{0}\ XOR\ {1}\ ne\ retourne\ pas\ le\ bon\ r\u00e9sultat.\n=

#: m01Q6/src/Tests.java:30
#, java-format
!Pour\ i\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=

#: m01Q7/src/Tests.java:30
#, java-format
!Pour\ n\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=

#: m01Q8/src/Tests.java:34 m03Q4/src/Tests.java:37
#, java-format
!La\ mediane\ entre\ {0},\ {1}\ et\ {2}\ vaut\ {3},\ or\ votre\ programme\ calcule\ {4}.\n=

#: m01Q9/src/Tests.java:34 m03Q1/src/Tests.java:34
#, java-format
!Le\ nombre\ {0}\ {1}\ dans\ l''intervalle\ [{2},\ {3}].\nCependant,\ votre\ code\ indique\ le\ contraire.\n=

#: m01_bf/src/Tests.java:32
#, java-format
Vous\ affichez\ mal\ la\ suite\ de\ Syracuse\ sur\ la\ sortie\ standard\ quand\ s0\ \=\ {0}.\nLa\ vraie\ suite\ est\ \:\ {1}\nVotre\ suite\ est\ \:\ {2}=No muestra la secuencia Syracuse correctamente en la salida est\u00e1ndar cuando s0 \= {0}.\nLa secuencia de n\u00fameros reales es\: {1}\nSu secuencia num\u00e9rica es\: {2}

#: m01_bf/src/Tests.java:59 m02_bf/src/Tests.java:59 m03_bf/src/Tests.java:66
#: m04Q1/src/Tests.java:67 m04Q10/src/Tests.java:62 m04Q11/src/Tests.java:61
#: m04Q2/src/Tests.java:62 m04Q3/src/Tests.java:68 m04Q4/src/Tests.java:155
#: m04Q5/src/Tests.java:70 m04Q6/src/Tests.java:74 m04Q7/src/Tests.java:71
#: m04Q8/src/Tests.java:69 m04Q9/src/Tests.java:62 m04_bf/src/Tests.java:80
#: m04dem4/src/Tests.java:71 m04dem5/src/Tests.java:99 m05Q1/src/Tests.java:74
#: m05Q10/src/Tests.java:76 m05Q11/src/Tests.java:80
#: m05Q12/src/TestsQ1.java:72 m05Q12/src/TestsQ2.java:68
#: m05Q2/src/Tests.java:75 m05Q3/src/Tests.java:74 m05Q4/src/Tests.java:73
#: m05Q5/src/Tests.java:64 m05Q6/src/Tests.java:69 m05Q7/src/Tests.java:83
#: m05Q8/src/Tests.java:91 m05Q9/src/Tests.java:75 m05_bf/src/Tests.java:102
#: m05dem1/src/Tests.java:105 m05dem2/src/Tests.java:81
#: m05dem3/src/Tests.java:66 m05dem4/src/Tests.java:185
#: m05dem5/src/Tests.java:111 m06Q1/src/TestCode.java:71
#: m06Q10/src/TestCode.java:120 m06Q11/src/TestParam.java:77
#: m06Q2/src/TestCode.java:112 m06Q3/src/TestCode.java:81
#: m06Q3/src/TestParam.java:76 m06Q4/src/TestCode.java:94
#: m06Q4/src/TestParam.java:74 m06Q5/src/TestCode.java:96
#: m06Q6/src/TestCode.java:87 m06Q6/src/TestParam.java:76
#: m06Q7/src/TestCode.java:97 m06Q8/src/TestCode.java:99
#: m06Q8/src/TestParam.java:84 m06Q9/src/TestCode.java:117
#: m06_bf/src/TestInspect.java:68 m06_bf/src/TestCode.java:69
#: m06dem1/src/TestCode.java:146 m06dem2/src/TestCode.java:242
#: m06dem3/src/TestCode.java:115 m06dem4/src/TestCode.java:126
#: m07Q1/src/TestParam.java:76 m07Q10/src/TestCode.java:59
#: m07Q11/src/TestParam.java:85 m07Q2/src/TestCode.java:111
#: m07Q3/src/TestParam.java:86 m07Q4/src/TestCode.java:58
#: m07Q5/src/TestCode.java:59 m07Q6/src/TestParam.java:79
#: m07Q7/src/TestCode.java:59 m07Q8/src/TestCode.java:60
#: m07Q9/src/TestCode.java:58 m07_bf/src/TestInspectCD.java:68
#: m07_bf/src/TestItem.java:72 m07_bf/src/TestCD.java:129
#: m07dem2/src/TestCode.java:96 m08Q1/src/TestCode.java:60
#: m08Q2/src/TestCode.java:61 m08Q3/src/TestParam.java:77
#: m08Q4/src/TestAnd.java:85 m08Q4/src/TestGet.java:89
#: m08Q4/src/TestReset.java:88 m08Q4/src/TestRotate.java:84
#: m08Q4/src/TestSet.java:95 m08Q4/src/TestShift.java:84
#: m08Q4/src/TestConstruct.java:59 m08Q5/src/TestGet.java:84
#: m08Q5/src/TestReset.java:87 m08Q5/src/TestRotate.java:89
#: m08Q5/src/TestSet.java:87 m08Q5/src/TestShift.java:89
#: m08Q6/src/TestMax.java:75 m08Q6/src/TestMin.java:75
#: m08Q6/src/TestMoyenne.java:73 m08Q7/src/TestMax.java:74
#: m08Q7/src/TestMin.java:74 m08Q7/src/TestMoyenne.java:74
#: m08dem1/src/TestParam1.java:75 m08dem1/src/TestParam2.java:86
#: m09Q1/src/TestParam.java:92 m09Q2/src/TestParam.java:90
#: m09Q3/src/TestCode.java:76 m09Q4/src/TestParam.java:77
#: m09Q4/src/TestCode.java:75 m09Q5/src/TestCode.java:67
#: m09Q6/src/TestCode.java:70 m09Q7/src/TestCode.java:71
#: m09dem1/src/TestParam.java:90 m09dem2/src/TestCode.java:77
#: m09dem2/src/TestRes.java:77 m10Q1/src/Tests.java:88
#: m10Q2/src/Tests.java:128 m10Q3/src/Tests.java:173
#: m10Q4/src/TestListAdd.java:117 m10Q4/src/TestListContains.java:95
#: m10Q4/src/TestListGet.java:99 m10Q4/src/TestListSet.java:109
#: m10dem1/src/Tests.java:172 m10dem1/src/TestOut.java:95
#: m10dem2/src/TestContenuFichier.java:145
#: m10dem2/src/TestValeurRetour.java:118 m11Q1/src/Tests.java:180
#: m11Q2/src/Tests.java:169 m11Q3/src/Tests.java:120 m11Q4/src/Tests.java:176
#: m11Q5/src/Tests.java:180 m11Q6/src/Tests.java:148
!Vous\ initialisez\ un\ tableau\ avec\ une\ taille\ n\u00e9gative.=

#: m01_bf/src/Tests.java:61 m02_bf/src/Tests.java:61 m03Q1/src/Tests.java:91
#: m03Q2/src/Tests.java:65 m03Q3/src/Tests.java:67 m03Q4/src/Tests.java:71
#: m03Q5/src/Tests.java:65 m03Q6/src/Tests.java:64 m03Q7/src/Tests.java:64
#: m03_bf/src/Tests.java:68 m03dem2/src/Tests.java:73
#: m03dem3/src/Tests.java:61 m03dem4/src/Tests.java:88
#: m03dem5/src/Tests.java:59 m04Q1/src/Tests.java:69 m04Q10/src/Tests.java:64
#: m04Q11/src/Tests.java:63 m04Q2/src/Tests.java:64 m04Q3/src/Tests.java:70
#: m04Q4/src/Tests.java:157 m04Q5/src/Tests.java:72 m04Q6/src/Tests.java:76
#: m04Q7/src/Tests.java:73 m04Q8/src/Tests.java:71 m04Q9/src/Tests.java:64
#: m04_bf/src/Tests.java:82 m04dem2/src/Tests.java:83
#: m04dem4/src/Tests.java:73 m04dem5/src/Tests.java:101
#: m05Q1/src/Tests.java:76 m05Q10/src/Tests.java:78 m05Q11/src/Tests.java:82
#: m05Q12/src/TestsQ1.java:74 m05Q12/src/TestsQ2.java:70
#: m05Q2/src/Tests.java:77 m05Q3/src/Tests.java:76 m05Q4/src/Tests.java:75
#: m05Q5/src/Tests.java:66 m05Q6/src/Tests.java:71 m05Q7/src/Tests.java:85
#: m05Q8/src/Tests.java:93 m05Q9/src/Tests.java:77 m05_bf/src/Tests.java:104
#: m05dem1/src/Tests.java:107 m05dem2/src/Tests.java:83
#: m05dem3/src/Tests.java:68 m05dem4/src/Tests.java:187
#: m05dem5/src/Tests.java:113 m06Q1/src/TestCode.java:73
#: m06Q10/src/TestCode.java:122 m06Q11/src/TestParam.java:79
#: m06Q2/src/TestCode.java:114 m06Q3/src/TestCode.java:83
#: m06Q3/src/TestParam.java:78 m06Q4/src/TestCode.java:96
#: m06Q4/src/TestParam.java:76 m06Q5/src/TestCode.java:98
#: m06Q6/src/TestCode.java:89 m06Q6/src/TestParam.java:78
#: m06Q7/src/TestCode.java:99 m06Q8/src/TestCode.java:101
#: m06Q8/src/TestParam.java:86 m06Q9/src/TestCode.java:119
#: m06_bf/src/TestInspect.java:70 m06_bf/src/TestCode.java:71
#: m06dem1/src/TestCode.java:148 m06dem2/src/TestCode.java:244
#: m06dem3/src/TestCode.java:117 m06dem4/src/TestCode.java:128
#: m07Q1/src/TestParam.java:78 m07Q10/src/TestCode.java:61
#: m07Q11/src/TestParam.java:87 m07Q2/src/TestCode.java:113
#: m07Q3/src/TestParam.java:88 m07Q4/src/TestCode.java:60
#: m07Q5/src/TestCode.java:61 m07Q6/src/TestParam.java:81
#: m07Q7/src/TestCode.java:61 m07Q8/src/TestCode.java:62
#: m07Q9/src/TestCode.java:60 m07_bf/src/TestInspectCD.java:70
#: m07_bf/src/TestItem.java:74 m07_bf/src/TestCD.java:131
#: m07dem2/src/TestCode.java:98 m08Q1/src/TestCode.java:62
#: m08Q2/src/TestCode.java:63 m08Q3/src/TestParam.java:79
#: m08Q4/src/TestAnd.java:87 m08Q4/src/TestGet.java:91
#: m08Q4/src/TestReset.java:90 m08Q4/src/TestRotate.java:86
#: m08Q4/src/TestSet.java:97 m08Q4/src/TestShift.java:86
#: m08Q4/src/TestConstruct.java:61 m08Q5/src/TestGet.java:86
#: m08Q5/src/TestReset.java:89 m08Q5/src/TestRotate.java:91
#: m08Q5/src/TestSet.java:89 m08Q5/src/TestShift.java:91
#: m08Q6/src/TestMax.java:77 m08Q6/src/TestMin.java:77
#: m08Q6/src/TestMoyenne.java:75 m08Q7/src/TestMax.java:76
#: m08Q7/src/TestMin.java:76 m08Q7/src/TestMoyenne.java:76
#: m08dem1/src/TestParam1.java:77 m08dem1/src/TestParam2.java:88
#: m09Q1/src/TestParam.java:94 m09Q2/src/TestParam.java:92
#: m09Q3/src/TestCode.java:78 m09Q4/src/TestParam.java:79
#: m09Q4/src/TestCode.java:77 m09Q5/src/TestCode.java:69
#: m09Q6/src/TestCode.java:72 m09Q7/src/TestCode.java:73
#: m09dem1/src/TestParam.java:92 m09dem2/src/TestCode.java:80
#: m09dem2/src/TestRes.java:80 m10Q1/src/Tests.java:90
#: m10Q2/src/Tests.java:130 m10Q3/src/Tests.java:175
#: m10Q4/src/TestListAdd.java:119 m10Q4/src/TestListContains.java:97
#: m10Q4/src/TestListGet.java:101 m10Q4/src/TestListSet.java:111
#: m10dem1/src/Tests.java:174 m10dem1/src/TestOut.java:97
#: m10dem2/src/TestContenuFichier.java:147
#: m10dem2/src/TestValeurRetour.java:120 m11Q1/src/Tests.java:182
#: m11Q2/src/Tests.java:171 m11Q3/src/Tests.java:122 m11Q4/src/Tests.java:178
#: m11Q5/src/Tests.java:182 m11Q6/src/Tests.java:150
!Il\ semble\ que\ votre\ code\ boucle.\ Ceci\ peut\ arriver\ si\ votre\ fonction\ s'appelle\ elle-m\u00eame.=

#: m02Q1/src/Tests.java:27
#, java-format
!Le\ reste\ de\ la\ division\ enti\u00e8re\ entre\ {0,number,\#}\ et\ {1,number,\#}\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=

#: m02Q10/src/Tests.java:32
#, java-format
!Le\ nombre\ de\ diviseur\ de\ {0,number,\#}\ est\ {1,number,\#}\ or\ votre\ programme\ calcule\ {2,number,\#}.\n=

#: m02Q3/src/Tests.java:32
#, java-format
!Un\ triangle\ de\ c\u00f4t\u00e9\ {0}\ donne\ \:\n{1}\nVotre\ programme\ affiche\ \:\n{2}\n=

#: m02Q3/src/Tests.java:51 m02Q4/src/Tests.java:38
!Vous\ affichez\ trop\ de\ caract\u00e8res\ \!\ \u26d4=

#: m02Q4/src/Tests.java:34
#, java-format
!Le\ dessin\ de\ la\ lettre\ H\ de\ hauteur\ {0}\ et\ de\ largeur\ {1}\ donne\ \n\n{2}\n\ et\ votre\ programme\ donne\n\n{3}\n=

#: m02Q5/src/Tests.java:34
#, java-format
!Le\ dessin\ de\ la\ lettre\ X\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=

#: m02Q5/src/Tests.java:36 m02Q6/src/Tests.java:35
!Vous\ affichez\ trop\ de\ caract\u00e8res\!=

#: m02Q6/src/Tests.java:33
#, java-format
!Le\ dessin\ de\ la\ lettre\ S\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=

#: m02Q7/src/Tests.java:30
#, java-format
!Le\ calcul\ d''int\u00e9r\u00eats\ avec\ une\ base\ de\ {0,number,\#}\ sur\ {1,number,\#}\ ann\u00e9es\ au\ taux\ d''int\u00e9r\u00eat\ {2,number,\#}\ donne\ {3,number,\#}\ mais\ votre\ programme\ calcule\ {4,number,\#}.\n=

#: m02Q8/src/Tests.java:35 m02Q8/src/Tests.java:40
#, java-format
!V\u00e9rifiez\ que\ vous\ g\u00e9rez\ la\ factorielle\ de\ {0}.\n=

#: m02Q8/src/Tests.java:62
#, java-format
!La\ factorielle\ de\ {0}\ donne\ {1,number,\#},\ pourtant,\ votre\ code\ renvoie\ {2,number,\#}.\n=

#: m02Q9/src/Tests.java:27
#, java-format
!La\ somme\ des\ nombres\ dans\ l''intervalle\ [{0,number,\#},\ {1,number,\#}]\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=

#: m02_bf/src/Tests.java:31
!<rien>=

#: m02_bf/src/Tests.java:33
#, java-format
Vous\ affichez\ mal\ les\ diviseurs\ propres\ sur\ la\ sortie\ standard\ quand\ n\ \=\ {0}.\nVous\ affichez\ \:\n{1}\nIl\ est\ attendu\ \:\n{2}=No muestra divisores limpios en la salida est\u00e1ndar cuando n \= {0}.\nUsted ver\u00e1\:\n{1}\nSe espera\:\n{2}

#: m02dem2/src/Tests.java:36
#, java-format
!Test\ {0}\ \:\ La\ somme\ des\ {1,number,\#}\ entiers\ pairs\ sup\u00e9rieurs\ \u00e0\ z\u00e9ro\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=

#: m02dem3/src/Tests.java:34
#, java-format
!Test\ {0}\ \:\ l''entier\ {1,number,\#}\ exposant\ {2,number,\#}\ vaut\ {3,number,\#}\ et\ votre\ programme\ calcule\ {4,number,\#}.\n=

#: m02dem4/src/Tests.java:30
#, java-format
!Test\ {0}\ \:\ le\ plus\ grand\ diviseur\ entier\ de\ {1,number,\#}\ est\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=

#: m02dem5/src/Tests.java:29
#, java-format
!Test\ {0}\ \:\ le\ test\ de\ nombre\ premier\ sur\ {1,number,\#}\ renvoie\ {2}\ et\ votre\ programme\ renvoie\ {3}.\n=

#: m03Q1/src/librairies/FunctionHelper.java:47
#: m03Q2/src/librairies/FunctionHelper.java:47
#: m03Q3/src/librairies/FunctionHelper.java:47
#: m03Q4/src/librairies/FunctionHelper.java:47
#: m03Q5/src/librairies/FunctionHelper.java:47
#: m03Q6/src/librairies/FunctionHelper.java:47
#: m03Q7/src/librairies/FunctionHelper.java:47
#: m03_bf/src/librairies/FunctionHelper.java:47
#: m03dem2/src/librairies/FunctionHelper.java:47
#: m03dem3/src/librairies/FunctionHelper.java:47
#: m03dem4/src/librairies/FunctionHelper.java:47
#: m03dem5/src/librairies/FunctionHelper.java:47
#: m04Q1/src/librairies/FunctionHelper.java:47
#: m04Q10/src/librairies/FunctionHelper.java:47
#: m04Q11/src/librairies/FunctionHelper.java:47
#: m04Q2/src/librairies/FunctionHelper.java:47
#: m04Q3/src/librairies/FunctionHelper.java:47
#: m04Q4/src/librairies/FunctionHelper.java:47
#: m04Q5/src/librairies/FunctionHelper.java:47
#: m04Q6/src/librairies/FunctionHelper.java:47
#: m04Q7/src/librairies/FunctionHelper.java:47
#: m04Q8/src/librairies/FunctionHelper.java:47
#: m04Q9/src/librairies/FunctionHelper.java:47
#: m05Q1/src/librairies/FunctionHelper.java:47
#: m05Q10/src/librairies/FunctionHelper.java:47
#: m05Q11/src/librairies/FunctionHelper.java:47
#: m05Q12/src/librairies/FunctionHelper.java:47
#: m05Q2/src/librairies/FunctionHelper.java:47
#: m05Q3/src/librairies/FunctionHelper.java:47
#: m05Q4/src/librairies/FunctionHelper.java:47
#: m05Q5/src/librairies/FunctionHelper.java:47
#: m05Q6/src/librairies/FunctionHelper.java:47
#: m05Q7/src/librairies/FunctionHelper.java:47
#: m05Q8/src/librairies/FunctionHelper.java:47
#: m05Q9/src/librairies/FunctionHelper.java:47 m07dem1/src/TestCode.java:70
#: m09Q5/src/librairies/FunctionHelper.java:47
#: m10Q1/src/librairies/FunctionHelperCustom.java:46
#: m10Q3/src/librairies/FunctionHelper.java:47
#: m10dem1/src/librairies/FunctionHelper.java:47
#: m10dem2/src/librairies/FunctionHelper.java:47
#: utilities/FunctionHelper.java:47
#, java-format
!Le\ type\ de\ retour\ de\ votre\ fonction\ doit\ \u00eatre\ du\ type\ {0}\ \!\n=

#: m03Q1/src/librairies/FunctionHelper.java:50
#: m03Q2/src/librairies/FunctionHelper.java:50
#: m03Q3/src/librairies/FunctionHelper.java:50
#: m03Q4/src/librairies/FunctionHelper.java:50
#: m03Q5/src/librairies/FunctionHelper.java:50
#: m03Q6/src/librairies/FunctionHelper.java:50
#: m03Q7/src/librairies/FunctionHelper.java:50
#: m03_bf/src/librairies/FunctionHelper.java:50
#: m03dem2/src/librairies/FunctionHelper.java:50
#: m03dem3/src/librairies/FunctionHelper.java:50
#: m03dem4/src/librairies/FunctionHelper.java:50
#: m03dem5/src/librairies/FunctionHelper.java:50
#: m04Q1/src/librairies/FunctionHelper.java:50
#: m04Q10/src/librairies/FunctionHelper.java:50
#: m04Q11/src/librairies/FunctionHelper.java:50
#: m04Q2/src/librairies/FunctionHelper.java:50
#: m04Q3/src/librairies/FunctionHelper.java:50
#: m04Q4/src/librairies/FunctionHelper.java:50
#: m04Q5/src/librairies/FunctionHelper.java:50
#: m04Q6/src/librairies/FunctionHelper.java:50
#: m04Q7/src/librairies/FunctionHelper.java:50
#: m04Q8/src/librairies/FunctionHelper.java:50
#: m04Q9/src/librairies/FunctionHelper.java:50
#: m05Q1/src/librairies/FunctionHelper.java:50
#: m05Q10/src/librairies/FunctionHelper.java:50
#: m05Q11/src/librairies/FunctionHelper.java:50
#: m05Q12/src/librairies/FunctionHelper.java:50
#: m05Q2/src/librairies/FunctionHelper.java:50
#: m05Q3/src/librairies/FunctionHelper.java:50
#: m05Q4/src/librairies/FunctionHelper.java:50
#: m05Q5/src/librairies/FunctionHelper.java:50
#: m05Q6/src/librairies/FunctionHelper.java:50
#: m05Q7/src/librairies/FunctionHelper.java:50
#: m05Q8/src/librairies/FunctionHelper.java:50
#: m05Q9/src/librairies/FunctionHelper.java:50 m07dem1/src/TestCode.java:73
#: m09Q5/src/librairies/FunctionHelper.java:50
#: m10Q1/src/librairies/FunctionHelperCustom.java:49
#: m10Q3/src/librairies/FunctionHelper.java:50
#: m10dem1/src/librairies/FunctionHelper.java:50
#: m10dem2/src/librairies/FunctionHelper.java:50
#: utilities/FunctionHelper.java:50
#, java-format
!Votre\ fonction\ doit\ prendre\ {0}\ argument(s)\ \!\n=

#: m03Q1/src/librairies/FunctionHelper.java:54
#: m03Q2/src/librairies/FunctionHelper.java:54
#: m03Q3/src/librairies/FunctionHelper.java:54
#: m03Q4/src/librairies/FunctionHelper.java:54
#: m03Q5/src/librairies/FunctionHelper.java:54
#: m03Q6/src/librairies/FunctionHelper.java:54
#: m03Q7/src/librairies/FunctionHelper.java:54
#: m03_bf/src/librairies/FunctionHelper.java:54
#: m03dem2/src/librairies/FunctionHelper.java:54
#: m03dem3/src/librairies/FunctionHelper.java:54
#: m03dem4/src/librairies/FunctionHelper.java:54
#: m03dem5/src/librairies/FunctionHelper.java:54
#: m04Q1/src/librairies/FunctionHelper.java:54
#: m04Q10/src/librairies/FunctionHelper.java:54
#: m04Q11/src/librairies/FunctionHelper.java:54
#: m04Q2/src/librairies/FunctionHelper.java:54
#: m04Q3/src/librairies/FunctionHelper.java:54
#: m04Q4/src/librairies/FunctionHelper.java:54
#: m04Q5/src/librairies/FunctionHelper.java:54
#: m04Q6/src/librairies/FunctionHelper.java:54
#: m04Q7/src/librairies/FunctionHelper.java:54
#: m04Q8/src/librairies/FunctionHelper.java:54
#: m04Q9/src/librairies/FunctionHelper.java:54
#: m05Q1/src/librairies/FunctionHelper.java:54
#: m05Q10/src/librairies/FunctionHelper.java:54
#: m05Q11/src/librairies/FunctionHelper.java:54
#: m05Q12/src/librairies/FunctionHelper.java:54
#: m05Q2/src/librairies/FunctionHelper.java:54
#: m05Q3/src/librairies/FunctionHelper.java:54
#: m05Q4/src/librairies/FunctionHelper.java:54
#: m05Q5/src/librairies/FunctionHelper.java:54
#: m05Q6/src/librairies/FunctionHelper.java:54
#: m05Q7/src/librairies/FunctionHelper.java:54
#: m05Q8/src/librairies/FunctionHelper.java:54
#: m05Q9/src/librairies/FunctionHelper.java:54 m07dem1/src/TestCode.java:77
#: m09Q5/src/librairies/FunctionHelper.java:54
#: m10Q3/src/librairies/FunctionHelper.java:54
#: m10dem1/src/librairies/FunctionHelper.java:54
#: m10dem2/src/librairies/FunctionHelper.java:54
#: utilities/FunctionHelper.java:54
#, java-format
!L''argument\ n\u00b0{0}\ n''est\ pas\ de\ type\ ''{1}''\ comme\ demand\u00e9\ \!\n=

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60 m07dem1/src/TestCode.java:83
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
!Votre\ fonction\ n'a\ pas\ \u00e9t\u00e9\ d\u00e9finie\ correctement.\ Assurez\ vous\ que\ son\ nom\ est\ correctement\ d\u00e9fini\ \!\n=

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
#, java-format
!Le\ nom\ attendu\ est\ \:\ ''{0}''.\n=

#: m03Q2/src/Tests.java:35
#, java-format
!Le\ surface\ d''un\ rectangle\ de\ longueur\ {0}\ et\ de\ largeur\ {1}\ est\ {2}.\nCependant,\ votre\ code\ calcule\ {3}.\n=

#: m03Q5/src/Tests.java:35
#, java-format
!La\ surface\ d''une\ sph\u00e8re\ de\ rayon\ {0}\ est\ {1}.\nCependant,\ votre\ code\ calcule\ {2}.\n=

#: m03Q6/src/Tests.java:36
#, java-format
!La\ factorielle\ de\ {0,number,\#}\ vaut\ {1,number,\#}\ et\ votre\ programme\ calcule\ {2,number,\#}.\n=

#: m03Q7/src/Tests.java:36
#, java-format
!Avec\ x\={0},\ votre\ code\ ne\ donne\ pas\ la\ bonne\ r\u00e9ponse.\n=

#: m03_bf/src/Tests.java:32
#, java-format
!Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ n\ \=\ {2}.\n=

#: m03_bf/src/Tests.java:33
!Faites\ attention\ au\ cas\ o\u00f9\ n\ est\ n\u00e9gatif.\n=

#: m03dem2/src/Tests.java:44
!Votre\ code\ n'affiche\ pas\ le\ nombre\ le\ plus\ grand.\n=

#: m03dem3/src/Tests.java:35
#, java-format
!Votre\ code\ indique\ que\ impair\ de\ {0}\ est\ {1}\ alors\ que\ cela\ devrait\ \u00eatre\ {2}.\n=

#: m03dem4/src/Tests.java:60
#, java-format
!Le\ dessin\ de\ la\ lettre\ L\ avec\ le\ caract\u00e8re\ {0}\ de\ hauteur\ {1}\ et\ largeur\ {2}\ donne\ \n\n{3}\net\ votre\ programme\ donne\n\n{4}\nAssurez\ vous\ aussi\ de\ ne\ pas\ mettre\ des\ espaces\ inutiles\ dans\ vos\ prints.=

#: m03dem5/src/Tests.java:30
#, java-format
!Le\ nombre\ de\ diviseurs\ entiers\ du\ nombre\ {0}\ est\ {1}.\nCependant,\ votre\ code\ indique\ {2}.\n=

#: m04Q1/src/Tests.java:32 m04Q2/src/Tests.java:30
#, java-format
!Avec\ les\ arguments\ c\="{0}"\ et\ s\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=

#: m04Q10/src/Tests.java:30 m04Q11/src/Tests.java:29 m04Q3/src/Tests.java:30
#: m04Q5/src/Tests.java:30 m04Q7/src/Tests.java:29 m04Q9/src/Tests.java:30
#, java-format
!Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=

#: m04Q4/src/Tests.java:94
!V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ majuscule\ ?\n=

#: m04Q4/src/Tests.java:100
!V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ minuscule\ ?\n=

#: m04Q4/src/Tests.java:106
!V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'un\ chiffre\ ?\n=

#: m04Q4/src/Tests.java:112
!V\u00e9rifiez-vous\ toutes\ les\ conditions\ simultan\u00e9ment\ ?\n=

#: m04Q4/src/Tests.java:118
!V\u00e9rifiez-vous\ la\ longueur\ du\ mot\ de\ passe\ ?\n=

#: m04Q4/src/Tests.java:130
#, java-format
!Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\ {1},\ malheureusement,\ votre\ code\ renvoie\ {2}.\n=

#: m04Q6/src/Tests.java:36 m04Q8/src/Tests.java:36 m04dem5/src/Tests.java:70
#, java-format
!Avec\ les\ arguments\ s1\="{0}"\ et\ s2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=

#: m04_bf/src/Tests.java:34
#, java-format
!Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ p\ \=\ "{2}"\ et\ s\ \=\ "{3}".\n=

#: m04dem3/src/Tests.java:27
#, java-format
!Avec\ les\ arguments\ {1},\ votre\ m\u00e9thode\ doit\ afficher\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=

#: m04dem4/src/Tests.java:44
#, java-format
!Avec\ l''argument\ "{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=

#: m05Q1/src/Tests.java:33 m05Q10/src/Tests.java:32 m05Q11/src/Tests.java:32
#: m05Q12/src/TestsQ1.java:33 m05Q2/src/Tests.java:33 m05Q3/src/Tests.java:33
#: m05Q4/src/Tests.java:31 m05Q7/src/Tests.java:34 m05dem4/src/Tests.java:74
!Votre\ m\u00e9thode\ modifie\ le\ contenu\ du\ tableau\ pass\u00e9\ en\ argument.\ Une\ telle\ modification\ n'est\ autoris\u00e9e\ que\ si\ elle\ est\ explicitement\ indiqu\u00e9e\ dans\ les\ sp\u00e9cifications.\ Ce\ n'est\ pas\ le\ cas\ pour\ cette\ m\u00e9thode.\n=

#: m05Q1/src/Tests.java:40
#, java-format
!Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}.\n=

#: m05Q10/src/Tests.java:31
#, java-format
!L''appel\ de\ votre\ m\u00e9thode\ avec\ a\ \=\ {0}\ et\ b\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=

#: m05Q11/src/Tests.java:31
#, java-format
!L''appel\ de\ votre\ m\u00e9thode\ avec\ n\ \=\ {0}\ et\ v\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=

#: m05Q12/src/TestsQ1.java:32 m05Q9/src/Tests.java:31
#, java-format
!L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ retourne\ {1}\ au\ lieux\ de\ {2}=

#: m05Q12/src/TestsQ2.java:32
#, java-format
!L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ doit\ donner\ {1}.\nOr,\ vos\ modifications\ du\ tableau\ donnent\ {2}=

#: m05Q2/src/Tests.java:40 m05Q3/src/Tests.java:40
#, java-format
!Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1,number,\#}\ mais\ elle\ retourne\ {2,number,\#}.\n=

#: m05Q4/src/Tests.java:38
#, java-format
!Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}\ mais\ elle\ retourne\ {2}.\n=

#: m05Q5/src/Tests.java:33 m05Q6/src/Tests.java:38 m05dem3/src/Tests.java:39
!Votre\ code\ retourne\ null.=

#: m05Q5/src/Tests.java:34
!Votre\ tableau\ n'a\ pas\ la\ bonne\ taille.=

#: m05Q5/src/Tests.java:36
!Un\ des\ \u00e9l\u00e9ment\ de\ votre\ tableau\ n'a\ pas\ la\ bonne\ valeur.=

#: m05Q6/src/Tests.java:31 m05dem3/src/Tests.java:32
#, java-format
!Avec\ une\ taille\ de\ {0},\ votre\ code\ g\u00e9n\u00e8re\ \:\n\n{1}\n\nOr,\ vous\ devriez\ avoir\ \:\ \n\n{2}=

#: m05Q6/src/Tests.java:32 m05dem3/src/Tests.java:33
!Votre\ matrice\ n'a\ pas\ la\ bonne\ taille.\n=

#: m05Q7/src/Tests.java:33
#, java-format
!Votre\ code\ retourne\ {0}\ \u00e0\ la\ place\ de\ {1}\ avec\ l''occurence\ {2}\ et\ le\ tableau\ \:\n\n{3}\n=

#: m05Q7/src/Tests.java:79 m05Q8/src/Tests.java:87
!Cette\ exception\ est\ survenue\ quand\ le\ tableau\ est\ \:\n=

#: m05Q8/src/Tests.java:33
#, java-format
!L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ et\ w\ \=\ {1}\ et\ m\ \=\ \n{2}\nretourne\n{3}\nau\ lieux\ de\n{4}=

#: m05_bf/src/Tests.java:35
#, java-format
!Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau.\nLe\ tableau\ original\ est\ \:\n{1}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{2}\nVotre\ tableau\ est\ \:\n{3}=

#: m05_bf/src/Tests.java:36
#, java-format
!Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau\ avec\ n\ \=\ {1}.\nLe\ tableau\ original\ est\ \:\n{2}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{3}\nVotre\ tableau\ est\ \:\n{4}=

#: m05dem1/src/Tests.java:33
#, java-format
!Le\ tableau\ doit\ avoir\ une\ taille\ de\ {1}.\ Cependant,\ votre\ code\ cr\u00e9e\ un\ tableau\ de\ taille\ {2}.\n=

#: m05dem1/src/Tests.java:34
#, java-format
!La\ matrice\ devrait\ avoir\ {1}\ lignes\ et\ {2}\ colonnes.\ Cependant,\ votre\ code\ cr\u00e9e\ une\ matrice\ de\ {3}\ lignes\ et\ {4}\ colonnes.=

#: m05dem1/src/Tests.java:36
!Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ lignes.\n=

#: m05dem1/src/Tests.java:37
!Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ colonnes.\n=

#: m05dem2/src/Tests.java:33
!Le\ test\ t1\ \=\=\ t2\ ne\ r\u00e9ussi\ pas.\n=

#: m05dem2/src/Tests.java:34
#, java-format
!Avec\ t1\ \=\ {1}\ et\ t2\ \=\ {2},\ votre\ code\ ne\ donne\ pas\ le\ bon\ r\u00e9sultat.=

#: m05dem2/src/Tests.java:77
!Les\ deux\ tableaux\ ne\ sont\ pas\ forc\u00e9ment\ de\ la\ m\u00eame\ taille\u2026=

#: m05dem4/src/Tests.java:71
#, java-format
!{0}\ \:\ vous\ utilisez\ mal\ les\ assertions.=

#: m05dem4/src/Tests.java:79
#, java-format
!{0}\ \:\ votre\ code\ retourne\ null.=

#: m05dem4/src/Tests.java:81
#, java-format
!{0}\ \:\ votre\ code\ ne\ calcule\ pas\ la\ somme\ correctement.=

#: m05dem4/src/Tests.java:106 m05dem4/src/Tests.java:109
#, java-format
!{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ a\ et/ou\ b\ est\ null.=

#: m05dem4/src/Tests.java:106
!Faites\ aussi\ attention\ \u00e0\ l''ordre\ de\ vos\ assertions.\ Par\ exemple,\ l''assertion\ qui\ v\u00e9rifie\ que\ ''a''\ est\ diff\u00e9rent\ de\ null\ doit\ venir\ avant\ l''assertion\ qui\ v\u00e9rifie\ la\ taille\ de\ la\ matrice\ car\ sinon,\ vous\ allez\ provoquer\ une\ NullPointerException.=

#: m05dem4/src/Tests.java:140
#, java-format
!{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ lignes/colonnes\ ne\ sont\ pas\ TOUTES\ de\ le\ m\u00eame\ longeur\ (si\ un\ des\ double\ tableaux\ est\ arrang\u00e9\ sous\ forme\ triangle\ par\ exemple).=

#: m05dem4/src/Tests.java:166
#, java-format
!{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ matrices\ ne\ sont\ pas\ de\ la\ m\u00eame\ taille.=

#: m05dem5/src/Tests.java:59
!Vous\ n'affichez\ pas\ correctement\ les\ Strings\ pr\u00e9sents\ dans\ args.\ N'oubliez\ pas\ de\ faire\ un\ retour\ \u00e0\ la\ ligne\ apr\u00e8s\ chaque\ \u00e9l\u00e9ment\ de\ args.=

#: m05dem5/src/Tests.java:91
#, java-format
!Avec\ args\ \=\ {0}\ vous\ affichez\ ''{1}''\ alors\ qu''il\ faut\ afficher\ ''{2}''.\n=

#: m06Q1/src/TestCode.java:40
#, java-format
!lorsque\ on\ fait\ new\ Date({0},{1},{2}),\ votre\ date\ est\ {3}/{4}/{5}=

#: m06Q10/src/TestCode.java:68
#, java-format
!{0}\ \:\ vous\ devez\ utiliser\ la\ m\u00e9thode\ surface()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ surfaces\ \!=

#: m06Q10/src/TestCode.java:96
#, java-format
!{0}\ \:\ lorsque\ l''on\ compare\ les\ rectangle\ {1}\ et\ {2},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!=

#: m06Q11/src/TestParam.java:63
#, java-format
!Lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ rectangles\ {0}\ et\ {1},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ le\ cas\ \!=

#: m06Q2/src/TestCode.java:58
#, java-format
!{0}\ \:\ lorsque\ l''on\ fait\ getJour()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q2/src/TestCode.java:73
#, java-format
!{0}\ \:\ lorsque\ l''on\ fait\ getMois()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q2/src/TestCode.java:89
#, java-format
!{0}\ \:\ lorsque\ l''on\ fait\ getAnnee()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q3/src/TestCode.java:62 m06Q4/src/TestCode.java:74
#: m06Q8/src/TestCode.java:67 m06Q9/src/TestCode.java:65
#: m06dem1/src/TestCode.java:56 m07Q2/src/TestCode.java:91
#: m07dem1/src/TestCode.java:158
#, java-format
!{0}\ \:\ vous\ devez\ utiliser\ les\ getters\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!=

#: m06Q3/src/TestParam.java:62
#, java-format
!Test\ 2\ \:\ Attention,\ pour\ les\ date\ {0}\ et\ {1},\ votre\ code\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ la\ cas\ \!=

#: m06Q4/src/TestParam.java:60
#, java-format
!Test\ 2\ \:\ Attention,\ pour\ la\ date\ {0}\ vous\ renvoyez\ {1}\ \u00e0\ la\ place\ de\ {2}=

#: m06Q5/src/TestCode.java:59
#, java-format
!{0}\ \:\ lorsque\ la\ fraction\ vaut\ {1},\ votre\ m\u00e9thode\ getNum()\ retourne\ {2}\ au\ lieu\ de\ {3}=

#: m06Q5/src/TestCode.java:74
#, java-format
!Test\ \:\ lorsque\ la\ fraction\ vaut\ {0},\ votre\ m\u00e9thode\ getDen()\ retourne\ {1}\ au\ lieu\ de\ {2}=

#: m06Q6/src/TestCode.java:66
#, java-format
!{0}\ \:\ vous\ devez\ utiliser\ les\ m\u00e9thodes\ getNum()\ et\ getDen()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!=

#: m06Q6/src/TestParam.java:62
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ lance\ la\ fonction\ entier()\ avec\ la\ fraction\ {0},\ votre\ code\ devrait\ renvoyer\ {1}\ mais\ ce\ n''est\ pas\ le\ cas.=

#: m06Q7/src/TestCode.java:59
#, java-format
!{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getX()\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q7/src/TestCode.java:76
#, java-format
!{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getY()\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q8/src/TestParam.java:70
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ points\ {0}\ et\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06Q9/src/TestCode.java:92
#, java-format
!{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ le\ rectangle\ {1},\ elle\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m06_bf/src/librairies/Inspector.java:216
#: m07_bf/src/librairies/Inspector.java:168 utilities/Inspector.java:168
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:220
#: m07_bf/src/librairies/Inspector.java:172 utilities/Inspector.java:172
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:223
#: m07_bf/src/librairies/Inspector.java:175 utilities/Inspector.java:175
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:226
#: m07_bf/src/librairies/Inspector.java:178 utilities/Inspector.java:178
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:291
#: m07_bf/src/librairies/Inspector.java:243 utilities/Inspector.java:243
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {4}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:295
#: m07_bf/src/librairies/Inspector.java:247 utilities/Inspector.java:247
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:298
#: m07_bf/src/librairies/Inspector.java:250 utilities/Inspector.java:250
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:301
#: m07_bf/src/librairies/Inspector.java:253 utilities/Inspector.java:253
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/TestCode.java:126 m06_bf/src/TestCode.java:150
#: m06_bf/src/TestCode.java:174 m06_bf/src/TestCode.java:197
#: m06_bf/src/TestCode.java:221
#, java-format
!{0}\ \:\ aucun\ constructeur\ public\ prenant\ comme\ premier\ param\u00e8tre\ un\ String\ et\ comme\ deuxi\u00e8me\ un\ float\ n''as\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m06_bf/src/TestCode.java:127
#, java-format
!{0}\ \:\ lorsque\ l''on\ construit\ un\ nouvel\ objet\ Employe\ avec\ comme\ param\u00e8tre\ {1}\ et\ {2,number,\#},\ il\ n''y\ a\ pas\ de\ variable\ d''instance\ avec\ la\ valeur\ {3}\ \!=

#: m06_bf/src/TestCode.java:130
#, fuzzy
!Une\ erreur\ inattendu\ est\ survenue\ dans\ votre\ t\u00e2che,\ veuillez\ contactez\ une\ administrateur=Se ha producido un error inesperado en la tarea\: 

#: m06_bf/src/TestCode.java:151
#, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ le\ nom\ {1},\ votre\ m\u00e9thode\ getNom()\ retourne\ {2}=

#: m06_bf/src/TestCode.java:157 m06_bf/src/TestCode.java:180
#: m06_bf/src/TestCode.java:203 m06_bf/src/TestCode.java:230
#, java-format
!{0}\ \:\ la\ m\u00e9thode\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!=

#: m06_bf/src/TestCode.java:177
#, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ un\ salaire\ de\ {1},\ votre\ m\u00e9thode\ getSalaire()\ retourne\ {2}=

#: m06_bf/src/TestCode.java:200
#, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ l''Employe\ {1}\ avec\ le\ salaire\ {2},\ votre\ m\u00e9thode\ toString\ retourn\ {3}=

#: m06_bf/src/TestCode.java:226
#, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ Employe\ avec\ un\ salaire\ de\ {1}\ et\ que\ l''on\ augmente\ de\ {2},\ votre\ m\u00e9thode\ fixe\ son\ salaire\ \u00e0\ {3}=

#: m06dem1/src/TestCode.java:70
#, java-format
!{0}\ \:\ Il\ semblerait\ que\ votre\ m\u00e9thode\ renvoie\ un\ r\u00e9sultat\ incorrect.\ La\ m\u00e9thode\ doit\ renvoyer\ une\ nouvelle\ paire\ \!=

#: m06dem1/src/TestCode.java:92
#, java-format
!{0}\ \:\ Votre\ m\u00e9thode\ ne\ renvoie\ pas\ une\ paire\ avec\ les\ bonne\ valeurs.\ Pour\ la\ pair\ ({1},{2}),\ vous\ renvoyez\ ({3},{4})\ au\ lieu\ de\ ({5},{6}).=

#: m06dem1/src/TestCode.java:115
#, java-format
!{0}\ \:\ Votre\ m\u00e9thode\ semble\ modifier\ les\ variable\ d''instances\ de\ l''instance\ appelante.\ La\ paire\ appelante\ vallait\ ({1},{2})\ et\ vaut\ maintenant\ ({3},{4}).=

#: m06dem2/src/TestCode.java:61
#, java-format
!{0}\ \:\ vous\ devez\ utilisez\ setOrdered()\ pour\ changer\ la\ valeur\ de\ ''ordered''\ \!=

#: m06dem2/src/TestCode.java:77
#, java-format
!{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6}\ mais\ ce\ n''est\ pas\ le\ cas=

#: m06dem2/src/TestCode.java:113
#, java-format
!{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setB({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6},\ mais\ ce\ n''est\ pas\ le\ cas=

#: m06dem2/src/TestCode.java:144
#, java-format
!{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ ''a''\ vaut\ {2}\ au\ lieu\ de\ {3}=

#: m06dem2/src/TestCode.java:145
#, java-format
!{0}\:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}=

#: m06dem2/src/TestCode.java:189
#, java-format
!{0}\ \:\ apr\u00e8s\ l''appel\ setB({1}),\ ''b''\ vaut\ {2}\ au\ lieu\ de\ {3}=

#: m06dem2/src/TestCode.java:190
#, java-format
!{0}\ \:\ apr\u00e8s\ l''appel\ setB({0})\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}=

#: m06dem3/src/TestCode.java:65
#, java-format
!{0}\ \:\ Vous\ devez\ utiliser\ la\ m\u00e9thode\ get()\ pour\ r\u00e9cup\u00e9rer\ la\ valeur\ du\ drapeau\ \!=

#: m06dem3/src/TestCode.java:80
#, java-format
!{0}\ \:\ lorsque\ ''d''\ a\ l''\u00e9tat\ {1}\ et\ que\ la\ variable\ drapeau\ vaut\ {2},\ votre\ m\u00e9thode\ devrait\ retourner\ {3}\ mais\ ce\ n''est\ pas\ le\ cas.=

#: m06dem4/src/TestCode.java:53
#, java-format
!{0}\ \:\ Attention,\ vous\ ne\ lisez\ pas\ toutes\ les\ lignes\ du\ fichier,\ v\u00e9rifiez\ la\ condition=

#: m06dem4/src/TestCode.java:60
#, java-format
!{0}\ \:\ V\u00e9rifiez\ votre\ condition,\ vous\ avez\ provoqu\u00e9\ une\ EOFException\ \!=

#: m06dem4/src/TestCode.java:77
#, java-format
!{0}\ \:\ Le\ fichier\ ''student/cotes.txt''\ n''est\ pas\ lu\ correctement.\ V\u00e9rifiez\ la\ condition\ de\ boucle\ \!=

#: m06dem4/src/TestCode.java:98
#, java-format
!{0}\ \:\ Vous\ avez\ caus\u00e9\ une\ FileNotfoundException,\ v\u00e9rifiez\ le\ nom\ du\ fichier\ \!=

#: m07Q1/src/TestParam.java:62
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ l'employ\u00e9\ {0}\ par\ rapport\ \u00e0\ l'objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m07Q10/src/TestCode.java:80
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyez\ le\ bon\ String.\ Vous\ renvoyez\n''{1}''\ \u00e0\ la\ place\ de\n''{2}''=

#: m07Q10/src/TestCode.java:101
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ utiliser\ la\ m\u00e9thode\ toString()\ de\ la\ classe\ m\u00e8re=

#: m07Q11/src/TestParam.java:71
#, java-format
!Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ le\ DeStats\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m07Q2/src/TestCode.java:55
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ nom\ de\ l''employ\u00e9\ \!=

#: m07Q2/src/TestCode.java:70
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ salaire\ de\ l''employ\u00e9\ \!=

#: m07Q3/src/TestParam.java:72
#, java-format
!Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ d\u00e9\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m07Q4/src/TestCode.java:75
#, java-format
!{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ nom\ \!=

#: m07Q4/src/TestCode.java:89
#, java-format
!{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ salaire\ \!=

#: m07Q4/src/TestCode.java:103
#, java-format
!{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ la\ bonne\ prime\ \!=

#: m07Q5/src/TestCode.java:81
#, java-format
!{0}\ \:\ vous\ devez\ faire\ appel\ \u00e0\ la\ m\u00e9thode\ getSalaire()\ de\ la\ classe\ m\u00e8re\ \!=

#: m07Q5/src/TestCode.java:100
#, java-format
!{0}\ \:\ Pour\ le\ directeur\ {1},\ votre\ m\u00e9thode\ renvoie\ {2,number,\#}\ au\ lieu\ de\ {3,number,\#}=

#: m07Q6/src/TestParam.java:65
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ directeur\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m07Q7/src/TestCode.java:76
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStat\ avec\ le\ bon\ nom\ \!=

#: m07Q7/src/TestCode.java:91
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStats\ avec\ le\ bon\ nombre\ de\ lancers\ totaux\ \!=

#: m07Q7/src/TestCode.java:106
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ (il\ est\ null)\ \!=

#: m07Q7/src/TestCode.java:121
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ la\ bonne\ taille\ \!=

#: m07Q7/src/TestCode.java:137
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ les\ bonnes\ valeurs\ \!=

#: m07Q8/src/TestCode.java:81
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ r\u00e9sultat\ donn\u00e9\ par\ le\ d\u00e9=

#: m07Q8/src/TestCode.java:101
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ \!=

#: m07Q8/src/TestCode.java:120
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ pour\ un\ r\u00e9sultat\ particulier\ \!=

#: m07Q8/src/TestCode.java:141
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ appeler\ la\ m\u00e9thode\ lance()\ de\ la\ classe\ m\u00e8re=

#: m07Q9/src/TestCode.java:76
#, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ tableau\ de\ r\u00e9sultats=

#: m07_bf/src/TestItem.java:57
#, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ l''item\ qui\ a\ comme\ auteur\ {1},\ comme\ titre\ {2}\ et\ comme\ num\u00e9ros\ de\ s\u00e9rie\ {3,number,\#},\ votre\ m\u00e9thode\ renvoie\ ''{4}''\ au\ lieu\ de\ ''{5}''=

#: m07_bf/src/TestCD.java:102
#, java-format
!{0}\ \:\ aucun\ constructeur\ avec\ comme\ premier\ param\u00e8tre\ un\ String,\ comme\ deuxi\u00e8me\ un\ String\ et\ comme\ trois\u00e8me\ un\ int\ n''a\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:106
!{0}\ \:\ apr\u00e8s\ avoir\ appel\u00e9\ votre\ constructeur\ avec\ les\ param\u00e8tre\ {1}\ (auteur),\ {2}\ (titre}\ et\ {3}\ (dur\u00e9e),\ il\ manque\ certaines\ variables\ d''instance\ avec\ ces\ valeurs\ \!=

#: m07_bf/src/TestCD.java:111
!La\ m\u00e9thode\ toString()\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:114
#, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ toString()\ sur\ le\ CD\ ayant\ pour\ auteur\ {1},\ titre\ {2},\ et\ dur\u00e9e\ {3,number,\#},\ votre\ m\u00e9thode\ retourne\n{4}\n\ au\ lieu\ de\n{5}=

#: m07dem1/src/TestCode.java:123
#, java-format
!{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ les\ paires\ {1}\ et\ {2},\ votre\ code\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!=

#: m07dem2/src/TestCode.java:60
#, java-format
!{0}\ \:\ votre\ classe\ n''incr\u00e9mente\ pas\ les\ tickets\ \!=

#: m07dem2/src/TestCode.java:75
#, java-format
!{0}\ \:\ le\ premier\ ticket\ n''as\ pas\ le\ num\u00e9ro\ 1,\ il\ a\ le\ num\u00e9ro\ {1}=

#: m08Q1/src/TestCode.java:103 m08Q1/src/TestCode.java:124
#: m08Q1/src/TestCode.java:144
#, java-format
!{0}\ \:\ votre\ code\ construit\ une\ instance\ o\u00f9\ s\ est\ null\ \!=

#: m08Q1/src/TestCode.java:106
#, java-format
!{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ StringTab\ de\ taille\ 1\ \!=

#: m08Q1/src/TestCode.java:127
#, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ constructeur\ avec\ comme\ param\u00e8tre\ {1},\ la\ premi\u00e8re\ lettre\ de\ votre\ StringTab\ est\ {2}=

#: m08Q1/src/TestCode.java:147
#, java-format
!{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ vous\ construisez\ un\ String\ de\ taille\ {2}=

#: m08Q1/src/TestCode.java:164
#, java-format
!{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ votre\ tableau\ est\ {2}=

#: m08Q1/src/TestCode.java:181
#, java-format
!{0}\ lorsque\ l''on\ utilise\ votre\ m\u00e9thode\ length()\ sur\ le\ StringTab\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}=

#: m08Q1/src/TestCode.java:199
#, java-format
!{0}\ lorsque\ l''on\ a\ le\ tableau\ {1}\ et\ que\ l''on\ fait\ charAt({2}),\ votre\ m\u00e9thode\ renvoie\ {3}=

#: m08Q2/src/TestCode.java:109
#, java-format
!{0}\ \:\ lorsque\ l''on\ concat\u00e8ne\ {1}\ avec\ {2},\ votre\ code\ renvoie\ {2}=

#: m08Q3/src/TestParam.java:63
#, java-format
!Lorsque\ l''on\ v\u00e9rifie\ que\ le\ StringTab\ {0}\ apparait\ dans\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m08Q4/src/TestAnd.java:71
#, java-format
!Test\ 8\ \:\ lorsque\ l''on\ fait\ un\ ET\ logique\ entre\ les\ ByteString\ {0}\ et\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ retourne\ le\ Byte\ {2}\ au\ lieu\ de\ {3}\ (repr\u00e9sentation\ String)=

#: m08Q4/src/TestGet.java:75
#, java-format
!Test\ 3\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ getBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ naturelle\ est\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}.=

#: m08Q4/src/TestReset.java:73
#, java-format
!Test\ 5\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ resetBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=

#: m08Q4/src/TestRotate.java:70
#, java-format
!Test\ 7\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=

#: m08Q4/src/TestSet.java:80
#, java-format
!Test\ 4\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ setBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=

#: m08Q4/src/TestShift.java:70
#, java-format
!Test\ 6\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=

#: m08Q4/src/TestConstruct.java:82
#, java-format
!{0}\ \:\ votre\ code\ construit\ le\ byte\ {1}\ (repr\u00e9sentation\ naturelle)\ au\ lieu\ du\ byte\ 00000000\ (repr\u00e9sentation\ naturelle)=

#: m08Q4/src/TestConstruct.java:83
#, java-format
!{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ String\ de\ taille\ 8=

#: m08Q4/src/TestConstruct.java:104
#, java-format
!{0}\ \:\ lorsque\ l''on\ passe\ comme\ argument\ {1}\ \u00e0\ votre\ constructeur,\ il\ cr\u00e9e\ le\ byte\ {2}\ (repr\u00e9sentation\ naturelle)=

#: m08Q4/src/TestConstruct.java:108
#, java-format
!{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ byte\ de\ taille\ 8=

#: m08Q5/src/TestGet.java:70
#, java-format
!Test\ 1\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ getBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ renvoie\ {2}\ au\ lieu\ de\ {3}=

#: m08Q5/src/TestReset.java:73
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ resetBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=

#: m08Q5/src/TestRotate.java:75
#, java-format
!Test\ 5\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ String\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=

#: m08Q5/src/TestSet.java:73
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ setBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=

#: m08Q5/src/TestShift.java:75
#, java-format
!Test\ 4\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ byte\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=

#: m08Q6/src/TestMax.java:61
#, java-format
!Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ max()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=

#: m08Q6/src/TestMin.java:61
#, java-format
!Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ min()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=

#: m08Q6/src/TestMoyenne.java:59
#, java-format
!Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ moyenne()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=

#: m08Q7/src/TestMax.java:60
#, java-format
!Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ max()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=

#: m08Q7/src/TestMin.java:60
#, java-format
!Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ min()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=

#: m08Q7/src/TestMoyenne.java:60
#, java-format
!Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ moyenne()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=

#: m08dem1/src/TestParam1.java:61
#, java-format
!Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set({0})\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}=

#: m08dem1/src/TestParam2.java:72
#, java-format
!Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set(''{0}'')\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}\n=

#: m09Q1/src/TestParam.java:67
#, java-format
!Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ la\ fraction\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=

#: m09Q2/src/TestParam.java:70
#, java-format
!Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ l''employ\u00e9\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=

#: m09Q3/src/TestCode.java:93 m09Q4/src/TestCode.java:92
#: m09Q7/src/TestCode.java:88
#, java-format
!{0}\ \:\ vous\ devez\ utiliser\ un\ BufferedReader\ \!=

#: m09Q3/src/TestCode.java:115
#, java-format
!{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close\ lorsque\ la\ m\u00e9thode\ se\ termine\ sans\ erreur\ \!=

#: m09Q3/src/TestCode.java:131
#, java-format
!{0}\ \:\ votre\ code\ ne\ compte\ pas\ le\ bon\ nombre\ de\ lignes\ \!=

#: m09Q3/src/TestCode.java:155
#, java-format
!{0}\ \:\ vous\ ne\ renvoyez\ pas\ -1\ lorsqu''une\ erreur\ se\ produit\ \!=

#: m09Q3/src/TestCode.java:159 m09Q3/src/TestCode.java:183
#: m09Q4/src/TestCode.java:119 m09Q4/src/TestCode.java:194
#: m09Q7/src/TestCode.java:116
#, java-format
!{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ bien\ les\ IOExceptions\ \!=

#: m09Q3/src/TestCode.java:187 m09Q4/src/TestCode.java:198
#, java-format
!{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsqu''une\ exception\ apparait\ \!=

#: m09Q4/src/TestParam.java:64
!\ Test\ 1\ \:\ votre\ code\ en\ renvoie\ pas\ le\ bon\ r\u00e9sultat\ \!=

#: m09Q4/src/TestCode.java:115
#, java-format
!{0}\ \:\ vous\ ne\ renvoyez\ pas\ false\ lorsqu''une\ erreur\ se\ produit\ \!=

#: m09Q4/src/TestCode.java:139
#, java-format
!{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ un\ String\ se\ trouvant\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!=

#: m09Q4/src/TestCode.java:168
#, java-format
!{0}\ \:\ lorsque\ le\ String\ ''s''\ ne\ se\ trouve\ pas\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!=

#: m09Q5/src/TestCode.java:93
#, java-format
!{0}\ \:\ lorsque\ le\ fichier\ n''existe\ pas,\ votre\ m\u00e9thode\ devrait\ renvoyer\ false\ mais\ ce\ n''est\ pas\ le\ cas\ \!=

#: m09Q5/src/TestCode.java:108
#, java-format
!{0}\ \:\ lorsque\ le\ fichier\ existe\ et\ est\ accessible,\ votre\ m\u00e9thode\ devrait\ renvoyer\ true\ mais\ ce\ n''est\ pas\ le\ cas\ \!=

#: m09Q6/src/TestCode.java:89 m09Q6/src/TestCode.java:121
#, java-format
!{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ les\ exceptions\ \!=

#: m09Q6/src/TestCode.java:123
#, java-format
!{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close()\ \!=

#: m09Q6/src/TestCode.java:194
#, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ tableau\ {1}\nle\ contenu\ de\ votre\ fichier\ est\n{2}\nau\ lieu\ de\ \n{3}=

#: m09Q7/src/TestCode.java:111
#, java-format
!{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsqu''une\ IOException\ se\ produit\ \!=

#: m09Q7/src/TestCode.java:120
#, java-format
!{0}\ \:\ lorsqu''une\ IOException\ surgit,\ vous\ ne\ fermez\ pas\ le\ flux=

#: m09Q7/src/TestCode.java:144
#, java-format
!{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ \!=

#: m09Q7/src/TestCode.java:148
#, java-format
!{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ le\ cas\ ou\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffre\ \!=

#: m09Q7/src/TestCode.java:150
#, java-format
!{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffres\ \!=

#: m09Q7/src/TestCode.java:207
#, java-format
!{0}\ \:\ lorsque\ l''on\ lit\ le\ fichier\ suivant\n{1}\ avec\ votre\ m\u00e9thode,\ vous\ renvoyez\ {2}\ au\ lieu\ de\ {3}\ \!=

#: m09Q7/src/TestCode.java:242
#, java-format
!{0}\ \:\ lorsque\ tout\ se\ d\u00e9roule\ sans\ exception,\ vous\ ne\ fermez\ pas\ le\ flux\ \!=

#: m09dem1/src/TestParam.java:66
#, java-format
!Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ qu''ils\ sont\ \u00e9gaux\ \!=

#: m09dem1/src/TestParam.java:67
#, java-format
!Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ <\ {1}=

#: m09dem1/src/TestParam.java:68
#, java-format
!Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ >\ {1}=

#: m09dem2/src/TestCode.java:98
#, java-format
!{0}\ \:\ attention,\ lorsqu''une\ exception\ est\ lanc\u00e9e,\ votre\ code\ doit\ renvoyer\ -1\ \!=

#: m09dem2/src/TestCode.java:103
#, java-format
!{0}\ \:\ attention,\ vous\ ne\ g\u00e9rer\ pas\ les\ exceptions\ \!=

#: m09dem2/src/TestRes.java:99
#, java-format
!{0}\ \:\ vous\ ne\ lisez\ pas\ bien\ le\ fichier,\ le\ r\u00e9sultat\ n'est\ pas\ celui\ attendu\ \!=

#: m10Q1/src/Tests.java:53
#, java-format
!Avec\ les\ fractions\ f1\="{0}"\ et\ f2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=

#: m10Q2/src/Tests.java:49
#, java-format
!{0}\ \:\ le\ test\ avec\ une\ fraction\ avec\ 0\ au\ d\u00e9nominateur\ ne\ fonctionne\ pas\ \:\ =

#: m10Q2/src/Tests.java:54
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ string\ null\ ne\ fonctionne\ pas\ \:\ =

#: m10Q2/src/Tests.java:59
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ string\ non-conforme\ au\ format\ "a/b"\ ne\ fonctionne\ pas\ \:\ =

#: m10Q2/src/Tests.java:65
!lancez-vous\ la\ bonne\ exception\ ?\ \n=

#: m10Q2/src/Tests.java:66
!v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ ce\ cas.\ \n=

#: m10Q2/src/Tests.java:86
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ fonctionne\ pas\ \:\ =

#: m10Q2/src/Tests.java:92
!respectez\ vous\ le\ format\ "a/b"\ ?\n=

#: m10Q2/src/Tests.java:93
!modifiez-vous\ les\ variables\ d'instances\ de\ la\ classe\ Fraction\ ?\n=

#: m10Q3/src/Tests.java:85
#, java-format
!{0}\ \:\ le\ test\ de\ parsing\ d'un\ string\ qui\ n'est\ pas\ un\ double\ ne\ passe\ pas\ \:\ =

#: m10Q3/src/Tests.java:90
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ sup\u00e9rieure\ \u00e0\ 20\ ne\ passe\ pas\ \:\ =

#: m10Q3/src/Tests.java:95
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ n\u00e9gative\ ne\ passe\ pas\ \:\ =

#: m10Q3/src/Tests.java:101
!vous\ ne\ lancez\ pas\ la\ bonne\ exception.\n=

#: m10Q3/src/Tests.java:102
!vous\ ne\ lancez\ pas\ une\ exception\ dans\ les\ cas\ particuliers.\n=

#: m10Q3/src/Tests.java:122 m10Q3/src/Tests.java:127
#, java-format
!{0}\ \:\ les\ cotes\ sont\ comprises\ entre\ 0\ et\ 20\ \!\n=

#: m10Q3/src/Tests.java:132
#, java-format
!{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ passe\ pas\ \:\ =

#: m10Q3/src/Tests.java:138
!vous\ ne\ respectez\ pas\ le\ format\ "nom;\ cote1,\ cote2,\ cote3"\ avec\ les\ cotes\ <\=20\ et\ >\=0.\n=

#: m10Q3/src/Tests.java:139
!vous\ n'initialisez\ pas\ correctement\ les\ variables\ d'instances\ de\ la\ classe\ Student.\n=

#: m10Q4/src/TestListAdd.java:83 m10Q4/src/TestListGet.java:71
#: m10Q4/src/TestListSet.java:75
#, java-format
{0}\ \:\ rat\u00e9\ \:\ ={0}\: perdido\: 

#: m10Q4/src/TestListAdd.java:84
#, java-format
!la\ fonction\ add\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=

#: m10Q4/src/TestListAdd.java:93 m10Q4/src/TestListContains.java:77
#: m10Q4/src/TestListGet.java:77 m10Q4/src/TestListSet.java:85
#, java-format
{0}\ \:\ r\u00e9ussi\n={0}\: exitoso\n

#: m10Q4/src/TestListAdd.java:95
!votre\ m\u00e9thode\ add()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\!\ G\u00e9rez\ le\ cas\ avec\ index\ >\ length()\ \!\n=

#: m10Q4/src/TestListAdd.java:98 m10Q4/src/TestListSet.java:90
!votre\ m\u00e9thode\ add()\ lance\ une\ exception\ \!\ V\u00e9rifiez\ que\ vous\ g\u00e9rez\ tous\ les\ cas\ possibles.\n=

#: m10Q4/src/TestListContains.java:72
#, java-format
{0}\ \:\ rat\u00e9={0}\: perdido

#: m10Q4/src/TestListContains.java:73
#, java-format
!\ \:\n\ La\ fonction\ contains\ avec\ la\ liste\n{1}\net\ l''objet\ {2}\ doit\ renvoyer\ {3},\ pourtant,\ votre\ code\ renvoie\ {4}.\n=

#: m10Q4/src/TestListGet.java:72
#, java-format
!la\ fonction\ get\ avec\ la\ liste\n{1}\net\ l''index\ {2}\ doit\ renvoyer\ {3},\ pourtant,\ votre\ code\ renvoie\ {4}.\n=

#: m10Q4/src/TestListGet.java:79
!votre\ m\u00e9thode\ get()\ lance\ une\ exception\ \!\ V\u00e9rifiez\ que\ vous\ g\u00e9rez\ tous\ les\ cas\ possibles.\n=

#: m10Q4/src/TestListSet.java:76
#, java-format
!la\ fonction\ set\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=

#: m10Q4/src/TestListSet.java:87
!votre\ m\u00e9thode\ add()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ \!\n=

#: m10Q5/src/VectorTest.java:46
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =

#: m10Q5/src/VectorTest.java:52
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ {2}=

#: m10Q5/src/VectorTestMock.java:32
!g\u00e9n\u00e8re\ une\ IOException=

#: m10Q5/src/VectorTestMock.java:33
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =

#: m10Q5/src/VectorTestMock.java:34
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ null=

#: m10Q5/src/VectorTestMock.java:65
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ une\ IOException\ lanc\u00e9e\ par\ le\ readLine()\ du\ BufferedReader,\ le\ fichier\ n'a\ pas\ \u00e9t\u00e9\ ferm\u00e9\ correctement.=

#: m10Q5/src/VectorTestMock.java:129
!n'existe\ pas=

#: m10dem1/src/Tests.java:42
!v\u00e9rifiez\ l'output\ sur\ la\ sortie\ standard\ (stdOut).\n=

#: m10dem1/src/Tests.java:43
!v\u00e9rifiez\ l'output\ sur\ la\ sortie\ d'erreur\ standard\ (stdErr).\n=

#: m10dem1/src/Tests.java:44 m10dem1/src/TestOut.java:26
!v\u00e9rifiez\ les\ valeurs\ de\ retour\ de\ votre\ programme.\n=

#: m10dem1/src/Tests.java:45 m10dem1/src/TestOut.java:27
!v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ les\ exceptions.\n=

#: m10dem1/src/Tests.java:82
!la\ division\ par\ 0\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=

#: m10dem1/src/Tests.java:90
!le\ parsing\ d''un\ String\ compos\u00e9\ de\ lettres\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=

#: m10dem1/src/TestOut.java:49
!tous\ les\ arguments\ ne\ sont\ pas\ v\u00e9rifi\u00e9s\ \!\ Appelez\ divise\ avec\ tous\ les\ arguments\ \!\n=

#: m10dem2/src/TestContenuFichier.java:47
!Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs\ ou\ vous\ ne\ fermez\ votre\ flux.\n=

#: m10dem2/src/TestContenuFichier.java:48
!Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs=

#: m10dem2/src/TestContenuFichier.java:49
!Vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=

#: m10dem2/src/TestContenuFichier.java:50
!vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=

#: m10dem2/src/TestContenuFichier.java:118
!\ et\ =

#: m10dem2/src/TestValeurRetour.java:51
!La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ il\ y\ a\ une\ IOException.=

#: m10dem2/src/TestValeurRetour.java:72
!La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ tout\ se\ d\u00e9roule\ bien.=

#: m11Q1/Templates/PileInt.java:99 m11Q2/Templates/Pile.java:110
!Pile\ vide\n=

#: m11Q1/Templates/PileInt.java:107 m11Q2/Templates/Pile.java:118
!Attention\ \:\ votre\ pile\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ pile\ provoque\ une\ boucle\ infinie\u2026=

#: m11Q1/Templates/PileInt.java:109
#, java-format
!Sommet\ \:\ Noeud[{0}]\nProfondeur\ \:\ {1}\n=

#: m11Q1/Templates/PileInt.java:113 m11Q2/Templates/Pile.java:124
#: m11Q3/Templates/FIFOQueue.java:118 m11Q6/Templates/Liste.java:143
#, java-format
!Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ Noeud[{2}]\n=

#: m11Q1/Templates/PileInt.java:116 m11Q2/Templates/Pile.java:127
#: m11Q3/Templates/FIFOQueue.java:121 m11Q6/Templates/Liste.java:146
#, java-format
!Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ null\n=

#: m11Q1/Templates/PileInt.java:120
#, java-format
!Attention\ \:\ la\ variable\ d''instance\ ''{0}''\ ({1})\ ne\ correspond\ pas\ au\ nombre\ d''entiers\ sur\ la\ pile.\n=

#: m11Q1/src/Tests.java:40 m11Q2/src/Tests.java:40
#, java-format
!Vous\ ne\ retournez\ pas\ le\ bon\ sommet\ de\ la\ pile.\ Quand\ le\ sommet\ est\ {0},\ votre\ m\u00e9thode\ pop()\ retourne\ {1}=

#: m11Q1/src/Tests.java:41 m11Q2/src/Tests.java:41
!Voici\ l'\u00e9volution\ de\ votre\ pile\ durant\ les\ tests\ afin\ que\ vous\ puissiez\ corriger\ votre\ code\ \:\n\n=

#: m11Q1/src/Tests.java:55
!Lorsque\ l'on\ ex\u00e9cute\ votre\ m\u00e9thode\ pop()\ sur\ une\ pile\ vide,\ elle\ ne\ lance\ pas\ l'exception\ IllegalStateException.\n=

#: m11Q1/src/Tests.java:79 m11Q1/src/Tests.java:85
!Le\ sommet\ de\ votre\ pile\ vaut\ null\ apr\u00e8s\ un\ push().\n=

#: m11Q1/src/Tests.java:80
!L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 4\ apr\u00e8s\ un\ push(4).\n=

#: m11Q1/src/Tests.java:81
!La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 1\ apr\u00e8s\ un\ push().\n=

#: m11Q1/src/Tests.java:86
!L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 6\ apr\u00e8s\ un\ push(6).\n=

#: m11Q1/src/Tests.java:87
!La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 2\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=

#: m11Q1/src/Tests.java:88
!Le\ noeud\ suivant\ du\ sommet\ vaut\ null\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=

#: m11Q1/src/Tests.java:89
!L'\u00e9l\u00e9ment\ suivant\ du\ sommet\ (l'\u00e9l\u00e9ment\ tout\ en\ dessous\ de\ la\ pile)\ ne\ vaut\ pas\ 4\ apr\u00e8s\ avoir\ effectu\u00e9\ push(4)\ suivi\ d'un\ push(6).\n=

#: m11Q1/src/Tests.java:142 m11Q2/src/Tests.java:134
!Pile\ apr\u00e8s\ l'op\u00e9ration\ \:\ =

#: m11Q1/src/Tests.java:166 m11Q2/src/Tests.java:155
!Cette\ erreur\ est\ survenue\ quand\ la\ pile\ est\ \:\n=

#: m11Q2/Templates/Pile.java:120
#, java-format
!Sommet\ \:\ Noeud[{0}]\n=

#: m11Q2/src/Tests.java:75
#, java-format
!Votre\ m\u00e9thode\ depth()\ retourne\ {0}\ alors\ que\ la\ v\u00e9ritable\ profondeur\ est\ {1}.\ Voici\ la\ pile\ \:\n\n{2}=

#: m11Q2/src/Tests.java:79
!Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ pile.\ C'est\ inacceptable.=

#: m11Q2/src/Tests.java:93
!Votre\ m\u00e9thode\ pop()\ doit\ retourner\ null\ si\ la\ pile\ est\ vide.\n=

#: m11Q3/Templates/FIFOQueue.java:95 m11Q4/Templates/Queue.java:109
!Queue\ vide\n=

#: m11Q3/Templates/FIFOQueue.java:97 m11Q4/Templates/Queue.java:111
#: m11Q5/Templates/OrderedList.java:132 m11Q5/Templates/OrderedList.java:134
#, java-format
!Attention\ ''{0}''\ pointe\ vers\ null\ mais\ pas\ ''{1}''\ \!\n=

#: m11Q3/Templates/FIFOQueue.java:105 m11Q4/Templates/Queue.java:119
!Attention\ \:\ votre\ queue\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ queue\ provoque\ une\ boucle\ infinie\u2026\n=

#: m11Q3/Templates/FIFOQueue.java:107 m11Q4/Templates/Queue.java:121
#, java-format
!Entr\u00e9e\ \:\ Noeud[{0}]\n=

#: m11Q3/Templates/FIFOQueue.java:110 m11Q4/Templates/Queue.java:124
#, java-format
!Attention\ \:\ ''{0}''\ pointe\ vers\ un\ noeud\ non\ pr\u00e9sent\ dans\ la\ queue\ \!\n=

#: m11Q3/Templates/FIFOQueue.java:112 m11Q4/Templates/Queue.java:126
#, java-format
!Sortie\ \:\ Noeud[{0}]\n=

#: m11Q3/Templates/FIFOQueue.java:114 m11Q4/Templates/Queue.java:128
#, java-format
!Attention\ ''{0}''\ pointe\ vers\ null\ \!\n=

#: m11Q3/src/Tests.java:40 m11Q4/src/Tests.java:96
!Quand\ la\ queue\ est\ vide,\ vous\ devez\ retourner\ null.\n=

#: m11Q3/src/Tests.java:56
!Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ retournez\ null\ \!\n=

#: m11Q3/src/Tests.java:57
!Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ vous\ ne\ le\ retournez\ pas\ correctment.\n=

#: m11Q3/src/Tests.java:58 m11Q3/src/Tests.java:59 m11Q4/src/Tests.java:115
#: m11Q4/src/Tests.java:116
#, java-format
!Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ queue\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=

#: m11Q3/src/Tests.java:97 m11Q4/src/Tests.java:153
#, java-format
!Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=

#: m11Q3/src/Tests.java:98 m11Q4/src/Tests.java:154 m11Q5/src/Tests.java:158
#, java-format
!Vous\ avez\ retourn\u00e9\ {0}\ alors\ que\ la\ r\u00e9ponse\ attendue\ est\ {1}.\ Le\ queue\ est\ \:\n{2}=

#: m11Q3/src/Tests.java:106 m11Q4/src/Tests.java:162
!Cette\ erreur\ est\ survenue\ quand\ la\ queue\ est\ \:\n=

#: m11Q4/Templates/Queue.java:131 m11Q4/Templates/Queue.java:132
#: m11Q5/Templates/OrderedList.java:148 m11Q5/Templates/OrderedList.java:149
#, java-format
!Noeud[{0}]=

#: m11Q4/Templates/Queue.java:133 m11Q5/Templates/OrderedList.java:150
#, java-format
!Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ pr\u00e9c\u00e9rent\ \:\ {2},\ noeud\ suivant\ \:\ {3}\n=

#: m11Q4/src/Tests.java:53 m11Q4/src/Tests.java:54
#, java-format
!Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=

#: m11Q4/src/Tests.java:55
#, java-format
!Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=

#: m11Q4/src/Tests.java:56
!Quand\ la\ queue\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=

#: m11Q4/src/Tests.java:76
#, java-format
!Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=

#: m11Q5/Templates/OrderedList.java:130 m11Q6/Templates/Liste.java:129
!Liste\ vide\n=

#: m11Q5/Templates/OrderedList.java:142 m11Q6/Templates/Liste.java:137
!Attention\ \:\ votre\ liste\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ liste\ provoque\ une\ boucle\ infinie\u2026\n=

#: m11Q5/Templates/OrderedList.java:144
#, java-format
!Min\ \:\ Noeud[{0}]\n=

#: m11Q5/Templates/OrderedList.java:145
#, java-format
!Max\ \:\ Noeud[{0}]\n=

#: m11Q5/src/Tests.java:53 m11Q5/src/Tests.java:54
#, java-format
!Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=

#: m11Q5/src/Tests.java:55
#, java-format
!Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=

#: m11Q5/src/Tests.java:56
!Quand\ la\ liste\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=

#: m11Q5/src/Tests.java:76
#, java-format
!Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=

#: m11Q5/src/Tests.java:102
!Vous\ ne\ lancez\ pas\ une\ IllegalStateException\ quand\ on\ essaye\ de\ retirer\ un\ \u00e9l\u00e9ment\ alors\ que\ la\ liste\ est\ vide.\n=

#: m11Q5/src/Tests.java:119 m11Q5/src/Tests.java:120
#, java-format
!Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ liste\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=

#: m11Q5/src/Tests.java:157
#, java-format
!Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=

#: m11Q5/src/Tests.java:166 m11Q6/src/Tests.java:134
!Cette\ erreur\ est\ survenue\ quand\ la\ liste\ est\ \:\n=

#: m11Q6/Templates/Liste.java:139
#, java-format
!T\u00eate\ \:\ Noeud[{0}]\n=

#: m11Q6/src/Tests.java:81
!Vous\ devez\ retourner\ 0\ quand\ la\ liste\ est\ vide.\n=

#: m11Q6/src/Tests.java:116
!Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ liste.\ C'est\ inacceptable.\n=

#: m11Q6/src/Tests.java:117
#, java-format
!{0}("{1}")\ a\ retourn\u00e9\ {2}\ avec\ la\ liste\ \:\n{3}=

#: m11Q6/src/Tests.java:126
#, java-format
!Vous\ retournez\ {0}\ alors\ qu''il\ faut\ retourner\ {1}\ lors\ de\ l''appel\ de\ {2}("{3}")\ sur\ la\ liste\ \:\n{4}=

#: m11Q6/src/Tests.java:129
#, java-format
!Votre\ m\u00e9thode\ {0}("{1}")\ ne\ retire\ pas\ correctement\ les\ \u00e9l\u00e9ments.\nLa\ liste\ est\ \:\n{2}\nVotre\ liste\ modifi\u00e9e\ est\ \:\n{3}\nLa\ liste\ attendue\ est\ \:\n{4}=

#: mX1Q19/src/Tests.java:33
#, java-format
!{1}\ en\ valeur\ absolue\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n=

#: mX1Q19/src/Tests.java:34
#, java-format
!{1}\ arrondi\ au\ dessus\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n=

#: mX1Q19/src/Tests.java:35
#, java-format
!{1}\ arrondi\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n=

#: mX1Q19/src/Tests.java:36
#, java-format
!{1}\ arrondi\ en\ dessous\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n=

#: m01Q12/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ Math.max,\ m\u00eame\ en\ commentaires.=

#: m01Q13/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ Math.min,\ m\u00eame\ en\ commentaires.=

#: m01Q5/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ l'op\u00e9rateur\ xor\ (^)\ de\ java,\ m\u00eame\ en\ commentaires.=

#: m02Q1/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ le\ modulo\ de\ java,\ m\u00eame\ en\ commentaires.=

#: m02dem3/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ Math.pow,\ m\u00eame\ en\ commentaires.=

#: m04Q10/custom_translatable.py:29 m04Q9/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ une\ m\u00e9thode\ de\ parsing\ d\u00e9j\u00e0\ impl\u00e9ment\u00e9e,\ m\u00eame\ en\ commentaires.=

#: m04Q6/custom_translatable.py:29 m04Q8/custom_translatable.py:29
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ contains()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=

#: m04Q8/custom_translatable.py:33
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ indexOf()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=

#: m04dem3/custom_translatable.py:29
!Vous\ n'avez\ pas\ besoin\ de\ l'instruction\ return\ dans\ cet\ exercice\ \!\ Observez\ la\ signature\ de\ votre\ m\u00e9thode.=

#: m04dem4/custom_translatable.py:29
!Vous\ n'utilisez\ pas\ la\ m\u00e9thode\ Character.toUpperCase().=

#: m04dem4/custom_translatable.py:36
!Il\ est\ interdit\ d'utiliser\ autre\ chose\ que\ Character.toUpperCase(),\ m\u00eame\ en\ commentaires.=

#: utilities/exmaples/custom_translatable.py:31
!Il\ est\ interdit\ d'utiliser\ ?????,\ m\u00eame\ en\ commentaires.=
