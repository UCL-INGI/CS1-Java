author: François MICHEL
context: Voici quelques questions QCM pour vérifier votre compréhension de la Mission
  2 du cours, après lecture du livre de référence.
environment: mcq
limits: {memory: '100', output: '2', time: '30'}
name: 'Mission 2: Question de démarrage 1: Les bases'
network_grading: false
order: 24
problems:
  q1:
    choices:
    - {text: Une partie de la mémoire réservée pour contenir des données, valid: true}
    - {text: Un morceau d'information qui peut être manipulé par un programme}
    - {text: Un ensemble de valeurs contigues dans la mémoire auxquelles on peut accéder
        en fonction de leur position dans la mémoire}
    - {text: Une entité abstraite qui possède un ensemble d'attributs et d'opérations
        qui lui sont propres.}
    - {text: Une liste d'entités qui disposent chacune de la référence vers l'entité
        suivante de la liste}
    - {text: 'Une chaine de caractères, dans le code du programme, qui se situe devant
        le caractère "="'}
    header: Quelle est la définition la plus appropriée pour une variable ?
    limit: 3
    name: Choix multiple
    type: multiple_choice
  q2:
    choices:
    - {text: Une partie de la mémoire réservée pour contenir des données}
    - {text: Un morceau d'information qui peut être manipulé par un programme, valid: true}
    - {text: Une entité abstraite qui possède un ensemble d'attributs et d'opérations
        qui lui sont propres.}
    - {text: Une suite d'instructions exécutables ou non par un programme}
    - {text: Un entier ou un caractère}
    header: Quelle est la définition la plus appropriée pour une valeur ?
    limit: 3
    name: Choix multiple
    type: multiple_choice
  q3:
    choices:
    - {text: ".. code-block:: java\n\n    int a = 1;\n    int b = 2;\n    int c =\
        \ 3;\n    a = c;\n    b = a;\n    c = b;\n    a = c;\n    // ...\n"}
    - {text: ".. code-block:: java\n\n    int a = 1;\n    while(a < 10){\n       \
        \ // do something\n        a++;\n    }", valid: true}
    - {feedback: '"while ... do" n''existe pas en Java. ', text: ".. code-block::\
        \ java\n\n    int a = 1;\n    while(a < 10) do {\n        // do something\n\
        \        a++;\n    }"}
    - {text: ".. code-block:: java\n\n    for(int i = 0 ; i < 37 ; i++){\n       \
        \ // do something iterative\n    }", valid: true}
    - {feedback: Cette boucle n'est pas écrite en Java, text: ".. code-block:: bash\n\
        \n    for i in 1..15\n    do\n        # do something in bash\n    done\n"}
    - {feedback: Ce n'est pas une boucle mais un branchement ``if``, text: ".. code-block::\
        \ java\n\n    int a = 1;\n    if(a < 10){\n        // do something conditionnaly\n\
        \    }\n    else{\n        // do something otherwise\n    }"}
    header: Selon vous, quelle portion de code correspond le mieux à une boucle en
      Java ?
    limit: 3
    name: Choix multiple
    type: multiple_choice
  q4:
    choices:
    - {feedback: La variable pi est de type ``int`` et ne peut contenir que des entiers.,
      text: ".. code-block:: java\n\n    int pi = 3.1415;\n    int rayon = 3;\n  \
        \  int perimetre = 2*pi*r;\n    // ..."}
    - {feedback: Il faut utiliser ``System.out.println()`` et non ``println()``, text: "..\
        \ code-block:: java\n\n    for(int i = 0 ; i < 10 ; i++){\n        // affiche\
        \ i à l'écran\n        println(i);\n    }"}
    - {feedback: 'Dans les parenthèses du ``for``, il faut mettre des ";" et non des
        ",".', text: ".. code-block:: java\n\n    for(int i = 0 , i < 10 , i++){\n\
        \        System.out.println(i);\n    }"}
    - {text: ".. code-block:: java\n\n    int i = 1\n    while(i < 10){\n        System.out.println(i)\n\
        \        i++\n    }"}
    - {text: ".. code-block:: java\n\n    int a = 1;\n    int b = 2;\n    if (a -\
        \ b < 0){\n        System.out.println(-(a-b));\n    }\n    else{\n       \
        \ System.out.println(a-b);\n    }", valid: true}
    - {feedback: Correct. System.out.print permet d'afficher sans mettre un retour
        à la ligne à la fin., text: ".. code-block:: java\n\n    for(int i = 1 ; i\
        \ <= 10 ; i++){\n        System.out.print(i);\n    }", valid: true}
    - {feedback: Ne compile pas car ``a`` n'est pas initialisée., text: ".. code-block::\
        \ java\n\n    int a;\n    int b = 2;\n    if (a - b < 0){\n        System.out.println(-(a-b));\n\
        \    }\n    else{\n        System.out.println(a-b);\n    }"}
    header: Lequel de ces bouts de programmes ne va causer aucune erreur de compilation
      ?
    limit: 3
    name: Choix multiple
    type: multiple_choice
