# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
!=Project-Id-Version\: \nReport-Msgid-Bugs-To\: \nPOT-Creation-Date\: 2017-09-15 15\:04+0200\nPO-Revision-Date\: 2017-09-15 13\:07+0000\nLast-Translator\: Olivier MARTIN <olivier.martin@student.uclouvain.be>\nLanguage-Team\: English <http\://weblate.info.ucl.ac.be/projects/inginious/lfsab1401/en/>\nLanguage\: en\nMIME-Version\: 1.0\nContent-Type\: text/plain; charset\=UTF-8\nContent-Transfer-Encoding\: 8bit\nPlural-Forms\: nplurals\=2; plural\=n \!\= 1;\nX-Generator\: Weblate 2.16\n

#: utilities/run.py:164
La\ limite\ de\ m\u00e9moire\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=The memory limit of your program is exceeded

#: utilities/run.py:167
La\ limite\ de\ temps\ d'ex\u00e9cution\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=The time limit for your program is exceeded

#: utilities/run.py:172 utilities/run.py:190
Il\ semble\ que\ vous\ ayiez\ fait\ des\ erreurs\ dans\ votre\ code\u2026\n\n=It seems that you made mistakes in your code \u2026\n\n

#: utilities/run.py:186
Vous\ avez\ bien\ r\u00e9pondu\ \u00e0\ cette\ question=You answered this question well

#: utilities/run.py:195
Le\ programme\ ne\ compile\ pas\ \:\ \n=The program does not compile \: \n

#: utilities/run.py:203
Impossible\ de\ d\u00e9coder\ le\ config.json=Unable to decode config.json

#: m01Q10/src/Tests.java:33
#, java-format
{0}\ <\ {1}\ <\ {2}\ est\ {3}\ mais\ votre\ code\ indique\ {4}.\n={0} < {1} < {2} is {3} but your code indicates {4}.\n

#: m01Q10/src/Tests.java:54 m01Q11/src/Tests.java:52 m01Q12/src/Tests.java:55
#: m01Q13/src/Tests.java:54 m01Q14/src/Tests.java:52 m01Q15/src/Tests.java:63
#: m01Q16/src/Tests.java:50 m01Q17/src/Tests.java:67 m01Q18/src/Tests.java:56
#: m01Q2/src/Tests.java:86 m01Q20/src/Tests.java:70 m01Q3/src/Tests.java:59
#: m01Q4/src/Tests.java:54 m01Q5/src/Tests.java:50 m01Q6/src/Tests.java:49
#: m01Q7/src/Tests.java:49 m01Q8/src/Tests.java:54 m01Q9/src/Tests.java:77
#: m01_bf/src/Tests.java:49 m02Q1/src/Tests.java:46 m02Q10/src/Tests.java:52
#: m02Q3/src/Tests.java:68 m02Q4/src/Tests.java:50 m02Q5/src/Tests.java:49
#: m02Q6/src/Tests.java:47 m02Q7/src/Tests.java:50 m02Q8/src/Tests.java:74
#: m02Q9/src/Tests.java:46 m02_bf/src/Tests.java:49 m02dem2/src/Tests.java:57
#: m02dem3/src/Tests.java:62 m02dem4/src/Tests.java:49
#: m02dem5/src/Tests.java:88 m03Q1/src/Tests.java:81 m03Q2/src/Tests.java:55
#: m03Q3/src/Tests.java:57 m03Q4/src/Tests.java:61 m03Q5/src/Tests.java:55
#: m03Q6/src/Tests.java:54 m03Q7/src/Tests.java:54 m03_bf/src/Tests.java:56
#: m03dem2/src/Tests.java:63 m03dem3/src/Tests.java:51
#: m03dem4/src/Tests.java:78 m03dem5/src/Tests.java:49 m04Q1/src/Tests.java:57
#: m04Q10/src/Tests.java:52 m04Q11/src/Tests.java:51 m04Q2/src/Tests.java:52
#: m04Q3/src/Tests.java:58 m04Q4/src/Tests.java:145 m04Q5/src/Tests.java:60
#: m04Q6/src/Tests.java:64 m04Q7/src/Tests.java:61 m04Q8/src/Tests.java:59
#: m04Q9/src/Tests.java:52 m04_bf/src/Tests.java:70 m04dem1/src/Tests.java:74
#: m04dem2/src/Tests.java:73 m04dem3/src/Tests.java:67
#: m04dem4/src/Tests.java:61 m04dem5/src/Tests.java:89 m05Q1/src/Tests.java:64
#: m05Q10/src/Tests.java:66 m05Q11/src/Tests.java:70
#: m05Q12/src/TestsQ1.java:62 m05Q12/src/TestsQ2.java:58
#: m05Q2/src/Tests.java:65 m05Q3/src/Tests.java:64 m05Q4/src/Tests.java:63
#: m05Q5/src/Tests.java:54 m05Q6/src/Tests.java:59 m05Q7/src/Tests.java:71
#: m05Q8/src/Tests.java:79 m05Q9/src/Tests.java:65 m05_bf/src/Tests.java:92
#: m05dem1/src/Tests.java:95 m05dem2/src/Tests.java:71
#: m05dem3/src/Tests.java:56 m05dem4/src/Tests.java:175
#: m05dem5/src/Tests.java:101 m06Q1/src/TestCode.java:61
#: m06Q10/src/TestCode.java:110 m06Q11/src/TestParam.java:67
#: m06Q2/src/TestCode.java:102 m06Q3/src/TestCode.java:71
#: m06Q3/src/TestParam.java:66 m06Q4/src/TestCode.java:84
#: m06Q4/src/TestParam.java:64 m06Q5/src/TestCode.java:86
#: m06Q6/src/TestCode.java:77 m06Q6/src/TestParam.java:66
#: m06Q7/src/TestCode.java:87 m06Q8/src/TestCode.java:89
#: m06Q8/src/TestParam.java:74 m06Q9/src/TestCode.java:107
#: m06_bf/src/TestInspect.java:57 m06_bf/src/TestCode.java:58
#: m06dem1/src/TestCode.java:136 m06dem2/src/TestCode.java:232
#: m06dem3/src/TestCode.java:105 m06dem4/src/TestCode.java:116
#: m07Q1/src/TestParam.java:66 m07Q10/src/TestCode.java:49
#: m07Q11/src/TestParam.java:75 m07Q2/src/TestCode.java:101
#: m07Q3/src/TestParam.java:76 m07Q4/src/TestCode.java:48
#: m07Q5/src/TestCode.java:49 m07Q6/src/TestParam.java:69
#: m07Q7/src/TestCode.java:49 m07Q8/src/TestCode.java:50
#: m07Q9/src/TestCode.java:48 m07_bf/src/TestInspectCD.java:57
#: m07_bf/src/TestItem.java:62 m07_bf/src/TestCD.java:119
#: m07dem1/src/TestCode.java:172 m07dem2/src/TestCode.java:86
#: m08Q1/src/TestCode.java:50 m08Q2/src/TestCode.java:51
#: m08Q3/src/TestParam.java:67 m08Q4/src/TestAnd.java:75
#: m08Q4/src/TestGet.java:79 m08Q4/src/TestReset.java:78
#: m08Q4/src/TestRotate.java:74 m08Q4/src/TestSet.java:85
#: m08Q4/src/TestShift.java:74 m08Q4/src/TestConstruct.java:49
#: m08Q5/src/TestGet.java:74 m08Q5/src/TestReset.java:77
#: m08Q5/src/TestRotate.java:79 m08Q5/src/TestSet.java:77
#: m08Q5/src/TestShift.java:79 m08Q6/src/TestMax.java:65
#: m08Q6/src/TestMin.java:65 m08Q6/src/TestMoyenne.java:63
#: m08Q7/src/TestMax.java:64 m08Q7/src/TestMin.java:64
#: m08Q7/src/TestMoyenne.java:64 m08dem1/src/TestParam1.java:65
#: m08dem1/src/TestParam2.java:76 m09Q1/src/TestParam.java:82
#: m09Q2/src/TestParam.java:80 m09Q3/src/TestCode.java:65
#: m09Q4/src/TestParam.java:67 m09Q4/src/TestCode.java:65
#: m09Q5/src/TestCode.java:56 m09Q6/src/TestCode.java:59
#: m09Q7/src/TestCode.java:61 m09dem1/src/TestParam.java:80
#: m09dem2/src/TestCode.java:62 m09dem2/src/TestRes.java:62
#: m10Q1/src/Tests.java:78 m10Q2/src/Tests.java:118 m10Q3/src/Tests.java:163
#: m10Q4/src/TestListAdd.java:107 m10Q4/src/TestListContains.java:85
#: m10Q4/src/TestListGet.java:89 m10Q4/src/TestListSet.java:99
#: m10dem1/src/Tests.java:162 m10dem1/src/TestOut.java:85
#: m10dem2/src/TestContenuFichier.java:135
#: m10dem2/src/TestValeurRetour.java:108 m11Q1/src/Tests.java:170
#: m11Q2/src/Tests.java:159 m11Q3/src/Tests.java:110 m11Q4/src/Tests.java:166
#: m11Q5/src/Tests.java:170 m11Q6/src/Tests.java:138 mX1Q19/src/Tests.java:110
Attention,\ il\ est\ interdit\ de\ diviser\ par\ z\u00e9ro.=Be careful, it is forbidden to divide by zero.

#: m01Q10/src/Tests.java:56 m01Q11/src/Tests.java:54 m01Q12/src/Tests.java:57
#: m01Q13/src/Tests.java:56 m01Q14/src/Tests.java:54 m01Q15/src/Tests.java:65
#: m01Q16/src/Tests.java:52 m01Q17/src/Tests.java:69 m01Q18/src/Tests.java:58
#: m01Q2/src/Tests.java:88 m01Q20/src/Tests.java:72 m01Q3/src/Tests.java:61
#: m01Q4/src/Tests.java:56 m01Q5/src/Tests.java:52 m01Q6/src/Tests.java:51
#: m01Q7/src/Tests.java:51 m01Q8/src/Tests.java:56 m01Q9/src/Tests.java:79
#: m01_bf/src/Tests.java:51 m02Q1/src/Tests.java:48 m02Q10/src/Tests.java:54
#: m02Q3/src/Tests.java:70 m02Q4/src/Tests.java:52 m02Q5/src/Tests.java:51
#: m02Q6/src/Tests.java:49 m02Q7/src/Tests.java:52 m02Q8/src/Tests.java:76
#: m02Q9/src/Tests.java:48 m02_bf/src/Tests.java:51 m02dem2/src/Tests.java:59
#: m02dem3/src/Tests.java:64 m02dem4/src/Tests.java:51
#: m02dem5/src/Tests.java:90 m03Q1/src/Tests.java:83 m03Q2/src/Tests.java:57
#: m03Q3/src/Tests.java:59 m03Q4/src/Tests.java:63 m03Q5/src/Tests.java:57
#: m03Q6/src/Tests.java:56 m03Q7/src/Tests.java:56 m03_bf/src/Tests.java:58
#: m03dem2/src/Tests.java:65 m03dem3/src/Tests.java:53
#: m03dem4/src/Tests.java:80 m03dem5/src/Tests.java:51 m04Q1/src/Tests.java:59
#: m04Q10/src/Tests.java:54 m04Q11/src/Tests.java:53 m04Q2/src/Tests.java:54
#: m04Q3/src/Tests.java:60 m04Q4/src/Tests.java:147 m04Q5/src/Tests.java:62
#: m04Q6/src/Tests.java:66 m04Q7/src/Tests.java:63 m04Q8/src/Tests.java:61
#: m04Q9/src/Tests.java:54 m04_bf/src/Tests.java:72 m04dem1/src/Tests.java:76
#: m04dem2/src/Tests.java:75 m04dem3/src/Tests.java:69
#: m04dem4/src/Tests.java:63 m04dem5/src/Tests.java:91 m05Q1/src/Tests.java:66
#: m05Q10/src/Tests.java:68 m05Q11/src/Tests.java:72
#: m05Q12/src/TestsQ1.java:64 m05Q12/src/TestsQ2.java:60
#: m05Q2/src/Tests.java:67 m05Q3/src/Tests.java:66 m05Q4/src/Tests.java:65
#: m05Q5/src/Tests.java:56 m05Q6/src/Tests.java:61 m05Q7/src/Tests.java:73
#: m05Q8/src/Tests.java:81 m05Q9/src/Tests.java:67 m05_bf/src/Tests.java:94
#: m05dem1/src/Tests.java:97 m05dem2/src/Tests.java:73
#: m05dem3/src/Tests.java:58 m05dem4/src/Tests.java:177
#: m05dem5/src/Tests.java:103 m06Q1/src/TestCode.java:63
#: m06Q10/src/TestCode.java:112 m06Q11/src/TestParam.java:69
#: m06Q2/src/TestCode.java:104 m06Q3/src/TestCode.java:73
#: m06Q3/src/TestParam.java:68 m06Q4/src/TestCode.java:86
#: m06Q4/src/TestParam.java:66 m06Q5/src/TestCode.java:88
#: m06Q6/src/TestCode.java:79 m06Q6/src/TestParam.java:68
#: m06Q7/src/TestCode.java:89 m06Q8/src/TestCode.java:91
#: m06Q8/src/TestParam.java:76 m06Q9/src/TestCode.java:109
#: m06_bf/src/TestInspect.java:59 m06_bf/src/TestCode.java:60
#: m06dem1/src/TestCode.java:138 m06dem2/src/TestCode.java:234
#: m06dem3/src/TestCode.java:107 m06dem4/src/TestCode.java:118
#: m07Q1/src/TestParam.java:68 m07Q10/src/TestCode.java:51
#: m07Q11/src/TestParam.java:77 m07Q2/src/TestCode.java:103
#: m07Q3/src/TestParam.java:78 m07Q4/src/TestCode.java:50
#: m07Q5/src/TestCode.java:51 m07Q6/src/TestParam.java:71
#: m07Q7/src/TestCode.java:51 m07Q8/src/TestCode.java:52
#: m07Q9/src/TestCode.java:50 m07_bf/src/TestInspectCD.java:59
#: m07_bf/src/TestItem.java:64 m07_bf/src/TestCD.java:121
#: m07dem1/src/TestCode.java:174 m07dem2/src/TestCode.java:88
#: m08Q1/src/TestCode.java:52 m08Q2/src/TestCode.java:53
#: m08Q3/src/TestParam.java:69 m08Q4/src/TestAnd.java:77
#: m08Q4/src/TestGet.java:81 m08Q4/src/TestReset.java:80
#: m08Q4/src/TestRotate.java:76 m08Q4/src/TestSet.java:87
#: m08Q4/src/TestShift.java:76 m08Q4/src/TestConstruct.java:51
#: m08Q5/src/TestGet.java:76 m08Q5/src/TestReset.java:79
#: m08Q5/src/TestRotate.java:81 m08Q5/src/TestSet.java:79
#: m08Q5/src/TestShift.java:81 m08Q6/src/TestMax.java:67
#: m08Q6/src/TestMin.java:67 m08Q6/src/TestMoyenne.java:65
#: m08Q7/src/TestMax.java:66 m08Q7/src/TestMin.java:66
#: m08Q7/src/TestMoyenne.java:66 m08dem1/src/TestParam1.java:67
#: m08dem1/src/TestParam2.java:78 m09Q1/src/TestParam.java:84
#: m09Q2/src/TestParam.java:82 m09Q3/src/TestCode.java:67
#: m09Q4/src/TestParam.java:69 m09Q4/src/TestCode.java:67
#: m09Q5/src/TestCode.java:58 m09Q6/src/TestCode.java:61
#: m09Q7/src/TestCode.java:63 m09dem1/src/TestParam.java:82
#: m09dem2/src/TestCode.java:65 m09dem2/src/TestRes.java:65
#: m10Q1/src/Tests.java:80 m10Q2/src/Tests.java:120 m10Q3/src/Tests.java:165
#: m10Q4/src/TestListAdd.java:109 m10Q4/src/TestListContains.java:87
#: m10Q4/src/TestListGet.java:91 m10Q4/src/TestListSet.java:101
#: m10dem1/src/Tests.java:164 m10dem1/src/TestOut.java:87
#: m10dem2/src/TestContenuFichier.java:137
#: m10dem2/src/TestValeurRetour.java:110 m11Q1/src/Tests.java:172
#: m11Q2/src/Tests.java:161 m11Q3/src/Tests.java:112 m11Q4/src/Tests.java:168
#: m11Q5/src/Tests.java:172 m11Q6/src/Tests.java:140 mX1Q19/src/Tests.java:112
Attention,\ certaines\ variables\ ont\ \u00e9t\u00e9\ mal\ cast\u00e9es\ \!=Be careful, some variables have been wrongly casted\!

#: m01Q10/src/Tests.java:58 m01Q11/src/Tests.java:56 m01Q12/src/Tests.java:59
#: m01Q13/src/Tests.java:58 m01Q14/src/Tests.java:56 m01Q15/src/Tests.java:67
#: m01Q16/src/Tests.java:54 m01Q17/src/Tests.java:71 m01Q18/src/Tests.java:60
#: m01Q2/src/Tests.java:90 m01Q20/src/Tests.java:74 m01Q3/src/Tests.java:63
#: m01Q4/src/Tests.java:58 m01Q5/src/Tests.java:54 m01Q6/src/Tests.java:53
#: m01Q7/src/Tests.java:53 m01Q8/src/Tests.java:58 m01Q9/src/Tests.java:81
#: m01_bf/src/Tests.java:53 m02Q1/src/Tests.java:50 m02Q10/src/Tests.java:56
#: m02Q3/src/Tests.java:72 m02Q4/src/Tests.java:54 m02Q5/src/Tests.java:53
#: m02Q6/src/Tests.java:51 m02Q7/src/Tests.java:54 m02Q8/src/Tests.java:78
#: m02Q9/src/Tests.java:50 m02_bf/src/Tests.java:53 m02dem2/src/Tests.java:61
#: m02dem3/src/Tests.java:66 m02dem4/src/Tests.java:53
#: m02dem5/src/Tests.java:92 m03Q1/src/Tests.java:85 m03Q2/src/Tests.java:59
#: m03Q3/src/Tests.java:61 m03Q4/src/Tests.java:65 m03Q5/src/Tests.java:59
#: m03Q6/src/Tests.java:58 m03Q7/src/Tests.java:58 m03_bf/src/Tests.java:60
#: m03dem2/src/Tests.java:67 m03dem3/src/Tests.java:55
#: m03dem4/src/Tests.java:82 m03dem5/src/Tests.java:53 m04Q1/src/Tests.java:61
#: m04Q10/src/Tests.java:56 m04Q11/src/Tests.java:55 m04Q2/src/Tests.java:56
#: m04Q3/src/Tests.java:62 m04Q4/src/Tests.java:149 m04Q5/src/Tests.java:64
#: m04Q6/src/Tests.java:68 m04Q7/src/Tests.java:65 m04Q8/src/Tests.java:63
#: m04Q9/src/Tests.java:56 m04_bf/src/Tests.java:74 m04dem1/src/Tests.java:78
#: m04dem2/src/Tests.java:77 m04dem3/src/Tests.java:71
#: m04dem4/src/Tests.java:65 m04dem5/src/Tests.java:93 m05Q1/src/Tests.java:68
#: m05Q10/src/Tests.java:70 m05Q11/src/Tests.java:74
#: m05Q12/src/TestsQ1.java:66 m05Q12/src/TestsQ2.java:62
#: m05Q2/src/Tests.java:69 m05Q3/src/Tests.java:68 m05Q4/src/Tests.java:67
#: m05Q5/src/Tests.java:58 m05Q6/src/Tests.java:63 m05Q7/src/Tests.java:75
#: m05Q8/src/Tests.java:83 m05Q9/src/Tests.java:69 m05_bf/src/Tests.java:96
#: m05dem1/src/Tests.java:99 m05dem2/src/Tests.java:75
#: m05dem3/src/Tests.java:60 m05dem4/src/Tests.java:179
#: m05dem5/src/Tests.java:105 m06Q1/src/TestCode.java:65
#: m06Q10/src/TestCode.java:114 m06Q11/src/TestParam.java:71
#: m06Q2/src/TestCode.java:106 m06Q3/src/TestCode.java:75
#: m06Q3/src/TestParam.java:70 m06Q4/src/TestCode.java:88
#: m06Q4/src/TestParam.java:68 m06Q5/src/TestCode.java:90
#: m06Q6/src/TestCode.java:81 m06Q6/src/TestParam.java:70
#: m06Q7/src/TestCode.java:91 m06Q8/src/TestCode.java:93
#: m06Q8/src/TestParam.java:78 m06Q9/src/TestCode.java:111
#: m06_bf/src/TestInspect.java:61 m06_bf/src/TestCode.java:62
#: m06dem1/src/TestCode.java:140 m06dem2/src/TestCode.java:236
#: m06dem3/src/TestCode.java:109 m06dem4/src/TestCode.java:120
#: m07Q1/src/TestParam.java:70 m07Q10/src/TestCode.java:53
#: m07Q11/src/TestParam.java:79 m07Q2/src/TestCode.java:105
#: m07Q3/src/TestParam.java:80 m07Q4/src/TestCode.java:52
#: m07Q5/src/TestCode.java:53 m07Q6/src/TestParam.java:73
#: m07Q7/src/TestCode.java:53 m07Q8/src/TestCode.java:54
#: m07Q9/src/TestCode.java:52 m07_bf/src/TestInspectCD.java:61
#: m07_bf/src/TestItem.java:66 m07_bf/src/TestCD.java:123
#: m07dem1/src/TestCode.java:176 m07dem2/src/TestCode.java:90
#: m08Q1/src/TestCode.java:54 m08Q2/src/TestCode.java:55
#: m08Q3/src/TestParam.java:71 m08Q4/src/TestAnd.java:79
#: m08Q4/src/TestGet.java:83 m08Q4/src/TestReset.java:82
#: m08Q4/src/TestRotate.java:78 m08Q4/src/TestSet.java:89
#: m08Q4/src/TestShift.java:78 m08Q4/src/TestConstruct.java:53
#: m08Q5/src/TestGet.java:78 m08Q5/src/TestReset.java:81
#: m08Q5/src/TestRotate.java:83 m08Q5/src/TestSet.java:81
#: m08Q5/src/TestShift.java:83 m08Q6/src/TestMax.java:69
#: m08Q6/src/TestMin.java:69 m08Q6/src/TestMoyenne.java:67
#: m08Q7/src/TestMax.java:68 m08Q7/src/TestMin.java:68
#: m08Q7/src/TestMoyenne.java:68 m08dem1/src/TestParam1.java:69
#: m08dem1/src/TestParam2.java:80 m09Q1/src/TestParam.java:86
#: m09Q2/src/TestParam.java:84 m09Q3/src/TestCode.java:69
#: m09Q4/src/TestParam.java:71 m09Q4/src/TestCode.java:69
#: m09Q5/src/TestCode.java:60 m09Q6/src/TestCode.java:63
#: m09Q7/src/TestCode.java:65 m09dem1/src/TestParam.java:84
#: m09dem2/src/TestCode.java:68 m09dem2/src/TestRes.java:68
#: m10Q1/src/Tests.java:82 m10Q2/src/Tests.java:122 m10Q3/src/Tests.java:167
#: m10Q4/src/TestListAdd.java:111 m10Q4/src/TestListContains.java:89
#: m10Q4/src/TestListGet.java:93 m10Q4/src/TestListSet.java:103
#: m10dem1/src/Tests.java:166 m10dem1/src/TestOut.java:89
#: m10dem2/src/TestContenuFichier.java:139
#: m10dem2/src/TestValeurRetour.java:112 m11Q1/src/Tests.java:174
#: m11Q2/src/Tests.java:163 m11Q3/src/Tests.java:114 m11Q4/src/Tests.java:170
#: m11Q5/src/Tests.java:174 m11Q6/src/Tests.java:142 mX1Q19/src/Tests.java:114
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ String\ \!\ (StringIndexOutOfBoundsException)=Be careful, you try to read outside the boundaries of a String\! (StringIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:60 m01Q11/src/Tests.java:58 m01Q12/src/Tests.java:61
#: m01Q13/src/Tests.java:60 m01Q14/src/Tests.java:58 m01Q15/src/Tests.java:69
#: m01Q16/src/Tests.java:56 m01Q17/src/Tests.java:73 m01Q18/src/Tests.java:62
#: m01Q2/src/Tests.java:92 m01Q20/src/Tests.java:76 m01Q3/src/Tests.java:65
#: m01Q4/src/Tests.java:60 m01Q5/src/Tests.java:56 m01Q6/src/Tests.java:55
#: m01Q7/src/Tests.java:55 m01Q8/src/Tests.java:60 m01Q9/src/Tests.java:83
#: m01_bf/src/Tests.java:55 m02Q1/src/Tests.java:52 m02Q10/src/Tests.java:58
#: m02Q3/src/Tests.java:74 m02Q4/src/Tests.java:56 m02Q5/src/Tests.java:55
#: m02Q6/src/Tests.java:53 m02Q7/src/Tests.java:56 m02Q8/src/Tests.java:80
#: m02Q9/src/Tests.java:52 m02_bf/src/Tests.java:55 m02dem2/src/Tests.java:63
#: m02dem3/src/Tests.java:68 m02dem4/src/Tests.java:55
#: m02dem5/src/Tests.java:94 m03Q1/src/Tests.java:87 m03Q2/src/Tests.java:61
#: m03Q3/src/Tests.java:63 m03Q4/src/Tests.java:67 m03Q5/src/Tests.java:61
#: m03Q6/src/Tests.java:60 m03Q7/src/Tests.java:60 m03_bf/src/Tests.java:62
#: m03dem2/src/Tests.java:69 m03dem3/src/Tests.java:57
#: m03dem4/src/Tests.java:84 m03dem5/src/Tests.java:55 m04Q1/src/Tests.java:63
#: m04Q10/src/Tests.java:58 m04Q11/src/Tests.java:57 m04Q2/src/Tests.java:58
#: m04Q3/src/Tests.java:64 m04Q4/src/Tests.java:151 m04Q5/src/Tests.java:66
#: m04Q6/src/Tests.java:70 m04Q7/src/Tests.java:67 m04Q8/src/Tests.java:65
#: m04Q9/src/Tests.java:58 m04_bf/src/Tests.java:76 m04dem1/src/Tests.java:80
#: m04dem2/src/Tests.java:79 m04dem3/src/Tests.java:73
#: m04dem4/src/Tests.java:67 m04dem5/src/Tests.java:95 m05Q1/src/Tests.java:70
#: m05Q10/src/Tests.java:72 m05Q11/src/Tests.java:76
#: m05Q12/src/TestsQ1.java:68 m05Q12/src/TestsQ2.java:64
#: m05Q2/src/Tests.java:71 m05Q3/src/Tests.java:70 m05Q4/src/Tests.java:69
#: m05Q5/src/Tests.java:60 m05Q6/src/Tests.java:65 m05Q7/src/Tests.java:79
#: m05Q8/src/Tests.java:87 m05Q9/src/Tests.java:71 m05_bf/src/Tests.java:98
#: m05dem1/src/Tests.java:101 m05dem2/src/Tests.java:77
#: m05dem3/src/Tests.java:62 m05dem4/src/Tests.java:181
#: m05dem5/src/Tests.java:107 m06Q1/src/TestCode.java:67
#: m06Q10/src/TestCode.java:116 m06Q11/src/TestParam.java:73
#: m06Q2/src/TestCode.java:108 m06Q3/src/TestCode.java:77
#: m06Q3/src/TestParam.java:72 m06Q4/src/TestCode.java:90
#: m06Q4/src/TestParam.java:70 m06Q5/src/TestCode.java:92
#: m06Q6/src/TestCode.java:83 m06Q6/src/TestParam.java:72
#: m06Q7/src/TestCode.java:93 m06Q8/src/TestCode.java:95
#: m06Q8/src/TestParam.java:80 m06Q9/src/TestCode.java:113
#: m06_bf/src/TestInspect.java:63 m06_bf/src/TestCode.java:64
#: m06dem1/src/TestCode.java:142 m06dem2/src/TestCode.java:238
#: m06dem3/src/TestCode.java:111 m06dem4/src/TestCode.java:122
#: m07Q1/src/TestParam.java:72 m07Q10/src/TestCode.java:55
#: m07Q11/src/TestParam.java:81 m07Q2/src/TestCode.java:107
#: m07Q3/src/TestParam.java:82 m07Q4/src/TestCode.java:54
#: m07Q5/src/TestCode.java:55 m07Q6/src/TestParam.java:75
#: m07Q7/src/TestCode.java:55 m07Q8/src/TestCode.java:56
#: m07Q9/src/TestCode.java:54 m07_bf/src/TestInspectCD.java:63
#: m07_bf/src/TestItem.java:68 m07_bf/src/TestCD.java:125
#: m07dem1/src/TestCode.java:178 m07dem2/src/TestCode.java:92
#: m08Q1/src/TestCode.java:56 m08Q2/src/TestCode.java:57
#: m08Q3/src/TestParam.java:73 m08Q4/src/TestAnd.java:81
#: m08Q4/src/TestGet.java:85 m08Q4/src/TestReset.java:84
#: m08Q4/src/TestRotate.java:80 m08Q4/src/TestSet.java:91
#: m08Q4/src/TestShift.java:80 m08Q4/src/TestConstruct.java:55
#: m08Q5/src/TestGet.java:80 m08Q5/src/TestReset.java:83
#: m08Q5/src/TestRotate.java:85 m08Q5/src/TestSet.java:83
#: m08Q5/src/TestShift.java:85 m08Q6/src/TestMax.java:71
#: m08Q6/src/TestMin.java:71 m08Q6/src/TestMoyenne.java:69
#: m08Q7/src/TestMax.java:70 m08Q7/src/TestMin.java:70
#: m08Q7/src/TestMoyenne.java:70 m08dem1/src/TestParam1.java:71
#: m08dem1/src/TestParam2.java:82 m09Q1/src/TestParam.java:88
#: m09Q2/src/TestParam.java:86 m09Q3/src/TestCode.java:71
#: m09Q4/src/TestParam.java:73 m09Q4/src/TestCode.java:71
#: m09Q5/src/TestCode.java:62 m09Q6/src/TestCode.java:65
#: m09Q7/src/TestCode.java:67 m09dem1/src/TestParam.java:86
#: m09dem2/src/TestCode.java:71 m09dem2/src/TestRes.java:71
#: m10Q1/src/Tests.java:84 m10Q2/src/Tests.java:124 m10Q3/src/Tests.java:169
#: m10Q4/src/TestListAdd.java:113 m10Q4/src/TestListContains.java:91
#: m10Q4/src/TestListGet.java:95 m10Q4/src/TestListSet.java:105
#: m10dem1/src/Tests.java:168 m10dem1/src/TestOut.java:91
#: m10dem2/src/TestContenuFichier.java:141
#: m10dem2/src/TestValeurRetour.java:114 m11Q1/src/Tests.java:176
#: m11Q2/src/Tests.java:165 m11Q3/src/Tests.java:116 m11Q4/src/Tests.java:172
#: m11Q5/src/Tests.java:176 m11Q6/src/Tests.java:144 mX1Q19/src/Tests.java:116
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ tableau\ \!\ (ArrayIndexOutOfBoundsException)=Be careful, you try to read outside of the limits of an array\! (ArrayIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:62 m01Q11/src/Tests.java:60 m01Q12/src/Tests.java:63
#: m01Q13/src/Tests.java:62 m01Q14/src/Tests.java:60 m01Q15/src/Tests.java:71
#: m01Q16/src/Tests.java:58 m01Q17/src/Tests.java:75 m01Q18/src/Tests.java:64
#: m01Q2/src/Tests.java:94 m01Q20/src/Tests.java:78 m01Q3/src/Tests.java:67
#: m01Q4/src/Tests.java:62 m01Q5/src/Tests.java:58 m01Q6/src/Tests.java:57
#: m01Q7/src/Tests.java:57 m01Q8/src/Tests.java:62 m01Q9/src/Tests.java:85
#: m01_bf/src/Tests.java:57 m02Q1/src/Tests.java:54 m02Q10/src/Tests.java:60
#: m02Q3/src/Tests.java:76 m02Q4/src/Tests.java:58 m02Q5/src/Tests.java:57
#: m02Q6/src/Tests.java:55 m02Q7/src/Tests.java:58 m02Q8/src/Tests.java:82
#: m02Q9/src/Tests.java:54 m02_bf/src/Tests.java:57 m02dem2/src/Tests.java:65
#: m02dem3/src/Tests.java:70 m02dem4/src/Tests.java:57
#: m02dem5/src/Tests.java:96 m03Q1/src/Tests.java:89 m03Q2/src/Tests.java:63
#: m03Q3/src/Tests.java:65 m03Q4/src/Tests.java:69 m03Q5/src/Tests.java:63
#: m03Q6/src/Tests.java:62 m03Q7/src/Tests.java:62 m03_bf/src/Tests.java:64
#: m03dem2/src/Tests.java:71 m03dem3/src/Tests.java:59
#: m03dem4/src/Tests.java:86 m03dem5/src/Tests.java:57 m04Q1/src/Tests.java:65
#: m04Q10/src/Tests.java:60 m04Q11/src/Tests.java:59 m04Q2/src/Tests.java:60
#: m04Q3/src/Tests.java:66 m04Q4/src/Tests.java:153 m04Q5/src/Tests.java:68
#: m04Q6/src/Tests.java:72 m04Q7/src/Tests.java:69 m04Q8/src/Tests.java:67
#: m04Q9/src/Tests.java:60 m04_bf/src/Tests.java:78 m04dem1/src/Tests.java:82
#: m04dem2/src/Tests.java:81 m04dem3/src/Tests.java:75
#: m04dem4/src/Tests.java:69 m04dem5/src/Tests.java:97 m05Q1/src/Tests.java:72
#: m05Q10/src/Tests.java:74 m05Q11/src/Tests.java:78
#: m05Q12/src/TestsQ1.java:70 m05Q12/src/TestsQ2.java:66
#: m05Q2/src/Tests.java:73 m05Q3/src/Tests.java:72 m05Q4/src/Tests.java:71
#: m05Q5/src/Tests.java:62 m05Q6/src/Tests.java:67 m05Q7/src/Tests.java:81
#: m05Q8/src/Tests.java:89 m05Q9/src/Tests.java:73 m05_bf/src/Tests.java:100
#: m05dem1/src/Tests.java:103 m05dem2/src/Tests.java:79
#: m05dem3/src/Tests.java:64 m05dem4/src/Tests.java:183
#: m05dem5/src/Tests.java:109 m06Q1/src/TestCode.java:69
#: m06Q10/src/TestCode.java:118 m06Q11/src/TestParam.java:75
#: m06Q2/src/TestCode.java:110 m06Q3/src/TestCode.java:79
#: m06Q3/src/TestParam.java:74 m06Q4/src/TestCode.java:92
#: m06Q4/src/TestParam.java:72 m06Q5/src/TestCode.java:94
#: m06Q6/src/TestCode.java:85 m06Q6/src/TestParam.java:74
#: m06Q7/src/TestCode.java:95 m06Q8/src/TestCode.java:97
#: m06Q8/src/TestParam.java:82 m06Q9/src/TestCode.java:115
#: m06_bf/src/TestInspect.java:66 m06_bf/src/TestCode.java:67
#: m06dem1/src/TestCode.java:144 m06dem2/src/TestCode.java:240
#: m06dem3/src/TestCode.java:113 m06dem4/src/TestCode.java:124
#: m07Q1/src/TestParam.java:74 m07Q10/src/TestCode.java:57
#: m07Q11/src/TestParam.java:83 m07Q2/src/TestCode.java:109
#: m07Q3/src/TestParam.java:84 m07Q4/src/TestCode.java:56
#: m07Q5/src/TestCode.java:57 m07Q6/src/TestParam.java:77
#: m07Q7/src/TestCode.java:57 m07Q8/src/TestCode.java:58
#: m07Q9/src/TestCode.java:56 m07_bf/src/TestInspectCD.java:66
#: m07_bf/src/TestItem.java:70 m07_bf/src/TestCD.java:127
#: m07dem1/src/TestCode.java:180 m07dem2/src/TestCode.java:94
#: m08Q1/src/TestCode.java:58 m08Q2/src/TestCode.java:59
#: m08Q3/src/TestParam.java:75 m08Q4/src/TestAnd.java:83
#: m08Q4/src/TestGet.java:87 m08Q4/src/TestReset.java:86
#: m08Q4/src/TestRotate.java:82 m08Q4/src/TestSet.java:93
#: m08Q4/src/TestShift.java:82 m08Q4/src/TestConstruct.java:57
#: m08Q5/src/TestGet.java:82 m08Q5/src/TestReset.java:85
#: m08Q5/src/TestRotate.java:87 m08Q5/src/TestSet.java:85
#: m08Q5/src/TestShift.java:87 m08Q6/src/TestMax.java:73
#: m08Q6/src/TestMin.java:73 m08Q6/src/TestMoyenne.java:71
#: m08Q7/src/TestMax.java:72 m08Q7/src/TestMin.java:72
#: m08Q7/src/TestMoyenne.java:72 m08dem1/src/TestParam1.java:73
#: m08dem1/src/TestParam2.java:84 m09Q1/src/TestParam.java:90
#: m09Q2/src/TestParam.java:88 m09Q3/src/TestCode.java:74
#: m09Q4/src/TestParam.java:75 m09Q4/src/TestCode.java:73
#: m09Q5/src/TestCode.java:65 m09Q6/src/TestCode.java:68
#: m09Q7/src/TestCode.java:69 m09dem1/src/TestParam.java:88
#: m09dem2/src/TestCode.java:74 m09dem2/src/TestRes.java:74
#: m10Q1/src/Tests.java:86 m10Q2/src/Tests.java:126 m10Q3/src/Tests.java:171
#: m10Q4/src/TestListAdd.java:115 m10Q4/src/TestListContains.java:93
#: m10Q4/src/TestListGet.java:97 m10Q4/src/TestListSet.java:107
#: m10dem1/src/Tests.java:170 m10dem1/src/TestOut.java:93
#: m10dem2/src/TestContenuFichier.java:143
#: m10dem2/src/TestValeurRetour.java:116 m11Q1/src/Tests.java:178
#: m11Q2/src/Tests.java:167 m11Q3/src/Tests.java:118 m11Q4/src/Tests.java:174
#: m11Q5/src/Tests.java:178 m11Q6/src/Tests.java:146 mX1Q19/src/Tests.java:118
Attention,\ vous\ faites\ une\ op\u00e9ration\ sur\ un\ objet\ qui\ vaut\ null\ \!\ Veillez\ \u00e0\ bien\ g\u00e9rer\ ce\ cas.=Be careful, you are doing an operation on a null object\! Be sure to handle this case.

#: m01Q10/src/Tests.java:64 m01Q11/src/Tests.java:62 m01Q12/src/Tests.java:65
#: m01Q13/src/Tests.java:64 m01Q14/src/Tests.java:62 m01Q15/src/Tests.java:73
#: m01Q16/src/Tests.java:60 m01Q17/src/Tests.java:77 m01Q18/src/Tests.java:66
#: m01Q2/src/Tests.java:96 m01Q20/src/Tests.java:80 m01Q3/src/Tests.java:69
#: m01Q4/src/Tests.java:64 m01Q5/src/Tests.java:60 m01Q6/src/Tests.java:59
#: m01Q7/src/Tests.java:59 m01Q8/src/Tests.java:64 m01Q9/src/Tests.java:87
#: m01_bf/src/Tests.java:63 m02Q1/src/Tests.java:56 m02Q10/src/Tests.java:62
#: m02Q3/src/Tests.java:78 m02Q4/src/Tests.java:60 m02Q5/src/Tests.java:59
#: m02Q6/src/Tests.java:57 m02Q7/src/Tests.java:60 m02Q8/src/Tests.java:84
#: m02Q9/src/Tests.java:56 m02_bf/src/Tests.java:63 m02dem2/src/Tests.java:67
#: m02dem3/src/Tests.java:72 m02dem4/src/Tests.java:59
#: m02dem5/src/Tests.java:98 m03Q1/src/Tests.java:93 m03Q1/src/Tests.java:96
#: m03Q2/src/Tests.java:67 m03Q2/src/Tests.java:70 m03Q3/src/Tests.java:69
#: m03Q3/src/Tests.java:72 m03Q4/src/Tests.java:73 m03Q4/src/Tests.java:76
#: m03Q5/src/Tests.java:67 m03Q5/src/Tests.java:70 m03Q6/src/Tests.java:66
#: m03Q6/src/Tests.java:69 m03Q7/src/Tests.java:66 m03Q7/src/Tests.java:69
#: m03_bf/src/Tests.java:70 m03dem2/src/Tests.java:75
#: m03dem2/src/Tests.java:78 m03dem3/src/Tests.java:63
#: m03dem3/src/Tests.java:66 m03dem4/src/Tests.java:90
#: m03dem4/src/Tests.java:93 m03dem5/src/Tests.java:61 m04Q1/src/Tests.java:71
#: m04Q1/src/Tests.java:74 m04Q10/src/Tests.java:66 m04Q10/src/Tests.java:69
#: m04Q11/src/Tests.java:65 m04Q11/src/Tests.java:68 m04Q2/src/Tests.java:66
#: m04Q2/src/Tests.java:69 m04Q3/src/Tests.java:72 m04Q3/src/Tests.java:75
#: m04Q4/src/Tests.java:159 m04Q4/src/Tests.java:162 m04Q5/src/Tests.java:74
#: m04Q5/src/Tests.java:77 m04Q6/src/Tests.java:78 m04Q6/src/Tests.java:81
#: m04Q7/src/Tests.java:75 m04Q7/src/Tests.java:78 m04Q8/src/Tests.java:73
#: m04Q8/src/Tests.java:76 m04Q9/src/Tests.java:66 m04Q9/src/Tests.java:69
#: m04_bf/src/Tests.java:84 m04dem1/src/Tests.java:84
#: m04dem2/src/Tests.java:85 m04dem3/src/Tests.java:77
#: m04dem4/src/Tests.java:75 m04dem5/src/Tests.java:103
#: m05Q1/src/Tests.java:78 m05Q1/src/Tests.java:81 m05Q10/src/Tests.java:80
#: m05Q10/src/Tests.java:83 m05Q11/src/Tests.java:84 m05Q11/src/Tests.java:87
#: m05Q12/src/TestsQ1.java:76 m05Q12/src/TestsQ1.java:79
#: m05Q12/src/TestsQ2.java:72 m05Q12/src/TestsQ2.java:75
#: m05Q2/src/Tests.java:79 m05Q2/src/Tests.java:82 m05Q3/src/Tests.java:78
#: m05Q3/src/Tests.java:81 m05Q4/src/Tests.java:77 m05Q4/src/Tests.java:80
#: m05Q5/src/Tests.java:68 m05Q5/src/Tests.java:71 m05Q6/src/Tests.java:73
#: m05Q6/src/Tests.java:76 m05Q7/src/Tests.java:87 m05Q7/src/Tests.java:90
#: m05Q8/src/Tests.java:95 m05Q8/src/Tests.java:98 m05Q9/src/Tests.java:79
#: m05Q9/src/Tests.java:82 m05_bf/src/Tests.java:106
#: m05dem1/src/Tests.java:109 m05dem2/src/Tests.java:85
#: m05dem3/src/Tests.java:70 m05dem4/src/Tests.java:189
#: m05dem5/src/Tests.java:115 m06Q1/src/TestCode.java:75
#: m06Q10/src/TestCode.java:124 m06Q11/src/TestParam.java:81
#: m06Q2/src/TestCode.java:116 m06Q3/src/TestCode.java:85
#: m06Q3/src/TestParam.java:80 m06Q4/src/TestCode.java:98
#: m06Q4/src/TestParam.java:78 m06Q5/src/TestCode.java:100
#: m06Q6/src/TestCode.java:91 m06Q6/src/TestParam.java:80
#: m06Q7/src/TestCode.java:101 m06Q8/src/TestCode.java:103
#: m06Q8/src/TestParam.java:88 m06Q9/src/TestCode.java:121
#: m06_bf/src/TestInspect.java:72 m06_bf/src/TestCode.java:73
#: m06dem1/src/TestCode.java:150 m06dem2/src/TestCode.java:246
#: m06dem3/src/TestCode.java:119 m06dem4/src/TestCode.java:130
#: m07Q1/src/TestParam.java:80 m07Q10/src/TestCode.java:63
#: m07Q11/src/TestParam.java:89 m07Q2/src/TestCode.java:115
#: m07Q3/src/TestParam.java:90 m07Q4/src/TestCode.java:62
#: m07Q5/src/TestCode.java:63 m07Q6/src/TestParam.java:83
#: m07Q7/src/TestCode.java:63 m07Q8/src/TestCode.java:64
#: m07Q9/src/TestCode.java:62 m07_bf/src/TestInspectCD.java:72
#: m07_bf/src/TestItem.java:76 m07_bf/src/TestCD.java:133
#: m07dem1/src/TestCode.java:182 m07dem1/src/TestCode.java:185
#: m07dem2/src/TestCode.java:100 m08Q1/src/TestCode.java:64
#: m08Q2/src/TestCode.java:65 m08Q3/src/TestParam.java:81
#: m08Q4/src/TestAnd.java:89 m08Q4/src/TestGet.java:93
#: m08Q4/src/TestReset.java:92 m08Q4/src/TestRotate.java:88
#: m08Q4/src/TestSet.java:99 m08Q4/src/TestShift.java:88
#: m08Q4/src/TestConstruct.java:63 m08Q5/src/TestGet.java:88
#: m08Q5/src/TestReset.java:91 m08Q5/src/TestRotate.java:93
#: m08Q5/src/TestSet.java:91 m08Q5/src/TestShift.java:93
#: m08Q6/src/TestMax.java:79 m08Q6/src/TestMin.java:79
#: m08Q6/src/TestMoyenne.java:77 m08Q7/src/TestMax.java:78
#: m08Q7/src/TestMin.java:78 m08Q7/src/TestMoyenne.java:78
#: m08dem1/src/TestParam1.java:79 m08dem1/src/TestParam2.java:90
#: m09Q1/src/TestParam.java:96 m09Q2/src/TestParam.java:94
#: m09Q3/src/TestCode.java:80 m09Q4/src/TestParam.java:81
#: m09Q4/src/TestCode.java:79 m09Q5/src/TestCode.java:71
#: m09Q6/src/TestCode.java:74 m09Q6/src/TestCode.java:115
#: m09Q6/src/TestCode.java:132 m09Q6/src/TestCode.java:146
#: m09Q6/src/TestCode.java:148 m09Q6/src/TestCode.java:165
#: m09Q6/src/TestCode.java:173 m09Q6/src/TestCode.java:200
#: m09Q7/src/TestCode.java:75 m09Q7/src/TestCode.java:139
#: m09Q7/src/TestCode.java:152 m09Q7/src/TestCode.java:154
#: m09Q7/src/TestCode.java:173 m09Q7/src/TestCode.java:181
#: m09Q7/src/TestCode.java:199 m09Q7/src/TestCode.java:201
#: m09Q7/src/TestCode.java:228 m09Q7/src/TestCode.java:234
#: m09Q7/src/TestCode.java:236 m09Q7/src/TestCode.java:244
#: m09dem1/src/TestParam.java:94 m09dem2/src/TestCode.java:83
#: m09dem2/src/TestRes.java:83 m10Q1/src/Tests.java:92 m10Q1/src/Tests.java:95
#: m10Q3/src/Tests.java:177 m10Q4/src/TestListAdd.java:122
#: m10Q4/src/TestListContains.java:99 m10Q4/src/TestListGet.java:103
#: m10Q4/src/TestListSet.java:113 m10dem1/src/Tests.java:176
#: m10dem1/src/Tests.java:179 m10dem1/src/TestOut.java:99
#: m10dem1/src/TestOut.java:102 m10dem2/src/TestContenuFichier.java:149
#: m10dem2/src/TestValeurRetour.java:122 m11Q1/src/Tests.java:184
#: m11Q2/src/Tests.java:173 m11Q3/src/Tests.java:124 m11Q4/src/Tests.java:180
#: m11Q5/src/Tests.java:184 m11Q6/src/Tests.java:152 mX1Q19/src/Tests.java:120
Une\ erreur\ inattendue\ est\ survenue\ dans\ votre\ t\u00e2che\ \:\ =An unexpected error occurred in your task\: 

#: m01Q11/src/Tests.java:38
#, java-format
La\ moyenne\ entre\ {0,number,\#},\ {1,number,\#}\ et\ {2,number,\#}\ vaut\ {3,number,\#},\ or\ votre\ programme\ calcule\ {4,number,\#}.\n=The mean between {0,number,\#}, {1,number,\#} and {2,number,\#} is {3,number,\#}, but your program computes {4,number,\#}.\n

#: m01Q12/src/Tests.java:34 m01Q13/src/Tests.java:33 m01Q3/src/Tests.java:33
Veuillez\ placer\ le\ r\u00e9sultat\ dans\ la\ variable=Please put the result in the variable

#: m01Q12/src/Tests.java:38 m03Q3/src/Tests.java:36
#, java-format
Le\ maximum\ entre\ les\ variables\ a\={0},\ b\={1}\ et\ c\={2}\ est\ {3}\ or\ votre\ programme\ calcule\ {4}.\n=The maximum between variables a\={0}, b\={1} and c\={2} is {3} but your program computes {4}.\n

#: m01Q13/src/Tests.java:37
#, java-format
Le\ minimum\ entre\ les\ variables\ a\={0},\ b\={1},\ c\={2}\ et\ d\={3}\ est\ {4}\ or\ votre\ programme\ calcule\ {5}.\n=The minimum between variables a\={0}, b\={1} and c\={2} is {3} but your program computes {4}.\n

#: m01Q14/src/Tests.java:33
#, java-format
Il\ y\ a\ {0}\ valeurs\ diff\u00e9rentes\ parmi\ {1},\ {2},\ {3}.\nCependant,\ votre\ code\ indique\ qu''il\ y\ en\ a\ {4}.\n=There are {0} different values among {1}, {2}, {3}.\nHowever, your code indicates that there are {4}.\n

#: m01Q15/src/Tests.java:34
#, java-format
Pour\ le\ {0}/{1}/2016\ la\ saison\ est\ ''{2}''\ alors\ que\ votre\ code\ indique\ ''{3}''.\n=For the {0}/{1}/2016 the season is ''{2}'' while your code says ''{3}''.\n

#: m01Q16/src/Tests.java:33
#, java-format
Pour\ {0}h{1}m{2}s,\ le\ total\ attendu\ est\ {3,number,\#}s\ or\ votre\ code\ indique\ {4,number,\#}s.\n=For {0}h{1}m{2}s, the expected time is {3,number,\#}s but your code computes {4,number,\#}s.\n

#: m01Q17/src/Tests.java:32 m01Q9/src/Tests.java:31 m03Q1/src/Tests.java:32
est=is

#: m01Q17/src/Tests.java:33 m01Q9/src/Tests.java:32 m03Q1/src/Tests.java:33
n'est\ pas=is not

#: m01Q17/src/Tests.java:34
#, java-format
L''ann\u00e9e\ {0,number,\#}\ {1}\ une\ ann\u00e9e\ bissextile.\nCependant,\ votre\ code\ indique\ que\ {0,number,\#}\ {2}\ une\ ann\u00e9e\ bissextile\n=The year {0,number,\#} {1} a leap year.\nHowever, your code indicates {0,number,\#} {2} a leap year\n

#: m01Q18/src/Tests.java:31
#, java-format
L''ann\u00e9e\ {0,number,\#}\ est\ au\ si\u00e8cle\ {1,number,\#}\ or\ votre\ code\ indique\ si\u00e8cle\ {2,number,\#}.\n=The year {0,number,\#} belongs to the {1,number,\#}th century but your code indicates the {2,number,\#}th century.\n

#: m01Q2/src/Tests.java:33
#, java-format
{0}\ \:\ Un\ v\u00e9hicule\ roulant\ \u00e0\ {1}km/h\ dans\ une\ zone\ limit\u00e9e\ \u00e0\ {2}km/h\ doit\ recevoir\ une\ amende\ de\ {3}\u20ac.\ Cependant,\ votre\ code\ calcule\ {4}\u20ac.\n={0}\: A vehicle driving at {1}km/h in an area limited to {2}km/h must get a fine of {3}\u20ac. However, your code computes {4}\u20ac.\n

#: m01Q2/src/Tests.java:52 m02Q8/src/Tests.java:65 m04Q4/src/Tests.java:134
#: m05dem4/src/Tests.java:83 m05dem4/src/Tests.java:103
#: m05dem4/src/Tests.java:135 m05dem4/src/Tests.java:161
#: m06Q10/src/TestCode.java:50 m06Q2/src/TestCode.java:41
#: m06Q4/src/TestCode.java:46 m06Q5/src/TestCode.java:40
#: m06Q6/src/TestCode.java:45 m06Q7/src/TestCode.java:45
#: m06Q8/src/TestCode.java:50 m06Q9/src/TestCode.java:50
#: m06_bf/src/TestInspect.java:44 m06_bf/src/TestCode.java:45
#: m06dem1/src/TestCode.java:37 m06dem2/src/TestCode.java:37
#: m06dem3/src/TestCode.java:36 m06dem4/src/TestCode.java:42
#: m07Q10/src/TestCode.java:36 m07Q2/src/TestCode.java:37
#: m07Q4/src/TestCode.java:35 m07Q5/src/TestCode.java:36
#: m07Q7/src/TestCode.java:36 m07Q8/src/TestCode.java:37
#: m07Q9/src/TestCode.java:35 m07_bf/src/TestInspectCD.java:44
#: m07dem1/src/TestCode.java:53 m07dem2/src/TestCode.java:49
#: m08Q1/src/TestCode.java:37 m08Q2/src/TestCode.java:38
#: m08Q4/src/TestConstruct.java:36 m09Q3/src/TestCode.java:52
#: m09Q4/src/TestCode.java:52 m09Q5/src/TestCode.java:43
#: m09Q6/src/TestCode.java:46 m09Q7/src/TestCode.java:48
#: m09dem2/src/TestCode.java:48 m09dem2/src/TestRes.java:48
#: m10Q2/src/Tests.java:77 m10Q2/src/Tests.java:105 m10Q3/src/Tests.java:113
#: m10Q3/src/Tests.java:151 m10dem1/src/Tests.java:151
#: m10dem1/src/TestOut.java:74 m10dem2/src/TestContenuFichier.java:105
#: m10dem2/src/TestValeurRetour.java:99
#, java-format
{0}\ \:\ r\u00e9ussi={0}\: success

#: m01Q2/src/Tests.java:64
Lorsque\ l'exc\u00e8s\ de\ vitesse\ d\u00e9passe\ 10km/h,\ l'amende\ est\ doubl\u00e9e.\n=When excessive speed exceeds 10km/h, the fine is doubled.\n

#: m01Q2/src/Tests.java:69 m01Q2/src/Tests.java:74
Lorsque\ les\ vitesses\ sont\ \u00e9gales,\ l'amende\ doit\ \u00eatre\ de\ z\u00e9ro.\n=When speeds are equal, the fine must be zero.\n

#: m01Q2/src/Tests.java:79
Pas\ d'amende\ requise\ car\ la\ vitesse\ du\ v\u00e9hicule\ est\ inf\u00e9rieure\ \u00e0\ la\ vitesse\ maximale.\n=No fines required as vehicle speed is below maximum speed.\n

#: m01Q20/src/Tests.java:30
une\ consonne=a consonant

#: m01Q20/src/Tests.java:31
une\ voyelle=a vowel

#: m01Q20/src/Tests.java:32
un\ chiffre=a number

#: m01Q20/src/Tests.java:38
#, java-format
''{0}''\ est\ {1}.\ Cependant,\ votre\ code\ indique\ que\ c''est\ {2}.\n=''{0}'' is {1}. However, your code indicates that it is {2}.\n

#: m01Q3/src/Tests.java:36
#, java-format
Pour\ une\ personne\ de\ {0}m\ et\ {1}kg,\ votre\ r\u00e9ponse\ {2}\ ne\ correspond\ pas\ \u00e0\ la\ valeur\ attendue\ {3}.\n=For a person of {0}m and {1}kg, your answer {2} does not match the expected value {3}.\n

#: m01Q4/src/Tests.java:31
#, java-format
Lorsque\ la\ voiture\ entre\ en\ section\ {0}\ et\ sort\ en\ section\ {1},\ la\ voiture\ a\ pacouru\ {2}\ section(s)\ et\ le\ prix\ attendu\ est\ {3}\u20ac\ alors\ que\ votre\ code\ calcule\ {4}\u20ac.\n=When the car enters section {0} and exits in section {1}, the car has covered {2} section(s) and the expected price is {3}\u20ac while your code calculates {4}\u20ac.\n

#: m01Q5/src/Tests.java:30
#, java-format
{0}\ XOR\ {1}\ ne\ retourne\ pas\ le\ bon\ r\u00e9sultat.\n={0} XOR {1} does not return the correct result.\n

#: m01Q6/src/Tests.java:30
#, java-format
Pour\ i\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=For i\={0}, you answered ''{1}'' but the expected answer is ''{2}''.\n

#: m01Q7/src/Tests.java:30
#, java-format
Pour\ n\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=For n\={0}, you answered ''{1}'' but the expected answer is ''{2}''.\n

#: m01Q8/src/Tests.java:34 m03Q4/src/Tests.java:37
#, java-format
La\ mediane\ entre\ {0},\ {1}\ et\ {2}\ vaut\ {3},\ or\ votre\ programme\ calcule\ {4}.\n=The median between {0}, {1} and {2} is {3} but your program computes {4}.\n

#: m01Q9/src/Tests.java:34 m03Q1/src/Tests.java:34
#, java-format
Le\ nombre\ {0}\ {1}\ dans\ l''intervalle\ [{2},\ {3}].\nCependant,\ votre\ code\ indique\ le\ contraire.\n=The number {0} {1} in the interval [{2}, {3}].\nHowever, your code indicates otherwise.\n

#: m01_bf/src/Tests.java:32
#, java-format
Vous\ affichez\ mal\ la\ suite\ de\ Syracuse\ sur\ la\ sortie\ standard\ quand\ s0\ \=\ {0}.\nLa\ vraie\ suite\ est\ \:\ {1}\nVotre\ suite\ est\ \:\ {2}=You do not display the Syracuse sequence correctly on the standard output when s0 \= {0}.\nThe real sequence is\: {1}\nYour sequence is\: {2}

#: m01_bf/src/Tests.java:59 m02_bf/src/Tests.java:59 m03_bf/src/Tests.java:66
#: m04Q1/src/Tests.java:67 m04Q10/src/Tests.java:62 m04Q11/src/Tests.java:61
#: m04Q2/src/Tests.java:62 m04Q3/src/Tests.java:68 m04Q4/src/Tests.java:155
#: m04Q5/src/Tests.java:70 m04Q6/src/Tests.java:74 m04Q7/src/Tests.java:71
#: m04Q8/src/Tests.java:69 m04Q9/src/Tests.java:62 m04_bf/src/Tests.java:80
#: m04dem4/src/Tests.java:71 m04dem5/src/Tests.java:99 m05Q1/src/Tests.java:74
#: m05Q10/src/Tests.java:76 m05Q11/src/Tests.java:80
#: m05Q12/src/TestsQ1.java:72 m05Q12/src/TestsQ2.java:68
#: m05Q2/src/Tests.java:75 m05Q3/src/Tests.java:74 m05Q4/src/Tests.java:73
#: m05Q5/src/Tests.java:64 m05Q6/src/Tests.java:69 m05Q7/src/Tests.java:83
#: m05Q8/src/Tests.java:91 m05Q9/src/Tests.java:75 m05_bf/src/Tests.java:102
#: m05dem1/src/Tests.java:105 m05dem2/src/Tests.java:81
#: m05dem3/src/Tests.java:66 m05dem4/src/Tests.java:185
#: m05dem5/src/Tests.java:111 m06Q1/src/TestCode.java:71
#: m06Q10/src/TestCode.java:120 m06Q11/src/TestParam.java:77
#: m06Q2/src/TestCode.java:112 m06Q3/src/TestCode.java:81
#: m06Q3/src/TestParam.java:76 m06Q4/src/TestCode.java:94
#: m06Q4/src/TestParam.java:74 m06Q5/src/TestCode.java:96
#: m06Q6/src/TestCode.java:87 m06Q6/src/TestParam.java:76
#: m06Q7/src/TestCode.java:97 m06Q8/src/TestCode.java:99
#: m06Q8/src/TestParam.java:84 m06Q9/src/TestCode.java:117
#: m06_bf/src/TestInspect.java:68 m06_bf/src/TestCode.java:69
#: m06dem1/src/TestCode.java:146 m06dem2/src/TestCode.java:242
#: m06dem3/src/TestCode.java:115 m06dem4/src/TestCode.java:126
#: m07Q1/src/TestParam.java:76 m07Q10/src/TestCode.java:59
#: m07Q11/src/TestParam.java:85 m07Q2/src/TestCode.java:111
#: m07Q3/src/TestParam.java:86 m07Q4/src/TestCode.java:58
#: m07Q5/src/TestCode.java:59 m07Q6/src/TestParam.java:79
#: m07Q7/src/TestCode.java:59 m07Q8/src/TestCode.java:60
#: m07Q9/src/TestCode.java:58 m07_bf/src/TestInspectCD.java:68
#: m07_bf/src/TestItem.java:72 m07_bf/src/TestCD.java:129
#: m07dem2/src/TestCode.java:96 m08Q1/src/TestCode.java:60
#: m08Q2/src/TestCode.java:61 m08Q3/src/TestParam.java:77
#: m08Q4/src/TestAnd.java:85 m08Q4/src/TestGet.java:89
#: m08Q4/src/TestReset.java:88 m08Q4/src/TestRotate.java:84
#: m08Q4/src/TestSet.java:95 m08Q4/src/TestShift.java:84
#: m08Q4/src/TestConstruct.java:59 m08Q5/src/TestGet.java:84
#: m08Q5/src/TestReset.java:87 m08Q5/src/TestRotate.java:89
#: m08Q5/src/TestSet.java:87 m08Q5/src/TestShift.java:89
#: m08Q6/src/TestMax.java:75 m08Q6/src/TestMin.java:75
#: m08Q6/src/TestMoyenne.java:73 m08Q7/src/TestMax.java:74
#: m08Q7/src/TestMin.java:74 m08Q7/src/TestMoyenne.java:74
#: m08dem1/src/TestParam1.java:75 m08dem1/src/TestParam2.java:86
#: m09Q1/src/TestParam.java:92 m09Q2/src/TestParam.java:90
#: m09Q3/src/TestCode.java:76 m09Q4/src/TestParam.java:77
#: m09Q4/src/TestCode.java:75 m09Q5/src/TestCode.java:67
#: m09Q6/src/TestCode.java:70 m09Q7/src/TestCode.java:71
#: m09dem1/src/TestParam.java:90 m09dem2/src/TestCode.java:77
#: m09dem2/src/TestRes.java:77 m10Q1/src/Tests.java:88
#: m10Q2/src/Tests.java:128 m10Q3/src/Tests.java:173
#: m10Q4/src/TestListAdd.java:117 m10Q4/src/TestListContains.java:95
#: m10Q4/src/TestListGet.java:99 m10Q4/src/TestListSet.java:109
#: m10dem1/src/Tests.java:172 m10dem1/src/TestOut.java:95
#: m10dem2/src/TestContenuFichier.java:145
#: m10dem2/src/TestValeurRetour.java:118 m11Q1/src/Tests.java:180
#: m11Q2/src/Tests.java:169 m11Q3/src/Tests.java:120 m11Q4/src/Tests.java:176
#: m11Q5/src/Tests.java:180 m11Q6/src/Tests.java:148
Vous\ initialisez\ un\ tableau\ avec\ une\ taille\ n\u00e9gative.=You initialize an array with a negative size.

#: m01_bf/src/Tests.java:61 m02_bf/src/Tests.java:61 m03Q1/src/Tests.java:91
#: m03Q2/src/Tests.java:65 m03Q3/src/Tests.java:67 m03Q4/src/Tests.java:71
#: m03Q5/src/Tests.java:65 m03Q6/src/Tests.java:64 m03Q7/src/Tests.java:64
#: m03_bf/src/Tests.java:68 m03dem2/src/Tests.java:73
#: m03dem3/src/Tests.java:61 m03dem4/src/Tests.java:88
#: m03dem5/src/Tests.java:59 m04Q1/src/Tests.java:69 m04Q10/src/Tests.java:64
#: m04Q11/src/Tests.java:63 m04Q2/src/Tests.java:64 m04Q3/src/Tests.java:70
#: m04Q4/src/Tests.java:157 m04Q5/src/Tests.java:72 m04Q6/src/Tests.java:76
#: m04Q7/src/Tests.java:73 m04Q8/src/Tests.java:71 m04Q9/src/Tests.java:64
#: m04_bf/src/Tests.java:82 m04dem2/src/Tests.java:83
#: m04dem4/src/Tests.java:73 m04dem5/src/Tests.java:101
#: m05Q1/src/Tests.java:76 m05Q10/src/Tests.java:78 m05Q11/src/Tests.java:82
#: m05Q12/src/TestsQ1.java:74 m05Q12/src/TestsQ2.java:70
#: m05Q2/src/Tests.java:77 m05Q3/src/Tests.java:76 m05Q4/src/Tests.java:75
#: m05Q5/src/Tests.java:66 m05Q6/src/Tests.java:71 m05Q7/src/Tests.java:85
#: m05Q8/src/Tests.java:93 m05Q9/src/Tests.java:77 m05_bf/src/Tests.java:104
#: m05dem1/src/Tests.java:107 m05dem2/src/Tests.java:83
#: m05dem3/src/Tests.java:68 m05dem4/src/Tests.java:187
#: m05dem5/src/Tests.java:113 m06Q1/src/TestCode.java:73
#: m06Q10/src/TestCode.java:122 m06Q11/src/TestParam.java:79
#: m06Q2/src/TestCode.java:114 m06Q3/src/TestCode.java:83
#: m06Q3/src/TestParam.java:78 m06Q4/src/TestCode.java:96
#: m06Q4/src/TestParam.java:76 m06Q5/src/TestCode.java:98
#: m06Q6/src/TestCode.java:89 m06Q6/src/TestParam.java:78
#: m06Q7/src/TestCode.java:99 m06Q8/src/TestCode.java:101
#: m06Q8/src/TestParam.java:86 m06Q9/src/TestCode.java:119
#: m06_bf/src/TestInspect.java:70 m06_bf/src/TestCode.java:71
#: m06dem1/src/TestCode.java:148 m06dem2/src/TestCode.java:244
#: m06dem3/src/TestCode.java:117 m06dem4/src/TestCode.java:128
#: m07Q1/src/TestParam.java:78 m07Q10/src/TestCode.java:61
#: m07Q11/src/TestParam.java:87 m07Q2/src/TestCode.java:113
#: m07Q3/src/TestParam.java:88 m07Q4/src/TestCode.java:60
#: m07Q5/src/TestCode.java:61 m07Q6/src/TestParam.java:81
#: m07Q7/src/TestCode.java:61 m07Q8/src/TestCode.java:62
#: m07Q9/src/TestCode.java:60 m07_bf/src/TestInspectCD.java:70
#: m07_bf/src/TestItem.java:74 m07_bf/src/TestCD.java:131
#: m07dem2/src/TestCode.java:98 m08Q1/src/TestCode.java:62
#: m08Q2/src/TestCode.java:63 m08Q3/src/TestParam.java:79
#: m08Q4/src/TestAnd.java:87 m08Q4/src/TestGet.java:91
#: m08Q4/src/TestReset.java:90 m08Q4/src/TestRotate.java:86
#: m08Q4/src/TestSet.java:97 m08Q4/src/TestShift.java:86
#: m08Q4/src/TestConstruct.java:61 m08Q5/src/TestGet.java:86
#: m08Q5/src/TestReset.java:89 m08Q5/src/TestRotate.java:91
#: m08Q5/src/TestSet.java:89 m08Q5/src/TestShift.java:91
#: m08Q6/src/TestMax.java:77 m08Q6/src/TestMin.java:77
#: m08Q6/src/TestMoyenne.java:75 m08Q7/src/TestMax.java:76
#: m08Q7/src/TestMin.java:76 m08Q7/src/TestMoyenne.java:76
#: m08dem1/src/TestParam1.java:77 m08dem1/src/TestParam2.java:88
#: m09Q1/src/TestParam.java:94 m09Q2/src/TestParam.java:92
#: m09Q3/src/TestCode.java:78 m09Q4/src/TestParam.java:79
#: m09Q4/src/TestCode.java:77 m09Q5/src/TestCode.java:69
#: m09Q6/src/TestCode.java:72 m09Q7/src/TestCode.java:73
#: m09dem1/src/TestParam.java:92 m09dem2/src/TestCode.java:80
#: m09dem2/src/TestRes.java:80 m10Q1/src/Tests.java:90
#: m10Q2/src/Tests.java:130 m10Q3/src/Tests.java:175
#: m10Q4/src/TestListAdd.java:119 m10Q4/src/TestListContains.java:97
#: m10Q4/src/TestListGet.java:101 m10Q4/src/TestListSet.java:111
#: m10dem1/src/Tests.java:174 m10dem1/src/TestOut.java:97
#: m10dem2/src/TestContenuFichier.java:147
#: m10dem2/src/TestValeurRetour.java:120 m11Q1/src/Tests.java:182
#: m11Q2/src/Tests.java:171 m11Q3/src/Tests.java:122 m11Q4/src/Tests.java:178
#: m11Q5/src/Tests.java:182 m11Q6/src/Tests.java:150
Il\ semble\ que\ votre\ code\ boucle.\ Ceci\ peut\ arriver\ si\ votre\ fonction\ s'appelle\ elle-m\u00eame.=It seems that your code loops. This can happen if your function calls itself.

#: m02Q1/src/Tests.java:27
#, java-format
Le\ reste\ de\ la\ division\ enti\u00e8re\ entre\ {0,number,\#}\ et\ {1,number,\#}\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=The rest of the division between {0,number,\#} and {1,number,\#} is {2,number,\#} but your program computes {3,number,\#}\n

#: m02Q10/src/Tests.java:32
#, java-format
Le\ nombre\ de\ diviseur\ de\ {0,number,\#}\ est\ {1,number,\#}\ or\ votre\ programme\ calcule\ {2,number,\#}.\n=The number of divisors of {0,number,\#} is {1,number,\#} but your program calculates {2,number,\#}.\n

#: m02Q3/src/Tests.java:32
#, java-format
Un\ triangle\ de\ c\u00f4t\u00e9\ {0}\ donne\ \:\n{1}\nVotre\ programme\ affiche\ \:\n{2}\n=A triangle of width {0} gives\:\n{1}\nYour program displays\:\n{2}\n

#: m02Q3/src/Tests.java:51 m02Q4/src/Tests.java:38
Vous\ affichez\ trop\ de\ caract\u00e8res\ \!\ \u26d4=You print to many characters \! \u26d4

#: m02Q4/src/Tests.java:34
#, java-format
Le\ dessin\ de\ la\ lettre\ H\ de\ hauteur\ {0}\ et\ de\ largeur\ {1}\ donne\ \n\n{2}\n\ et\ votre\ programme\ donne\n\n{3}\n=The drawing of the letter H of height {0} and width {1} gives\n\n{2}\nbut your program gives\n\n{3}\n

#: m02Q5/src/Tests.java:34
#, java-format
Le\ dessin\ de\ la\ lettre\ X\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=The drawing of the letter X of height {0} gives\n\n{1}\nbut your program gives\n\n{2}\n

#: m02Q5/src/Tests.java:36 m02Q6/src/Tests.java:35
Vous\ affichez\ trop\ de\ caract\u00e8res\!=You print to many characters\!

#: m02Q6/src/Tests.java:33
#, java-format
Le\ dessin\ de\ la\ lettre\ S\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=The drawing of the letter S of height {0} gives\n\n{1}\nbut your program gives\n\n{2}\n

#: m02Q7/src/Tests.java:30
#, java-format
Le\ calcul\ d''int\u00e9r\u00eats\ avec\ une\ base\ de\ {0,number,\#}\ sur\ {1,number,\#}\ ann\u00e9es\ au\ taux\ d''int\u00e9r\u00eat\ {2,number,\#}\ donne\ {3,number,\#}\ mais\ votre\ programme\ calcule\ {4,number,\#}.\n=The calculation of interest with a base of {0,number,\#} during {1,number,\#} years at interest rate {2,number,\#} gives {3,number,\#} but your program computes {4,number,\#}.\n

#: m02Q8/src/Tests.java:35 m02Q8/src/Tests.java:40
#, java-format
V\u00e9rifiez\ que\ vous\ g\u00e9rez\ la\ factorielle\ de\ {0}.\n=Make sure that you handle the factorial of {0}.\n

#: m02Q8/src/Tests.java:62
#, java-format
La\ factorielle\ de\ {0}\ donne\ {1,number,\#},\ pourtant,\ votre\ code\ renvoie\ {2,number,\#}.\n=The factorial of {0} gives {1,number,\#}, but your code returns {2,number,\#}.\n

#: m02Q9/src/Tests.java:27
#, java-format
La\ somme\ des\ nombres\ dans\ l''intervalle\ [{0,number,\#},\ {1,number,\#}]\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=The sum of numbers in the interval [{0,number,\#}, {1,number,\#}] is equal to {2,number,\#} but your program calculates {3,number,\#}.\n

#: m02_bf/src/Tests.java:31
<rien>=<nothing>

#: m02_bf/src/Tests.java:33
#, java-format
Vous\ affichez\ mal\ les\ diviseurs\ propres\ sur\ la\ sortie\ standard\ quand\ n\ \=\ {0}.\nVous\ affichez\ \:\n{1}\nIl\ est\ attendu\ \:\n{2}=You do not display proper divisors on standard output when n \= {0}.\nYou print\:\n{1}\nThe expected print is\:\n{2}

#: m02dem2/src/Tests.java:36
#, java-format
Test\ {0}\ \:\ La\ somme\ des\ {1,number,\#}\ entiers\ pairs\ sup\u00e9rieurs\ \u00e0\ z\u00e9ro\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=Test {0}\: The sum of {1,number,\#} even integers greater than zero is {2,number,\#} but your program calculates {3,number,\#}.\n

#: m02dem3/src/Tests.java:34
#, java-format
Test\ {0}\ \:\ l''entier\ {1,number,\#}\ exposant\ {2,number,\#}\ vaut\ {3,number,\#}\ et\ votre\ programme\ calcule\ {4,number,\#}.\n=Test {0}\: The integer {1,number,\#} exponent {2,number,\#} is {3,number,\#} and your program calculates {4,number,\#}.\n

#: m02dem4/src/Tests.java:30
#, java-format
Test\ {0}\ \:\ le\ plus\ grand\ diviseur\ entier\ de\ {1,number,\#}\ est\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=Test {0}\: The largest integer divisor of {1,number,\#} is {2,number,\#} and your program calculates {3,number,\#}.\n

#: m02dem5/src/Tests.java:29
#, java-format
Test\ {0}\ \:\ le\ test\ de\ nombre\ premier\ sur\ {1,number,\#}\ renvoie\ {2}\ et\ votre\ programme\ renvoie\ {3}.\n=Test {0}\: the test of prime number on {1,number,\#} returns {2} and your program returns {3}.\n

#: m03Q1/src/librairies/FunctionHelper.java:47
#: m03Q2/src/librairies/FunctionHelper.java:47
#: m03Q3/src/librairies/FunctionHelper.java:47
#: m03Q4/src/librairies/FunctionHelper.java:47
#: m03Q5/src/librairies/FunctionHelper.java:47
#: m03Q6/src/librairies/FunctionHelper.java:47
#: m03Q7/src/librairies/FunctionHelper.java:47
#: m03_bf/src/librairies/FunctionHelper.java:47
#: m03dem2/src/librairies/FunctionHelper.java:47
#: m03dem3/src/librairies/FunctionHelper.java:47
#: m03dem4/src/librairies/FunctionHelper.java:47
#: m03dem5/src/librairies/FunctionHelper.java:47
#: m04Q1/src/librairies/FunctionHelper.java:47
#: m04Q10/src/librairies/FunctionHelper.java:47
#: m04Q11/src/librairies/FunctionHelper.java:47
#: m04Q2/src/librairies/FunctionHelper.java:47
#: m04Q3/src/librairies/FunctionHelper.java:47
#: m04Q4/src/librairies/FunctionHelper.java:47
#: m04Q5/src/librairies/FunctionHelper.java:47
#: m04Q6/src/librairies/FunctionHelper.java:47
#: m04Q7/src/librairies/FunctionHelper.java:47
#: m04Q8/src/librairies/FunctionHelper.java:47
#: m04Q9/src/librairies/FunctionHelper.java:47
#: m05Q1/src/librairies/FunctionHelper.java:47
#: m05Q10/src/librairies/FunctionHelper.java:47
#: m05Q11/src/librairies/FunctionHelper.java:47
#: m05Q12/src/librairies/FunctionHelper.java:47
#: m05Q2/src/librairies/FunctionHelper.java:47
#: m05Q3/src/librairies/FunctionHelper.java:47
#: m05Q4/src/librairies/FunctionHelper.java:47
#: m05Q5/src/librairies/FunctionHelper.java:47
#: m05Q6/src/librairies/FunctionHelper.java:47
#: m05Q7/src/librairies/FunctionHelper.java:47
#: m05Q8/src/librairies/FunctionHelper.java:47
#: m05Q9/src/librairies/FunctionHelper.java:47 m07dem1/src/TestCode.java:70
#: m09Q5/src/librairies/FunctionHelper.java:47
#: m10Q1/src/librairies/FunctionHelperCustom.java:46
#: m10Q3/src/librairies/FunctionHelper.java:47
#: m10dem1/src/librairies/FunctionHelper.java:47
#: m10dem2/src/librairies/FunctionHelper.java:47
#: utilities/FunctionHelper.java:47
#, java-format
Le\ type\ de\ retour\ de\ votre\ fonction\ doit\ \u00eatre\ du\ type\ {0}\ \!\n=The return type of your function must be of type {0}\!\n

#: m03Q1/src/librairies/FunctionHelper.java:50
#: m03Q2/src/librairies/FunctionHelper.java:50
#: m03Q3/src/librairies/FunctionHelper.java:50
#: m03Q4/src/librairies/FunctionHelper.java:50
#: m03Q5/src/librairies/FunctionHelper.java:50
#: m03Q6/src/librairies/FunctionHelper.java:50
#: m03Q7/src/librairies/FunctionHelper.java:50
#: m03_bf/src/librairies/FunctionHelper.java:50
#: m03dem2/src/librairies/FunctionHelper.java:50
#: m03dem3/src/librairies/FunctionHelper.java:50
#: m03dem4/src/librairies/FunctionHelper.java:50
#: m03dem5/src/librairies/FunctionHelper.java:50
#: m04Q1/src/librairies/FunctionHelper.java:50
#: m04Q10/src/librairies/FunctionHelper.java:50
#: m04Q11/src/librairies/FunctionHelper.java:50
#: m04Q2/src/librairies/FunctionHelper.java:50
#: m04Q3/src/librairies/FunctionHelper.java:50
#: m04Q4/src/librairies/FunctionHelper.java:50
#: m04Q5/src/librairies/FunctionHelper.java:50
#: m04Q6/src/librairies/FunctionHelper.java:50
#: m04Q7/src/librairies/FunctionHelper.java:50
#: m04Q8/src/librairies/FunctionHelper.java:50
#: m04Q9/src/librairies/FunctionHelper.java:50
#: m05Q1/src/librairies/FunctionHelper.java:50
#: m05Q10/src/librairies/FunctionHelper.java:50
#: m05Q11/src/librairies/FunctionHelper.java:50
#: m05Q12/src/librairies/FunctionHelper.java:50
#: m05Q2/src/librairies/FunctionHelper.java:50
#: m05Q3/src/librairies/FunctionHelper.java:50
#: m05Q4/src/librairies/FunctionHelper.java:50
#: m05Q5/src/librairies/FunctionHelper.java:50
#: m05Q6/src/librairies/FunctionHelper.java:50
#: m05Q7/src/librairies/FunctionHelper.java:50
#: m05Q8/src/librairies/FunctionHelper.java:50
#: m05Q9/src/librairies/FunctionHelper.java:50 m07dem1/src/TestCode.java:73
#: m09Q5/src/librairies/FunctionHelper.java:50
#: m10Q1/src/librairies/FunctionHelperCustom.java:49
#: m10Q3/src/librairies/FunctionHelper.java:50
#: m10dem1/src/librairies/FunctionHelper.java:50
#: m10dem2/src/librairies/FunctionHelper.java:50
#: utilities/FunctionHelper.java:50
#, java-format
Votre\ fonction\ doit\ prendre\ {0}\ argument(s)\ \!\n=Your function must take {0} argument(s)\!\n

#: m03Q1/src/librairies/FunctionHelper.java:54
#: m03Q2/src/librairies/FunctionHelper.java:54
#: m03Q3/src/librairies/FunctionHelper.java:54
#: m03Q4/src/librairies/FunctionHelper.java:54
#: m03Q5/src/librairies/FunctionHelper.java:54
#: m03Q6/src/librairies/FunctionHelper.java:54
#: m03Q7/src/librairies/FunctionHelper.java:54
#: m03_bf/src/librairies/FunctionHelper.java:54
#: m03dem2/src/librairies/FunctionHelper.java:54
#: m03dem3/src/librairies/FunctionHelper.java:54
#: m03dem4/src/librairies/FunctionHelper.java:54
#: m03dem5/src/librairies/FunctionHelper.java:54
#: m04Q1/src/librairies/FunctionHelper.java:54
#: m04Q10/src/librairies/FunctionHelper.java:54
#: m04Q11/src/librairies/FunctionHelper.java:54
#: m04Q2/src/librairies/FunctionHelper.java:54
#: m04Q3/src/librairies/FunctionHelper.java:54
#: m04Q4/src/librairies/FunctionHelper.java:54
#: m04Q5/src/librairies/FunctionHelper.java:54
#: m04Q6/src/librairies/FunctionHelper.java:54
#: m04Q7/src/librairies/FunctionHelper.java:54
#: m04Q8/src/librairies/FunctionHelper.java:54
#: m04Q9/src/librairies/FunctionHelper.java:54
#: m05Q1/src/librairies/FunctionHelper.java:54
#: m05Q10/src/librairies/FunctionHelper.java:54
#: m05Q11/src/librairies/FunctionHelper.java:54
#: m05Q12/src/librairies/FunctionHelper.java:54
#: m05Q2/src/librairies/FunctionHelper.java:54
#: m05Q3/src/librairies/FunctionHelper.java:54
#: m05Q4/src/librairies/FunctionHelper.java:54
#: m05Q5/src/librairies/FunctionHelper.java:54
#: m05Q6/src/librairies/FunctionHelper.java:54
#: m05Q7/src/librairies/FunctionHelper.java:54
#: m05Q8/src/librairies/FunctionHelper.java:54
#: m05Q9/src/librairies/FunctionHelper.java:54 m07dem1/src/TestCode.java:77
#: m09Q5/src/librairies/FunctionHelper.java:54
#: m10Q3/src/librairies/FunctionHelper.java:54
#: m10dem1/src/librairies/FunctionHelper.java:54
#: m10dem2/src/librairies/FunctionHelper.java:54
#: utilities/FunctionHelper.java:54
#, java-format
L''argument\ n\u00b0{0}\ n''est\ pas\ de\ type\ ''{1}''\ comme\ demand\u00e9\ \!\n=The argument n\u00b0{0} is not of type ''{1}'' as requested\!\n

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60 m07dem1/src/TestCode.java:83
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
Votre\ fonction\ n'a\ pas\ \u00e9t\u00e9\ d\u00e9finie\ correctement.\ Assurez\ vous\ que\ son\ nom\ est\ correctement\ d\u00e9fini\ \!\n=Your function has not been defined correctly. Make sure its name is defined correctly\!\n

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
#, java-format
Le\ nom\ attendu\ est\ \:\ ''{0}''.\n=The expected name is\: ''{0}''.\n

#: m03Q2/src/Tests.java:35
#, java-format
Le\ surface\ d''un\ rectangle\ de\ longueur\ {0}\ et\ de\ largeur\ {1}\ est\ {2}.\nCependant,\ votre\ code\ calcule\ {3}.\n=The surface of a rectangle of length {0} and width {1} is {2}.\nHowever, your code calculates {3}.\n

#: m03Q5/src/Tests.java:35
#, java-format
La\ surface\ d''une\ sph\u00e8re\ de\ rayon\ {0}\ est\ {1}.\nCependant,\ votre\ code\ calcule\ {2}.\n=The surface of a sphere of radius {0} is {1}.\nHowever, your code calculates {2}.\n

#: m03Q6/src/Tests.java:36
#, java-format
La\ factorielle\ de\ {0,number,\#}\ vaut\ {1,number,\#}\ et\ votre\ programme\ calcule\ {2,number,\#}.\n=The factorial of {0,number,\#} is {1,number,\#} and your program calculates {2,number,\#}.\n

#: m03Q7/src/Tests.java:36
#, java-format
Avec\ x\={0},\ votre\ code\ ne\ donne\ pas\ la\ bonne\ r\u00e9ponse.\n=With x\={0}, your code does not give the correct answer.\n

#: m03_bf/src/Tests.java:32
#, java-format
Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ n\ \=\ {2}.\n=Your {0} method returned {1} when called with n \= {2}.\n

#: m03_bf/src/Tests.java:33
Faites\ attention\ au\ cas\ o\u00f9\ n\ est\ n\u00e9gatif.\n=Pay attention to the case where n is negative.\n

#: m03dem2/src/Tests.java:44
Votre\ code\ n'affiche\ pas\ le\ nombre\ le\ plus\ grand.\n=Your code does not display the largest number.\n

#: m03dem3/src/Tests.java:35
#, java-format
Votre\ code\ indique\ que\ impair\ de\ {0}\ est\ {1}\ alors\ que\ cela\ devrait\ \u00eatre\ {2}.\n=Your code indicates that odd of {0} is {1} whereas it should be {2}.\n

#: m03dem4/src/Tests.java:60
#, java-format
Le\ dessin\ de\ la\ lettre\ L\ avec\ le\ caract\u00e8re\ {0}\ de\ hauteur\ {1}\ et\ largeur\ {2}\ donne\ \n\n{3}\net\ votre\ programme\ donne\n\n{4}\nAssurez\ vous\ aussi\ de\ ne\ pas\ mettre\ des\ espaces\ inutiles\ dans\ vos\ prints.=The drawing of the letter L with the character {0} of height {1} and width {2} gives\n\n{3}\nAnd your program gives\n\n{4}\nAlso make sure not to put unnecessary spaces in your prints.

#: m03dem5/src/Tests.java:30
#, java-format
Le\ nombre\ de\ diviseurs\ entiers\ du\ nombre\ {0}\ est\ {1}.\nCependant,\ votre\ code\ indique\ {2}.\n=The number of integer divisors of the number {0} is {1}.\nHowever, your code says {2}.\n

#: m04Q1/src/Tests.java:32 m04Q2/src/Tests.java:30
#, java-format
Avec\ les\ arguments\ c\="{0}"\ et\ s\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the arguments c\="{0}" and s\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04Q10/src/Tests.java:30 m04Q11/src/Tests.java:29 m04Q3/src/Tests.java:30
#: m04Q5/src/Tests.java:30 m04Q7/src/Tests.java:29 m04Q9/src/Tests.java:30
#, java-format
Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=With the argument s\="{0}", the expected result is\n{1}\nUnfortunately, your code returns\n{2}\n

#: m04Q4/src/Tests.java:94
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ majuscule\ ?\n=Do you check the presence of capital letter?\n

#: m04Q4/src/Tests.java:100
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ minuscule\ ?\n=Do you check the presence of a lowercase letter?\n

#: m04Q4/src/Tests.java:106
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'un\ chiffre\ ?\n=Do you check the presence of a number?\n

#: m04Q4/src/Tests.java:112
V\u00e9rifiez-vous\ toutes\ les\ conditions\ simultan\u00e9ment\ ?\n=Do you check all conditions simultaneously?\n

#: m04Q4/src/Tests.java:118
V\u00e9rifiez-vous\ la\ longueur\ du\ mot\ de\ passe\ ?\n=Do you check the length of the password?\n

#: m04Q4/src/Tests.java:130
#, java-format
Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\ {1},\ malheureusement,\ votre\ code\ renvoie\ {2}.\n=With the argument s\="{0}", the expected result {1} but your code returns {2}.\n

#: m04Q6/src/Tests.java:36 m04Q8/src/Tests.java:36 m04dem5/src/Tests.java:70
#, java-format
Avec\ les\ arguments\ s1\="{0}"\ et\ s2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the arguments s1\="{0}" and s2\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04_bf/src/Tests.java:34
#, java-format
Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ p\ \=\ "{2}"\ et\ s\ \=\ "{3}".\n=Your {0} method returned {1} when it was called with p \= "{2}" and s \= "{3}".\n

#: m04dem3/src/Tests.java:27
#, java-format
Avec\ les\ arguments\ {1},\ votre\ m\u00e9thode\ doit\ afficher\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With arguments {1}, your method must display\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04dem4/src/Tests.java:44
#, java-format
Avec\ l''argument\ "{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=With the argument "{0}", the expected result is\n{1}\nUnfortunately, your code returns\n{2}\n

#: m05Q1/src/Tests.java:33 m05Q10/src/Tests.java:32 m05Q11/src/Tests.java:32
#: m05Q12/src/TestsQ1.java:33 m05Q2/src/Tests.java:33 m05Q3/src/Tests.java:33
#: m05Q4/src/Tests.java:31 m05Q7/src/Tests.java:34 m05dem4/src/Tests.java:74
Votre\ m\u00e9thode\ modifie\ le\ contenu\ du\ tableau\ pass\u00e9\ en\ argument.\ Une\ telle\ modification\ n'est\ autoris\u00e9e\ que\ si\ elle\ est\ explicitement\ indiqu\u00e9e\ dans\ les\ sp\u00e9cifications.\ Ce\ n'est\ pas\ le\ cas\ pour\ cette\ m\u00e9thode.\n=Your method changes the contents of the array passed as an argument. Such modification is permitted only if explicitly stated in the specifications. This is not the case for this method.\n

#: m05Q1/src/Tests.java:40
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}.\n=With the array {0}, your method should return {1}.\n

#: m05Q10/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ a\ \=\ {0}\ et\ b\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=Calling your method with a \= {0} and b \= {1}\nreturns {2} instead of {3}

#: m05Q11/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ n\ \=\ {0}\ et\ v\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=Calling your method with n \= {0} and v \= {1}\nreturns {2} instead of {3}

#: m05Q12/src/TestsQ1.java:32 m05Q9/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ retourne\ {1}\ au\ lieux\ de\ {2}=Calling your method with v \= {0} returns {1} instead of {2}

#: m05Q12/src/TestsQ2.java:32
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ doit\ donner\ {1}.\nOr,\ vos\ modifications\ du\ tableau\ donnent\ {2}=Calling your method with v \= {0} should returns {1}.\nHowever, your changes in the array give {2}

#: m05Q2/src/Tests.java:40 m05Q3/src/Tests.java:40
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1,number,\#}\ mais\ elle\ retourne\ {2,number,\#}.\n=With the array {0}, your method should return {1,number,\#} but return {2,number,\#}.\n

#: m05Q4/src/Tests.java:38
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}\ mais\ elle\ retourne\ {2}.\n=With the array {0}, your method should return {1} but return {2}.\n

#: m05Q5/src/Tests.java:33 m05Q6/src/Tests.java:38 m05dem3/src/Tests.java:39
Votre\ code\ retourne\ null.=Your code returns null.

#: m05Q5/src/Tests.java:34
Votre\ tableau\ n'a\ pas\ la\ bonne\ taille.=Your array does not have the correct size.

#: m05Q5/src/Tests.java:36
Un\ des\ \u00e9l\u00e9ment\ de\ votre\ tableau\ n'a\ pas\ la\ bonne\ valeur.=One of the element in your array does not have the correct value.

#: m05Q6/src/Tests.java:31 m05dem3/src/Tests.java:32
#, java-format
Avec\ une\ taille\ de\ {0},\ votre\ code\ g\u00e9n\u00e8re\ \:\n\n{1}\n\nOr,\ vous\ devriez\ avoir\ \:\ \n\n{2}=With a size of {0}, your code generates\:\n\n{1}\n\nBut, you should have\:\n\n{2}

#: m05Q6/src/Tests.java:32 m05dem3/src/Tests.java:33
Votre\ matrice\ n'a\ pas\ la\ bonne\ taille.\n=Your matrix does not have the correct size.\n

#: m05Q7/src/Tests.java:33
#, java-format
Votre\ code\ retourne\ {0}\ \u00e0\ la\ place\ de\ {1}\ avec\ l''occurence\ {2}\ et\ le\ tableau\ \:\n\n{3}\n=Your code returns {0} instead of {1} with the occurrence {2} and the array\:\n\n{3}\n

#: m05Q7/src/Tests.java:79 m05Q8/src/Tests.java:87
Cette\ exception\ est\ survenue\ quand\ le\ tableau\ est\ \:\n=This error occurred when the array is\:\n

#: m05Q8/src/Tests.java:33
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ et\ w\ \=\ {1}\ et\ m\ \=\ \n{2}\nretourne\n{3}\nau\ lieux\ de\n{4}=Calling your method with v \= {0} and w \= {1} and m \=\n{2}\nreturn\n{3}\ninstead of\n{4}

#: m05_bf/src/Tests.java:35
#, java-format
Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau.\nLe\ tableau\ original\ est\ \:\n{1}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{2}\nVotre\ tableau\ est\ \:\n{3}=Your {0} method does not change the array correctly.\nThe original array is\:\n{1}\nThe expected array is\:\n{2}\nYour array is\:\n{3}

#: m05_bf/src/Tests.java:36
#, java-format
Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau\ avec\ n\ \=\ {1}.\nLe\ tableau\ original\ est\ \:\n{2}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{3}\nVotre\ tableau\ est\ \:\n{4}=Your {0} method does not change the array correctly when n \= {1}.\nThe original array is\:\n{2}\nThe expected array is\:\n{3}\nYour array is\:\n{4}

#: m05dem1/src/Tests.java:33
#, java-format
Le\ tableau\ doit\ avoir\ une\ taille\ de\ {1}.\ Cependant,\ votre\ code\ cr\u00e9e\ un\ tableau\ de\ taille\ {2}.\n=The array must be a size of {1}. However, your code creates an array of size {2}.\n

#: m05dem1/src/Tests.java:34
#, java-format
La\ matrice\ devrait\ avoir\ {1}\ lignes\ et\ {2}\ colonnes.\ Cependant,\ votre\ code\ cr\u00e9e\ une\ matrice\ de\ {3}\ lignes\ et\ {4}\ colonnes.=The matrix should have {1} rows and {2} columns. However, your code creates a matrix of {3} rows and {4} columns.

#: m05dem1/src/Tests.java:36
Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ lignes.\n=You do not use the correct operation to get the number of rows.\n

#: m05dem1/src/Tests.java:37
Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ colonnes.\n=You do not use the correct operation to get the number of columns.\n

#: m05dem2/src/Tests.java:33
Le\ test\ t1\ \=\=\ t2\ ne\ r\u00e9ussi\ pas.\n=The test t1 \=\= t2 is not successful.\n

#: m05dem2/src/Tests.java:34
#, java-format
Avec\ t1\ \=\ {1}\ et\ t2\ \=\ {2},\ votre\ code\ ne\ donne\ pas\ le\ bon\ r\u00e9sultat.=With t1 \= {1} and t2 \= {2}, your code does not give the correct result.

#: m05dem2/src/Tests.java:77
Les\ deux\ tableaux\ ne\ sont\ pas\ forc\u00e9ment\ de\ la\ m\u00eame\ taille\u2026=The two arrays are not necessarily of the same size \u2026

#: m05dem4/src/Tests.java:71
#, java-format
{0}\ \:\ vous\ utilisez\ mal\ les\ assertions.={0}\: You misuse assertions.

#: m05dem4/src/Tests.java:79
#, java-format
{0}\ \:\ votre\ code\ retourne\ null.={0}\: Your code returns null.

#: m05dem4/src/Tests.java:81
#, java-format
{0}\ \:\ votre\ code\ ne\ calcule\ pas\ la\ somme\ correctement.={0}\: Your code does not calculate the sum correctly.

#: m05dem4/src/Tests.java:106 m05dem4/src/Tests.java:109
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ a\ et/ou\ b\ est\ null.={0}\: You must throw an assert if a and/or b is null.

#: m05dem4/src/Tests.java:106
Faites\ aussi\ attention\ \u00e0\ l''ordre\ de\ vos\ assertions.\ Par\ exemple,\ l''assertion\ qui\ v\u00e9rifie\ que\ ''a''\ est\ diff\u00e9rent\ de\ null\ doit\ venir\ avant\ l''assertion\ qui\ v\u00e9rifie\ la\ taille\ de\ la\ matrice\ car\ sinon,\ vous\ allez\ provoquer\ une\ NullPointerException.=Also pay attention to the order of your assertions. For example, the assertion that verifies that ''a'' is different of null must come before the assertion that checks the size of the matrix because otherwise you will cause a NullPointerException.

#: m05dem4/src/Tests.java:140
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ lignes/colonnes\ ne\ sont\ pas\ TOUTES\ de\ le\ m\u00eame\ longeur\ (si\ un\ des\ double\ tableaux\ est\ arrang\u00e9\ sous\ forme\ triangle\ par\ exemple).={0}\: You must throw an assert in case rows/columns are not ALL of the same length (if one of the double array is arranged in a triangle form for example).

#: m05dem4/src/Tests.java:166
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ matrices\ ne\ sont\ pas\ de\ la\ m\u00eame\ taille.={0}\: You must throw an assert in case the matrices are not the same size.

#: m05dem5/src/Tests.java:59
Vous\ n'affichez\ pas\ correctement\ les\ Strings\ pr\u00e9sents\ dans\ args.\ N'oubliez\ pas\ de\ faire\ un\ retour\ \u00e0\ la\ ligne\ apr\u00e8s\ chaque\ \u00e9l\u00e9ment\ de\ args.=You do not correctly display Strings from args. Do not forget to make a line break after each element of args.

#: m05dem5/src/Tests.java:91
#, java-format
Avec\ args\ \=\ {0}\ vous\ affichez\ ''{1}''\ alors\ qu''il\ faut\ afficher\ ''{2}''.\n=With args \= {0}, you print ''{1}'' but you should print ''{2}''\n

#: m06Q1/src/TestCode.java:40
#, java-format
lorsque\ on\ fait\ new\ Date({0},{1},{2}),\ votre\ date\ est\ {3}/{4}/{5}=when we perform new Date({0},{1},{2}), your date is {3}/{4}/{5}

#: m06Q10/src/TestCode.java:68
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ la\ m\u00e9thode\ surface()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ surfaces\ \!={0}\: You must use the surface() method to retrieve surface values\!

#: m06Q10/src/TestCode.java:96
#, java-format
{0}\ \:\ lorsque\ l''on\ compare\ les\ rectangle\ {1}\ et\ {2},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!={0}\: When comparing rectangle {1} and {2}, your method should return {3} but this is not the case\!

#: m06Q11/src/TestParam.java:63
#, java-format
Lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ rectangles\ {0}\ et\ {1},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ le\ cas\ \!=When executing your code with rectangles {0} and {1}, your method should return {2} but that is not the case\!

#: m06Q2/src/TestCode.java:58
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getJour()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getJour() on date {1}, your code returns {2} instead of {3}

#: m06Q2/src/TestCode.java:73
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getMois()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getMois() on date {1}, your code returns {2} instead of {3}

#: m06Q2/src/TestCode.java:89
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getAnnee()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getJour() on date {1}, your code returns {2} instead of {3}

#: m06Q3/src/TestCode.java:62 m06Q4/src/TestCode.java:74
#: m06Q8/src/TestCode.java:67 m06Q9/src/TestCode.java:65
#: m06dem1/src/TestCode.java:56 m07Q2/src/TestCode.java:91
#: m07dem1/src/TestCode.java:158
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ les\ getters\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!={0}\: You must use the getters to retrieve the values of the instance variables\!

#: m06Q3/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ Attention,\ pour\ les\ date\ {0}\ et\ {1},\ votre\ code\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ la\ cas\ \!=Test 2\: Be careful, for dates {0} and {1}, your code should return {2} but it is not\!

#: m06Q4/src/TestParam.java:60
#, java-format
Test\ 2\ \:\ Attention,\ pour\ la\ date\ {0}\ vous\ renvoyez\ {1}\ \u00e0\ la\ place\ de\ {2}=Test 2\: Be careful, for the date {0} you return {1} instead of {2}

#: m06Q5/src/TestCode.java:59
#, java-format
{0}\ \:\ lorsque\ la\ fraction\ vaut\ {1},\ votre\ m\u00e9thode\ getNum()\ retourne\ {2}\ au\ lieu\ de\ {3}={0}\: When the fraction is {1}, your getNum() method returns {2} instead of {3}

#: m06Q5/src/TestCode.java:74
#, java-format
Test\ \:\ lorsque\ la\ fraction\ vaut\ {0},\ votre\ m\u00e9thode\ getDen()\ retourne\ {1}\ au\ lieu\ de\ {2}=Test\: When the fraction is {0}, your getDen() method returns {1} instead of {2}

#: m06Q6/src/TestCode.java:66
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ les\ m\u00e9thodes\ getNum()\ et\ getDen()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!={0}\: You must use the getNum() and getDen() methods to retrieve the values of the instance variables\!

#: m06Q6/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ lance\ la\ fonction\ entier()\ avec\ la\ fraction\ {0},\ votre\ code\ devrait\ renvoyer\ {1}\ mais\ ce\ n''est\ pas\ le\ cas.=Test 2\: When executing the entier() function with the fraction {0}, your code should return {1} but it is not.

#: m06Q7/src/TestCode.java:59
#, java-format
{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getX()\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: For the pair {1}, your getX() method returns {2} instead of {3}

#: m06Q7/src/TestCode.java:76
#, java-format
{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getY()\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: For the pair {1}, your getY() method returns {2} instead of {3}

#: m06Q8/src/TestParam.java:70
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ points\ {0}\ et\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the points {0} and {1}, your code returns {2} instead of {3}

#: m06Q9/src/TestCode.java:92
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ le\ rectangle\ {1},\ elle\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When calling your method on rectangle {1}, it returns {2} instead of {3}

#: m06_bf/src/librairies/Inspector.java:216
#: m07_bf/src/librairies/Inspector.java:168 utilities/Inspector.java:168
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:220
#: m07_bf/src/librairies/Inspector.java:172 utilities/Inspector.java:172
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:223
#: m07_bf/src/librairies/Inspector.java:175 utilities/Inspector.java:175
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:226
#: m07_bf/src/librairies/Inspector.java:178 utilities/Inspector.java:178
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:291
#: m07_bf/src/librairies/Inspector.java:243 utilities/Inspector.java:243
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {4}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:295
#: m07_bf/src/librairies/Inspector.java:247 utilities/Inspector.java:247
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:298
#: m07_bf/src/librairies/Inspector.java:250 utilities/Inspector.java:250
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:301
#: m07_bf/src/librairies/Inspector.java:253 utilities/Inspector.java:253
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/TestCode.java:126 m06_bf/src/TestCode.java:150
#: m06_bf/src/TestCode.java:174 m06_bf/src/TestCode.java:197
#: m06_bf/src/TestCode.java:221
#, java-format
!{0}\ \:\ aucun\ constructeur\ public\ prenant\ comme\ premier\ param\u00e8tre\ un\ String\ et\ comme\ deuxi\u00e8me\ un\ float\ n''as\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m06_bf/src/TestCode.java:127
#, java-format
!{0}\ \:\ lorsque\ l''on\ construit\ un\ nouvel\ objet\ Employe\ avec\ comme\ param\u00e8tre\ {1}\ et\ {2,number,\#},\ il\ n''y\ a\ pas\ de\ variable\ d''instance\ avec\ la\ valeur\ {3}\ \!=

#: m06_bf/src/TestCode.java:130
Une\ erreur\ inattendu\ est\ survenue\ dans\ votre\ t\u00e2che,\ veuillez\ contactez\ une\ administrateur=An unexpected error occurred in your task, please contact your administrator

#: m06_bf/src/TestCode.java:151
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ le\ nom\ {1},\ votre\ m\u00e9thode\ getNom()\ retourne\ {2}={0}\: When we have an employee with the name {1}, your getNom() method returns {2}

#: m06_bf/src/TestCode.java:157 m06_bf/src/TestCode.java:180
#: m06_bf/src/TestCode.java:203 m06_bf/src/TestCode.java:230
#, java-format
!{0}\ \:\ la\ m\u00e9thode\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!=

#: m06_bf/src/TestCode.java:177
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ un\ salaire\ de\ {1},\ votre\ m\u00e9thode\ getSalaire()\ retourne\ {2}={0}\: When you have an employee with a salary of {1}, your getSalary() method returns {2}

#: m06_bf/src/TestCode.java:200
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ l''Employe\ {1}\ avec\ le\ salaire\ {2},\ votre\ m\u00e9thode\ toString\ retourn\ {3}={0}\: When we have an Employee {1} with salary {2}, your toString() method returns {3}

#: m06_bf/src/TestCode.java:226
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ Employe\ avec\ un\ salaire\ de\ {1}\ et\ que\ l''on\ augmente\ de\ {2},\ votre\ m\u00e9thode\ fixe\ son\ salaire\ \u00e0\ {3}={0}\: When we have an Employee with a salary of {1} and you increase him by {2}, your method sets his salary to {3}

#: m06dem1/src/TestCode.java:70
#, java-format
{0}\ \:\ Il\ semblerait\ que\ votre\ m\u00e9thode\ renvoie\ un\ r\u00e9sultat\ incorrect.\ La\ m\u00e9thode\ doit\ renvoyer\ une\ nouvelle\ paire\ \!={0}\: It appears that your method returns an incorrect result. The method must return a new pair\!

#: m06dem1/src/TestCode.java:92
#, java-format
{0}\ \:\ Votre\ m\u00e9thode\ ne\ renvoie\ pas\ une\ paire\ avec\ les\ bonne\ valeurs.\ Pour\ la\ pair\ ({1},{2}),\ vous\ renvoyez\ ({3},{4})\ au\ lieu\ de\ ({5},{6}).={0}\: Your method does not return a pair with the correct values. For the pair ({1}, {2}), you return ({3}, {4}) instead of ({5}, {6}).

#: m06dem1/src/TestCode.java:115
#, java-format
{0}\ \:\ Votre\ m\u00e9thode\ semble\ modifier\ les\ variable\ d''instances\ de\ l''instance\ appelante.\ La\ paire\ appelante\ vallait\ ({1},{2})\ et\ vaut\ maintenant\ ({3},{4}).={0}\: Your method seems to change the instance variables of the calling instance. The calling pair was ({1}, {2}) and is now ({3}, {4}).

#: m06dem2/src/TestCode.java:61
#, java-format
{0}\ \:\ vous\ devez\ utilisez\ setOrdered()\ pour\ changer\ la\ valeur\ de\ ''ordered''\ \!={0}\: You must use setOrdered() to change the value of ''ordered''\!

#: m06dem2/src/TestCode.java:77
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6}\ mais\ ce\ n''est\ pas\ le\ cas={0}\: after calling setA({1}), we have the pair ({2}, {3}) and ''ordered'' should be {4} because {5} <\= {6} but this is not the case

#: m06dem2/src/TestCode.java:113
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setB({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6},\ mais\ ce\ n''est\ pas\ le\ cas={0}\: after a call to setB({1}), we have pair ({2}, {3}) and ''ordered'' should be {4} because {5} <\= {6}, but this is not the case

#: m06dem2/src/TestCode.java:144
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ ''a''\ vaut\ {2}\ au\ lieu\ de\ {3}={0}\: after calling setA({1}), ''a'' is {2} instead of {3}

#: m06dem2/src/TestCode.java:145
#, java-format
{0}\:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}={0}\: after calling setA({1}), {2} ''a'' changed from {3} to {4}

#: m06dem2/src/TestCode.java:189
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ setB({1}),\ ''b''\ vaut\ {2}\ au\ lieu\ de\ {3}={0}\: after calling setB({1}), ''b'' is {2} instead of {3}

#: m06dem2/src/TestCode.java:190
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ setB({0})\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}={0}\: after calling setB({0}) {2} ''a'' changed from {3} to {4}

#: m06dem3/src/TestCode.java:65
#, java-format
{0}\ \:\ Vous\ devez\ utiliser\ la\ m\u00e9thode\ get()\ pour\ r\u00e9cup\u00e9rer\ la\ valeur\ du\ drapeau\ \!={0}\: You must use the get() method to retrieve the flag value\!

#: m06dem3/src/TestCode.java:80
#, java-format
{0}\ \:\ lorsque\ ''d''\ a\ l''\u00e9tat\ {1}\ et\ que\ la\ variable\ drapeau\ vaut\ {2},\ votre\ m\u00e9thode\ devrait\ retourner\ {3}\ mais\ ce\ n''est\ pas\ le\ cas.={0}\: When ''d'' is in state {1} and the flag variable is {2}, your method should return {3} but this is not the case.

#: m06dem4/src/TestCode.java:53
#, java-format
{0}\ \:\ Attention,\ vous\ ne\ lisez\ pas\ toutes\ les\ lignes\ du\ fichier,\ v\u00e9rifiez\ la\ condition={0}\: Be careful, you do not read all the lines of the file, check the condition

#: m06dem4/src/TestCode.java:60
#, java-format
{0}\ \:\ V\u00e9rifiez\ votre\ condition,\ vous\ avez\ provoqu\u00e9\ une\ EOFException\ \!={0}\: Check your condition, you have caused an EOFException\!

#: m06dem4/src/TestCode.java:77
#, java-format
{0}\ \:\ Le\ fichier\ ''student/cotes.txt''\ n''est\ pas\ lu\ correctement.\ V\u00e9rifiez\ la\ condition\ de\ boucle\ \!={0}\: The file ''student / cotes.txt'' is not read correctly. Check the loop condition\!

#: m06dem4/src/TestCode.java:98
#, java-format
{0}\ \:\ Vous\ avez\ caus\u00e9\ une\ FileNotfoundException,\ v\u00e9rifiez\ le\ nom\ du\ fichier\ \!={0}\: You caused a FileNotfoundException, check the file name\!

#: m07Q1/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ l'employ\u00e9\ {0}\ par\ rapport\ \u00e0\ l'objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the employee {0} in relation to the object {1}, your code returns {2} instead of {3}

#: m07Q10/src/TestCode.java:80
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyez\ le\ bon\ String.\ Vous\ renvoyez\n''{1}''\ \u00e0\ la\ place\ de\n''{2}''={0}\: Your code does not seem to return the correct String. You return\n''{1}'' in place of\n''{2}''

#: m07Q10/src/TestCode.java:101
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ utiliser\ la\ m\u00e9thode\ toString()\ de\ la\ classe\ m\u00e8re={0}\: Your code does not seem to use the toString() method of the parent class

#: m07Q11/src/TestParam.java:71
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ le\ DeStats\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your method with the DeStats {0} to object {1}, your code returns {2} instead of {3}

#: m07Q2/src/TestCode.java:55
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ nom\ de\ l''employ\u00e9\ \!={0}\: Your code does not seem to return a String containing the employee's name\!

#: m07Q2/src/TestCode.java:70
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ salaire\ de\ l''employ\u00e9\ \!={0}\: your code does not seem to return a String containing the employee's salary\!

#: m07Q3/src/TestParam.java:72
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ d\u00e9\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your code with the die {0} in relation to the object {1}, your code returns {2} instead of {3}

#: m07Q4/src/TestCode.java:75
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ nom\ \!={0}\: Be careful, your constructor does not build a director with the correct name\!

#: m07Q4/src/TestCode.java:89
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ salaire\ \!={0}\: Be careful, your constructor does not build a director with the correct salary\!

#: m07Q4/src/TestCode.java:103
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ la\ bonne\ prime\ \!={0}\: Be careful, your constructor does not build a director with the correct bonus\!

#: m07Q5/src/TestCode.java:81
#, java-format
{0}\ \:\ vous\ devez\ faire\ appel\ \u00e0\ la\ m\u00e9thode\ getSalaire()\ de\ la\ classe\ m\u00e8re\ \!={0}\: You must use the getSalaire() method of the parent class\!

#: m07Q5/src/TestCode.java:100
#, java-format
{0}\ \:\ Pour\ le\ directeur\ {1},\ votre\ m\u00e9thode\ renvoie\ {2,number,\#}\ au\ lieu\ de\ {3,number,\#}={0}\: For director {1}, your method returns {2,number,\#} instead of {3,number,\#}

#: m07Q6/src/TestParam.java:65
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ directeur\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the director {0} relative to object {1}, your code returns {2} instead of {3}

#: m07Q7/src/TestCode.java:76
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStat\ avec\ le\ bon\ nom\ \!={0}\: Your code does not seem to initialize a DeStat object with the correct name\!

#: m07Q7/src/TestCode.java:91
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStats\ avec\ le\ bon\ nombre\ de\ lancers\ totaux\ \!={0}\: Your code does not seem to initialize a DeStats object with the correct number of total throws\!

#: m07Q7/src/TestCode.java:106
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ (il\ est\ null)\ \!={0}\: Your code does not seem to initialize the result array (it is null)\!

#: m07Q7/src/TestCode.java:121
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ la\ bonne\ taille\ \!={0}\: Your code does not seem to initialize the result array with the correct size\!

#: m07Q7/src/TestCode.java:137
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ les\ bonnes\ valeurs\ \!={0}\: Your code does not seem to initialize the result array with the correct values\!

#: m07Q8/src/TestCode.java:81
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ r\u00e9sultat\ donn\u00e9\ par\ le\ d\u00e9={0}\: Your code does not seem to return the result given by the die

#: m07Q8/src/TestCode.java:101
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ \!={0}\: Your code does not seem to correctly increment the number of throws\!

#: m07Q8/src/TestCode.java:120
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ pour\ un\ r\u00e9sultat\ particulier\ \!={0}\: Your code does not seem to correctly increment the number of throws for a particular result\!

#: m07Q8/src/TestCode.java:141
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ appeler\ la\ m\u00e9thode\ lance()\ de\ la\ classe\ m\u00e8re={0}\: Your code does not seem to call the lance() method from the parent class

#: m07Q9/src/TestCode.java:76
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ tableau\ de\ r\u00e9sultats={0}\: Your code does not appear to return the result array

#: m07_bf/src/TestItem.java:57
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ l''item\ qui\ a\ comme\ auteur\ {1},\ comme\ titre\ {2}\ et\ comme\ num\u00e9ros\ de\ s\u00e9rie\ {3,number,\#},\ votre\ m\u00e9thode\ renvoie\ ''{4}''\ au\ lieu\ de\ ''{5}''={0}\: When we execute your method with the item that has {1} as author, {2} as title and as serial numbers {3,number,\#}, your method returns ' '{4}' ' instead of ' '{5}' '

#: m07_bf/src/TestCD.java:102
#, java-format
!{0}\ \:\ aucun\ constructeur\ avec\ comme\ premier\ param\u00e8tre\ un\ String,\ comme\ deuxi\u00e8me\ un\ String\ et\ comme\ trois\u00e8me\ un\ int\ n''a\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:106
!{0}\ \:\ apr\u00e8s\ avoir\ appel\u00e9\ votre\ constructeur\ avec\ les\ param\u00e8tre\ {1}\ (auteur),\ {2}\ (titre}\ et\ {3}\ (dur\u00e9e),\ il\ manque\ certaines\ variables\ d''instance\ avec\ ces\ valeurs\ \!=

#: m07_bf/src/TestCD.java:111
!La\ m\u00e9thode\ toString()\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:114
#, fuzzy, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ toString()\ sur\ le\ CD\ ayant\ pour\ auteur\ {1},\ titre\ {2},\ et\ dur\u00e9e\ {3,number,\#},\ votre\ m\u00e9thode\ retourne\n{4}\n\ au\ lieu\ de\n{5}=Test min\: When executing your min() method on the matrix {0}, your code returns {1} instead of {2}

#: m07dem1/src/TestCode.java:123
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ les\ paires\ {1}\ et\ {2},\ votre\ code\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!={0}\: When calling your method with pairs {1} and {2}, your code should return {3} but it is not the case\!

#: m07dem2/src/TestCode.java:60
#, java-format
{0}\ \:\ votre\ classe\ n''incr\u00e9mente\ pas\ les\ tickets\ \!={0}\: your class does not increment tickets\!

#: m07dem2/src/TestCode.java:75
#, java-format
{0}\ \:\ le\ premier\ ticket\ n''as\ pas\ le\ num\u00e9ro\ 1,\ il\ a\ le\ num\u00e9ro\ {1}={0}\: the first ticket does not have the number 1, it has the number {1}

#: m08Q1/src/TestCode.java:103 m08Q1/src/TestCode.java:124
#: m08Q1/src/TestCode.java:144
#, java-format
{0}\ \:\ votre\ code\ construit\ une\ instance\ o\u00f9\ s\ est\ null\ \!={0}\: Your code builds an instance where s is null\!

#: m08Q1/src/TestCode.java:106
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ StringTab\ de\ taille\ 1\ \!={0}\: Your code does not build a StringTab of size 1\!

#: m08Q1/src/TestCode.java:127
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ constructeur\ avec\ comme\ param\u00e8tre\ {1},\ la\ premi\u00e8re\ lettre\ de\ votre\ StringTab\ est\ {2}={0}\: When executing your constructor with the {1} parameter, the first letter of your StringTab is {2}

#: m08Q1/src/TestCode.java:147
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ vous\ construisez\ un\ String\ de\ taille\ {2}={0}\: When we pass as a parameter {1} to your constructor, you construct a String of size {2}

#: m08Q1/src/TestCode.java:164
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ votre\ tableau\ est\ {2}={0}\: When we pass the parameter {1} to your constructor, your array is {2}

#: m08Q1/src/TestCode.java:181
#, java-format
{0}\ lorsque\ l''on\ utilise\ votre\ m\u00e9thode\ length()\ sur\ le\ StringTab\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}={0} When calling your length() method on the StringTab {1}, your method returns {2}

#: m08Q1/src/TestCode.java:199
#, java-format
{0}\ lorsque\ l''on\ a\ le\ tableau\ {1}\ et\ que\ l''on\ fait\ charAt({2}),\ votre\ m\u00e9thode\ renvoie\ {3}={0} when we perform charAt({2}) on the array {1}, your method returns {3}

#: m08Q2/src/TestCode.java:109
#, java-format
{0}\ \:\ lorsque\ l''on\ concat\u00e8ne\ {1}\ avec\ {2},\ votre\ code\ renvoie\ {2}={0}\: When concatenating {1} with {2}, your code returns {2}

#: m08Q3/src/TestParam.java:63
#, java-format
Lorsque\ l''on\ v\u00e9rifie\ que\ le\ StringTab\ {0}\ apparait\ dans\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=When checking that the String Tab {0} appears in {1}, your code returns {2} instead of {3}

#: m08Q4/src/TestAnd.java:71
#, java-format
Test\ 8\ \:\ lorsque\ l''on\ fait\ un\ ET\ logique\ entre\ les\ ByteString\ {0}\ et\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ retourne\ le\ Byte\ {2}\ au\ lieu\ de\ {3}\ (repr\u00e9sentation\ String)=Test 8\: When doing a logical AND between ByteString {0} and {1} (String representation), your method returns Byte {2} instead of {3} (String representation)

#: m08Q4/src/TestGet.java:75
#, java-format
Test\ 3\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ getBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ naturelle\ est\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}.=Test 3\: When we run your getBit({0}) method on the ByteString whose natural representation is {1}, your code returns {2} instead of {3}.

#: m08Q4/src/TestReset.java:73
#, java-format
Test\ 5\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ resetBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=Test 5\: When we run your resetBit({0}) method on the ByteString whose ByteString natural representation is {1}, your code returns {2} instead of {3}.

#: m08Q4/src/TestRotate.java:70
#, java-format
Test\ 7\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=Test 7\: When executing your rotateRight() method on the ByteString {0}, the string becomes {1} instead of {2}

#: m08Q4/src/TestSet.java:80
#, java-format
Test\ 4\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ setBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=Test 4\: When we run your setBit({0}) method on the ByteString whose ByteString representation is {1}, the string becomes {2} instead of {3}.

#: m08Q4/src/TestShift.java:70
#, java-format
Test\ 6\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=Test 6\: When we execute your shiftLeft() method on ByteString {0}, the string becomes {1} instead of {2}

#: m08Q4/src/TestConstruct.java:82
#, java-format
{0}\ \:\ votre\ code\ construit\ le\ byte\ {1}\ (repr\u00e9sentation\ naturelle)\ au\ lieu\ du\ byte\ 00000000\ (repr\u00e9sentation\ naturelle)={0}\: your code constructs the byte {1} (natural representation) instead of byte 00000000 (natural representation)

#: m08Q4/src/TestConstruct.java:83
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ String\ de\ taille\ 8={0}\: Your code does not build a String of size 8

#: m08Q4/src/TestConstruct.java:104
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ argument\ {1}\ \u00e0\ votre\ constructeur,\ il\ cr\u00e9e\ le\ byte\ {2}\ (repr\u00e9sentation\ naturelle)={0}\: when passing {1} as argument to your constructor, it creates the byte {2} (natural representation)

#: m08Q4/src/TestConstruct.java:108
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ byte\ de\ taille\ 8={0}\: Your code does not build a StringTab of size 1

#: m08Q5/src/TestGet.java:70
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ getBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your method getBit ({0}) with as byte {1} (String representation), your method returns {2} instead of {3}

#: m08Q5/src/TestReset.java:73
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ resetBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your method resetBit({0}) with as byte {1} (String representation), the byte becomes {2} instead of {3}

#: m08Q5/src/TestRotate.java:75
#, java-format
Test\ 5\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ String\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=Test 5\: When you call your rotateRight() method on String {0} (String representation), it becomes {1} instead of {2}

#: m08Q5/src/TestSet.java:73
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ setBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=Test 2\: When you call your method setBit({0}) with as byte {1} (String representation), the byte becomes {2} instead of {3}

#: m08Q5/src/TestShift.java:75
#, java-format
Test\ 4\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ byte\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=Test 4\: When calling your shiftLeft() method on the byte {0} (String representation), it becomes {1} instead of {2}

#: m08Q6/src/TestMax.java:61
#, java-format
Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ max()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Max test\: when executing the max() method with array {0}, the result is {1} instead of {2}

#: m08Q6/src/TestMin.java:61
#, java-format
Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ min()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Min Test\: When executing the min() method with array {0}, the result is {1} instead of {2}

#: m08Q6/src/TestMoyenne.java:59
#, java-format
Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ moyenne()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Average test\: when the average method() is executed with the array {0}, the result is {1} instead of {2}

#: m08Q7/src/TestMax.java:60
#, fuzzy, java-format
!Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ max()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Test Max\: When we run your max() method on the matrix {0}, your code returns {1} instead of {2}

#: m08Q7/src/TestMin.java:60
#, fuzzy, java-format
!Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ min()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Test min\: When executing your min() method on the matrix {0}, your code returns {1} instead of {2}

#: m08Q7/src/TestMoyenne.java:60
#, fuzzy, java-format
!Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ moyenne()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Average test\: when we run your moyenne() on the matrix\n{0}, your code returns {1} instead of {2}

#: m08dem1/src/TestParam1.java:61
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set({0})\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}=Test 1\: When we run your set({0}) method on a flag with state {1}, the flag state becomes {2}

#: m08dem1/src/TestParam2.java:72
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set(''{0}'')\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}\n=Test 2\: When we execute your set(''{0}'') method on a flag with state {1}, the flag state becomes {2}\n

#: m09Q1/src/TestParam.java:67
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ la\ fraction\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=When you call your method with the fraction {0} on the object {1}, your method returns {2}. Review specifications\!

#: m09Q2/src/TestParam.java:70
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ l''employ\u00e9\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=When you call your method with the employee {0} on the object {1}, your method returns {2}. Review specifications\!

#: m09Q3/src/TestCode.java:93 m09Q4/src/TestCode.java:92
#: m09Q7/src/TestCode.java:88
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ un\ BufferedReader\ \!={0}\: You must use a BufferedReader\!

#: m09Q3/src/TestCode.java:115
#, java-format
{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close\ lorsque\ la\ m\u00e9thode\ se\ termine\ sans\ erreur\ \!={0}\: you do not call close() when the method ends without error\!

#: m09Q3/src/TestCode.java:131
#, java-format
{0}\ \:\ votre\ code\ ne\ compte\ pas\ le\ bon\ nombre\ de\ lignes\ \!={0}\: Your code does not count the correct number of lines\!

#: m09Q3/src/TestCode.java:155
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ -1\ lorsqu''une\ erreur\ se\ produit\ \!={0}\: You do not return -1 when an error occurs\!

#: m09Q3/src/TestCode.java:159 m09Q3/src/TestCode.java:183
#: m09Q4/src/TestCode.java:119 m09Q4/src/TestCode.java:194
#: m09Q7/src/TestCode.java:116
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ bien\ les\ IOExceptions\ \!={0}\: you do not manage IOExceptions correctly\!

#: m09Q3/src/TestCode.java:187 m09Q4/src/TestCode.java:198
#, java-format
{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsqu''une\ exception\ apparait\ \!={0}\: you do not close the stream when an exception occur\!

#: m09Q4/src/TestParam.java:64
\ Test\ 1\ \:\ votre\ code\ en\ renvoie\ pas\ le\ bon\ r\u00e9sultat\ \!=\ Test 1\: your code does not return the right result\!

#: m09Q4/src/TestCode.java:115
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ false\ lorsqu''une\ erreur\ se\ produit\ \!={0}\: You do not return false when an error occurs\!

#: m09Q4/src/TestCode.java:139
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ un\ String\ se\ trouvant\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When we call your method with a String in the file, you do not close the stream\!

#: m09Q4/src/TestCode.java:168
#, java-format
{0}\ \:\ lorsque\ le\ String\ ''s''\ ne\ se\ trouve\ pas\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When the String ''s'' is not in the file, you do not close the stream\!

#: m09Q5/src/TestCode.java:93
#, java-format
{0}\ \:\ lorsque\ le\ fichier\ n''existe\ pas,\ votre\ m\u00e9thode\ devrait\ renvoyer\ false\ mais\ ce\ n''est\ pas\ le\ cas\ \!={0}\: When the file does not exist, your method should return false but it is not the case\!

#: m09Q5/src/TestCode.java:108
#, java-format
{0}\ \:\ lorsque\ le\ fichier\ existe\ et\ est\ accessible,\ votre\ m\u00e9thode\ devrait\ renvoyer\ true\ mais\ ce\ n''est\ pas\ le\ cas\ \!={0}\: When the file exists and is accessible, your method should return true but it is not the case\!

#: m09Q6/src/TestCode.java:89 m09Q6/src/TestCode.java:121
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ les\ exceptions\ \!={0}\: you do not handle the exceptions\!

#: m09Q6/src/TestCode.java:123
#, java-format
{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close()\ \!={0}\: you do not call close ()\!

#: m09Q6/src/TestCode.java:194
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ tableau\ {1}\nle\ contenu\ de\ votre\ fichier\ est\n{2}\nau\ lieu\ de\ \n{3}={0}\: calling your code with the array {1}\nthe content of your file is\n{2}\ninstead of\n{3}

#: m09Q7/src/TestCode.java:111
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsqu''une\ IOException\ se\ produit\ \!={0}\: You do not return null when an IOException occurs\!

#: m09Q7/src/TestCode.java:120
#, java-format
{0}\ \:\ lorsqu''une\ IOException\ surgit,\ vous\ ne\ fermez\ pas\ le\ flux={0}\: When an IOException occurs, you do not close the stream

#: m09Q7/src/TestCode.java:144
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ \!={0}\: You do not return null when the file has a bad format\!

#: m09Q7/src/TestCode.java:148
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ le\ cas\ ou\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffre\ \!={0}\: You do not manage the case where the file has a bad digit format\!

#: m09Q7/src/TestCode.java:150
#, java-format
{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffres\ \!={0}\: You do not close the stream when the file has a wrong digits format\!

#: m09Q7/src/TestCode.java:207
#, java-format
{0}\ \:\ lorsque\ l''on\ lit\ le\ fichier\ suivant\n{1}\ avec\ votre\ m\u00e9thode,\ vous\ renvoyez\ {2}\ au\ lieu\ de\ {3}\ \!={0}\: when reading the following file\n{1} with your method, return {2} instead of {3}\!

#: m09Q7/src/TestCode.java:242
#, java-format
{0}\ \:\ lorsque\ tout\ se\ d\u00e9roule\ sans\ exception,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When everything happens without exception, you do not close the stream\!

#: m09dem1/src/TestParam.java:66
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ qu''ils\ sont\ \u00e9gaux\ \!=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m09dem1/src/TestParam.java:67
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ <\ {1}=When you call your method on the Integer {0} with argument {1}, your method says that {0} < {1}

#: m09dem1/src/TestParam.java:68
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ >\ {1}=When you call your method on the Integer {0} with argument {1}, your method says that {0} > {1}

#: m09dem2/src/TestCode.java:98
#, java-format
{0}\ \:\ attention,\ lorsqu''une\ exception\ est\ lanc\u00e9e,\ votre\ code\ doit\ renvoyer\ -1\ \!={0}\: Be careful, when an exception is thrown, your code must return -1\!

#: m09dem2/src/TestCode.java:103
#, java-format
{0}\ \:\ attention,\ vous\ ne\ g\u00e9rer\ pas\ les\ exceptions\ \!={0}\: be careful, you do not handle the exceptions\!

#: m09dem2/src/TestRes.java:99
#, java-format
{0}\ \:\ vous\ ne\ lisez\ pas\ bien\ le\ fichier,\ le\ r\u00e9sultat\ n'est\ pas\ celui\ attendu\ \!={0}\: you do not read the file well, the result is not the expected one\!

#: m10Q1/src/Tests.java:53
#, java-format
Avec\ les\ fractions\ f1\="{0}"\ et\ f2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the fractions f1\="{0}" and f2\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m10Q2/src/Tests.java:49
#, java-format
{0}\ \:\ le\ test\ avec\ une\ fraction\ avec\ 0\ au\ d\u00e9nominateur\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a fraction with 0 in the denominator does not work\: 

#: m10Q2/src/Tests.java:54
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ null\ ne\ fonctionne\ pas\ \:\ ={0}\: The test with a null string does not work\: 

#: m10Q2/src/Tests.java:59
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ non-conforme\ au\ format\ "a/b"\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a non-conforming string "a/b" does not work\: 

#: m10Q2/src/Tests.java:65
lancez-vous\ la\ bonne\ exception\ ?\ \n=do you throw the correct exception? \n

#: m10Q2/src/Tests.java:66
v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ ce\ cas.\ \n=make sure you manage this case. \n

#: m10Q2/src/Tests.java:86
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a valid string does not work\: 

#: m10Q2/src/Tests.java:92
respectez\ vous\ le\ format\ "a/b"\ ?\n=do you respect the "a/b" format?\n

#: m10Q2/src/Tests.java:93
modifiez-vous\ les\ variables\ d'instances\ de\ la\ classe\ Fraction\ ?\n=Do you modify the instance variables of the Fraction class?\n

#: m10Q3/src/Tests.java:85
#, java-format
{0}\ \:\ le\ test\ de\ parsing\ d'un\ string\ qui\ n'est\ pas\ un\ double\ ne\ passe\ pas\ \:\ ={0}\: the parsing test of a string that is not a double does not pass\: 

#: m10Q3/src/Tests.java:90
#, java-format
{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ sup\u00e9rieure\ \u00e0\ 20\ ne\ passe\ pas\ \:\ ={0}\: the test with a student with a score greater than 20 does not pass\: 

#: m10Q3/src/Tests.java:95
#, java-format
{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ n\u00e9gative\ ne\ passe\ pas\ \:\ ={0}\: the test with a student with a negative rating does not pass\: 

#: m10Q3/src/Tests.java:101
#, fuzzy
!vous\ ne\ lancez\ pas\ la\ bonne\ exception.\n=you do not throw the correct exception. \n

#: m10Q3/src/Tests.java:102
#, fuzzy
!vous\ ne\ lancez\ pas\ une\ exception\ dans\ les\ cas\ particuliers.\n=Do you throw an exception in particular cases? \n

#: m10Q3/src/Tests.java:122 m10Q3/src/Tests.java:127
#, java-format
!{0}\ \:\ les\ cotes\ sont\ comprises\ entre\ 0\ et\ 20\ \!\n=

#: m10Q3/src/Tests.java:132
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ passe\ pas\ \:\ ={0}\: the test with a valid string does not pass\: 

#: m10Q3/src/Tests.java:138
#, fuzzy
!vous\ ne\ respectez\ pas\ le\ format\ "nom;\ cote1,\ cote2,\ cote3"\ avec\ les\ cotes\ <\=20\ et\ >\=0.\n=do you respect the format "name, rating1, rating2, rating3"?\n

#: m10Q3/src/Tests.java:139
#, fuzzy
!vous\ n'initialisez\ pas\ correctement\ les\ variables\ d'instances\ de\ la\ classe\ Student.\n=do you correctly initialize Student class instance variables?\n

#: m10Q4/src/TestListAdd.java:83 m10Q4/src/TestListGet.java:71
#: m10Q4/src/TestListSet.java:75
#, fuzzy, java-format
!{0}\ \:\ rat\u00e9\ \:\ ={0}\: success

#: m10Q4/src/TestListAdd.java:84
#, fuzzy, java-format
!la\ fonction\ add\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListAdd.java:93 m10Q4/src/TestListContains.java:77
#: m10Q4/src/TestListGet.java:77 m10Q4/src/TestListSet.java:85
#, fuzzy, java-format
!{0}\ \:\ r\u00e9ussi\n={0}\: success

#: m10Q4/src/TestListAdd.java:95
!votre\ m\u00e9thode\ add()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\!\ G\u00e9rez\ le\ cas\ avec\ index\ >\ length()\ \!\n=

#: m10Q4/src/TestListAdd.java:98 m10Q4/src/TestListSet.java:90
!votre\ m\u00e9thode\ add()\ lance\ une\ exception\ \!\ V\u00e9rifiez\ que\ vous\ g\u00e9rez\ tous\ les\ cas\ possibles.\n=

#: m10Q4/src/TestListContains.java:72
#, fuzzy, java-format
!{0}\ \:\ rat\u00e9={0}\: success

#: m10Q4/src/TestListContains.java:73
#, fuzzy, java-format
!\ \:\n\ La\ fonction\ contains\ avec\ la\ liste\n{1}\net\ l''objet\ {2}\ doit\ renvoyer\ {3},\ pourtant,\ votre\ code\ renvoie\ {4}.\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListGet.java:72
#, fuzzy, java-format
!la\ fonction\ get\ avec\ la\ liste\n{1}\net\ l''index\ {2}\ doit\ renvoyer\ {3},\ pourtant,\ votre\ code\ renvoie\ {4}.\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListGet.java:79
!votre\ m\u00e9thode\ get()\ lance\ une\ exception\ \!\ V\u00e9rifiez\ que\ vous\ g\u00e9rez\ tous\ les\ cas\ possibles.\n=

#: m10Q4/src/TestListSet.java:76
#, fuzzy, java-format
!la\ fonction\ set\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListSet.java:87
!votre\ m\u00e9thode\ add()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ \!\n=

#: m10Q5/src/VectorTest.java:46
#, fuzzy
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTest.java:52
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ {2}=

#: m10Q5/src/VectorTestMock.java:32
!g\u00e9n\u00e8re\ une\ IOException=

#: m10Q5/src/VectorTestMock.java:33
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =

#: m10Q5/src/VectorTestMock.java:34
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ null=

#: m10Q5/src/VectorTestMock.java:65
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ une\ IOException\ lanc\u00e9e\ par\ le\ readLine()\ du\ BufferedReader,\ le\ fichier\ n'a\ pas\ \u00e9t\u00e9\ ferm\u00e9\ correctement.=

#: m10Q5/src/VectorTestMock.java:129
#, fuzzy
!n'existe\ pas=is not

#: m10dem1/src/Tests.java:42
v\u00e9rifiez\ l'output\ sur\ la\ sortie\ standard\ (stdOut).\n=check the output of the standard output (stdOut).\n

#: m10dem1/src/Tests.java:43
v\u00e9rifiez\ l'output\ sur\ la\ sortie\ d'erreur\ standard\ (stdErr).\n=check the output of the error output (stdErr).\n

#: m10dem1/src/Tests.java:44 m10dem1/src/TestOut.java:26
v\u00e9rifiez\ les\ valeurs\ de\ retour\ de\ votre\ programme.\n=check the output values of your program.\n

#: m10dem1/src/Tests.java:45 m10dem1/src/TestOut.java:27
v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ les\ exceptions.\n=make sure you manage the exceptions.\n

#: m10dem1/src/Tests.java:82
la\ division\ par\ 0\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=the division by 0 does not give the expected result\: \n

#: m10dem1/src/Tests.java:90
le\ parsing\ d''un\ String\ compos\u00e9\ de\ lettres\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=the parsing of a String composed of letters does not give the expected result\: \n

#: m10dem1/src/TestOut.java:49
!tous\ les\ arguments\ ne\ sont\ pas\ v\u00e9rifi\u00e9s\ \!\ Appelez\ divise\ avec\ tous\ les\ arguments\ \!\n=

#: m10dem2/src/TestContenuFichier.java:47
Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs\ ou\ vous\ ne\ fermez\ votre\ flux.\n=You do not write all the first n positive integers or you do not close your stream.\n

#: m10dem2/src/TestContenuFichier.java:48
Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs=You do not write all the first n positive integers

#: m10dem2/src/TestContenuFichier.java:49
Vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=You write more than one integer per line.\n

#: m10dem2/src/TestContenuFichier.java:50
vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=you write more than one integer per line.\n

#: m10dem2/src/TestContenuFichier.java:118
\ et\ =\ and 

#: m10dem2/src/TestValeurRetour.java:51
La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ il\ y\ a\ une\ IOException.=The return value of your program is not correct in case there is an IOException.

#: m10dem2/src/TestValeurRetour.java:72
La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ tout\ se\ d\u00e9roule\ bien.=The return value of your program is not correct in the event that everything runs smoothly.

#: m11Q1/Templates/PileInt.java:99 m11Q2/Templates/Pile.java:110
Pile\ vide\n=Empty stack\n

#: m11Q1/Templates/PileInt.java:107 m11Q2/Templates/Pile.java:118
Attention\ \:\ votre\ pile\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ pile\ provoque\ une\ boucle\ infinie\u2026=Be careful\: your stack is badly formed. Go through your stack causes an infinite loop \u2026

#: m11Q1/Templates/PileInt.java:109
#, java-format
Sommet\ \:\ Noeud[{0}]\nProfondeur\ \:\ {1}\n=Top\: Node[{0}]\nDepth\: {1}\n

#: m11Q1/Templates/PileInt.java:113 m11Q2/Templates/Pile.java:124
#: m11Q3/Templates/FIFOQueue.java:118 m11Q6/Templates/Liste.java:143
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ Noeud[{2}]\n=Node[{0}]\: content\: {1}, next node\: Node[{2}]\n

#: m11Q1/Templates/PileInt.java:116 m11Q2/Templates/Pile.java:127
#: m11Q3/Templates/FIFOQueue.java:121 m11Q6/Templates/Liste.java:146
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ null\n=Node[{0}]\: content\: {1}, next node\: null\n

#: m11Q1/Templates/PileInt.java:120
#, java-format
Attention\ \:\ la\ variable\ d''instance\ ''{0}''\ ({1})\ ne\ correspond\ pas\ au\ nombre\ d''entiers\ sur\ la\ pile.\n=Be careful\: the instance variable ''{0}'' ({1}) does not match the number of integers on the stack.\n

#: m11Q1/src/Tests.java:40 m11Q2/src/Tests.java:40
#, java-format
Vous\ ne\ retournez\ pas\ le\ bon\ sommet\ de\ la\ pile.\ Quand\ le\ sommet\ est\ {0},\ votre\ m\u00e9thode\ pop()\ retourne\ {1}=You do not return the correct top of the stack. When the top is {0}, your pop() method returns {1}

#: m11Q1/src/Tests.java:41 m11Q2/src/Tests.java:41
Voici\ l'\u00e9volution\ de\ votre\ pile\ durant\ les\ tests\ afin\ que\ vous\ puissiez\ corriger\ votre\ code\ \:\n\n=Here is the evolution of your stack during the tests so that you can correct your code\:\n\n

#: m11Q1/src/Tests.java:55
Lorsque\ l'on\ ex\u00e9cute\ votre\ m\u00e9thode\ pop()\ sur\ une\ pile\ vide,\ elle\ ne\ lance\ pas\ l'exception\ IllegalStateException.\n=When we run your pop() method on an empty stack, it does not throw the IllegalStateException exception.\n

#: m11Q1/src/Tests.java:79 m11Q1/src/Tests.java:85
Le\ sommet\ de\ votre\ pile\ vaut\ null\ apr\u00e8s\ un\ push().\n=The top of your stack is null after a push().\n

#: m11Q1/src/Tests.java:80
L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 4\ apr\u00e8s\ un\ push(4).\n=The element on the top of your stack is not 4 after a push(4).\n

#: m11Q1/src/Tests.java:81
La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 1\ apr\u00e8s\ un\ push().\n=The depth() method does not return 1 after a push().\n

#: m11Q1/src/Tests.java:86
L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 6\ apr\u00e8s\ un\ push(6).\n=The element on the top of your stack is not 6 after a push(6).\n

#: m11Q1/src/Tests.java:87
La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 2\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=The depth() method does not return 2 after calling twice the push() method.\n

#: m11Q1/src/Tests.java:88
Le\ noeud\ suivant\ du\ sommet\ vaut\ null\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=The next node of the top is null after calling twice the push() method.\n

#: m11Q1/src/Tests.java:89
L'\u00e9l\u00e9ment\ suivant\ du\ sommet\ (l'\u00e9l\u00e9ment\ tout\ en\ dessous\ de\ la\ pile)\ ne\ vaut\ pas\ 4\ apr\u00e8s\ avoir\ effectu\u00e9\ push(4)\ suivi\ d'un\ push(6).\n=The next element of the top (the element below the stack) is not worth 4 after a push(4) followed by a push(6).\n

#: m11Q1/src/Tests.java:142 m11Q2/src/Tests.java:134
Pile\ apr\u00e8s\ l'op\u00e9ration\ \:\ =Stack after the operation\: 

#: m11Q1/src/Tests.java:166 m11Q2/src/Tests.java:155
Cette\ erreur\ est\ survenue\ quand\ la\ pile\ est\ \:\n=This error occurred when the stack is\:\n

#: m11Q2/Templates/Pile.java:120
#, java-format
Sommet\ \:\ Noeud[{0}]\n=Top\: Node[{0}]\n

#: m11Q2/src/Tests.java:75
#, java-format
Votre\ m\u00e9thode\ depth()\ retourne\ {0}\ alors\ que\ la\ v\u00e9ritable\ profondeur\ est\ {1}.\ Voici\ la\ pile\ \:\n\n{2}=Your method depth() returns {0} while the true depth is {1}. Here is the stack\:\n\n{2}

#: m11Q2/src/Tests.java:79
Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ pile.\ C'est\ inacceptable.=Your method has changed the stack. This is unacceptable.

#: m11Q2/src/Tests.java:93
Votre\ m\u00e9thode\ pop()\ doit\ retourner\ null\ si\ la\ pile\ est\ vide.\n=Your pop() method should returns null when the stack is empty.\n

#: m11Q3/Templates/FIFOQueue.java:95 m11Q4/Templates/Queue.java:109
Queue\ vide\n=Empty queue\n

#: m11Q3/Templates/FIFOQueue.java:97 m11Q4/Templates/Queue.java:111
#: m11Q5/Templates/OrderedList.java:132 m11Q5/Templates/OrderedList.java:134
#, java-format
Attention\ ''{0}''\ pointe\ vers\ null\ mais\ pas\ ''{1}''\ \!\n=Warning ''{0}'' points to null but not ''{1}''\!\n

#: m11Q3/Templates/FIFOQueue.java:105 m11Q4/Templates/Queue.java:119
Attention\ \:\ votre\ queue\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ queue\ provoque\ une\ boucle\ infinie\u2026\n=Be careful\: your queue is badly formed. Go through your queue causes an infinite loop \u2026\n

#: m11Q3/Templates/FIFOQueue.java:107 m11Q4/Templates/Queue.java:121
#, java-format
Entr\u00e9e\ \:\ Noeud[{0}]\n=Entry\: Node[{0}]\n

#: m11Q3/Templates/FIFOQueue.java:110 m11Q4/Templates/Queue.java:124
#, java-format
Attention\ \:\ ''{0}''\ pointe\ vers\ un\ noeud\ non\ pr\u00e9sent\ dans\ la\ queue\ \!\n=Warning\: ''{0}'' points to a node not present in the queue\!\n

#: m11Q3/Templates/FIFOQueue.java:112 m11Q4/Templates/Queue.java:126
#, java-format
Sortie\ \:\ Noeud[{0}]\n=Exit\: Node[{0}]\n

#: m11Q3/Templates/FIFOQueue.java:114 m11Q4/Templates/Queue.java:128
#, java-format
Attention\ ''{0}''\ pointe\ vers\ null\ \!\n=Warning ''{0}'' points to null\!\n

#: m11Q3/src/Tests.java:40 m11Q4/src/Tests.java:96
Quand\ la\ queue\ est\ vide,\ vous\ devez\ retourner\ null.\n=When the queue is empty, you must return null.\n

#: m11Q3/src/Tests.java:56
Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ retournez\ null\ \!\n=When the queue contains only one element, you return null\!\n

#: m11Q3/src/Tests.java:57
Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ vous\ ne\ le\ retournez\ pas\ correctment.\n=When the queue contains only one element, you do not return it correctly.\n

#: m11Q3/src/Tests.java:58 m11Q3/src/Tests.java:59 m11Q4/src/Tests.java:115
#: m11Q4/src/Tests.java:116
#, java-format
Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ queue\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=You did not set the variable ''{0}'' to null when the queue contains a single element and is removed.\n

#: m11Q3/src/Tests.java:97 m11Q4/src/Tests.java:153
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=You have not properly updated the queue by removing a node from the structure. The queue before the operation removes() is\:\n{0}\nThe expected queue is\:\n{1}\nYour queue is\:\n{2}

#: m11Q3/src/Tests.java:98 m11Q4/src/Tests.java:154 m11Q5/src/Tests.java:158
#, java-format
Vous\ avez\ retourn\u00e9\ {0}\ alors\ que\ la\ r\u00e9ponse\ attendue\ est\ {1}.\ Le\ queue\ est\ \:\n{2}=You returned {0} while the expected answer is {1}. The queue is\:\n{2}

#: m11Q3/src/Tests.java:106 m11Q4/src/Tests.java:162
Cette\ erreur\ est\ survenue\ quand\ la\ queue\ est\ \:\n=This error occurred when the queue is\:\n

#: m11Q4/Templates/Queue.java:131 m11Q4/Templates/Queue.java:132
#: m11Q5/Templates/OrderedList.java:148 m11Q5/Templates/OrderedList.java:149
#, java-format
Noeud[{0}]=Node[{0}]

#: m11Q4/Templates/Queue.java:133 m11Q5/Templates/OrderedList.java:150
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ pr\u00e9c\u00e9rent\ \:\ {2},\ noeud\ suivant\ \:\ {3}\n=Node[{0}] \: content \: {1}, preceding node \: {2}, next node \: {3}\n

#: m11Q4/src/Tests.java:53 m11Q4/src/Tests.java:54
#, java-format
Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=When the queue is empty, and we add a node to your queue, ''{0}'' is null whereas it should refer a new node.\n

#: m11Q4/src/Tests.java:55
#, java-format
Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=When the queue is empty, and we add a node to your queue, ''{0}'' and ''{1}'' do not refer to the same node.\n

#: m11Q4/src/Tests.java:56
Quand\ la\ queue\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=When the queue is empty, and you add a node to your queue, this node does not contain the right element.\n

#: m11Q4/src/Tests.java:76
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=You have not properly updated the queue when adding a node in the structure. The queue before the operation ajoute() is\:\n{0}\nThe expected queue is\:\n{1}\nYour queue is\:\n{2}

#: m11Q5/Templates/OrderedList.java:130 m11Q6/Templates/Liste.java:129
Liste\ vide\n=Empty list\n

#: m11Q5/Templates/OrderedList.java:142 m11Q6/Templates/Liste.java:137
Attention\ \:\ votre\ liste\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ liste\ provoque\ une\ boucle\ infinie\u2026\n=Be careful\: your list is badly formed. Go through your list causes an infinite loop \u2026\n

#: m11Q5/Templates/OrderedList.java:144
#, java-format
Min\ \:\ Noeud[{0}]\n=Min \: Node[{0}]\n

#: m11Q5/Templates/OrderedList.java:145
#, java-format
Max\ \:\ Noeud[{0}]\n=Max \: Node[{0}]\n

#: m11Q5/src/Tests.java:53 m11Q5/src/Tests.java:54
#, java-format
Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=When the list is empty, and we add a node to your list, ''{0}'' is null whereas it should refer to a new node.\n

#: m11Q5/src/Tests.java:55
#, java-format
Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=When the list is empty, and we add a node to your list, ''{0}'' and ''{1}'' do not refer to the same node.\n

#: m11Q5/src/Tests.java:56
Quand\ la\ liste\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=When the list is empty, and we add a node to your list, that node does not contain the correct item.\n

#: m11Q5/src/Tests.java:76
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=You have not properly updated the list when adding a node in the structure. The list before the add() is\:\n{0}\nThe expected list is\:\n{1}\nYour list is\:\n{2}

#: m11Q5/src/Tests.java:102
Vous\ ne\ lancez\ pas\ une\ IllegalStateException\ quand\ on\ essaye\ de\ retirer\ un\ \u00e9l\u00e9ment\ alors\ que\ la\ liste\ est\ vide.\n=You do not throw an IllegalStateException when trying to remove an item while the list is empty.\n

#: m11Q5/src/Tests.java:119 m11Q5/src/Tests.java:120
#, java-format
Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ liste\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=You did not set the variable ''{0}'' to null when the list contains a single item and is removed.\n

#: m11Q5/src/Tests.java:157
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=You have not properly updated the list by removing a node from the structure. The list before the operation retire() is\:\n{0}\nThe expected list is\:\n{1}\nYour list is\:\n{2}

#: m11Q5/src/Tests.java:166 m11Q6/src/Tests.java:134
Cette\ erreur\ est\ survenue\ quand\ la\ liste\ est\ \:\n=This error occurred when your list is\:\n

#: m11Q6/Templates/Liste.java:139
#, java-format
T\u00eate\ \:\ Noeud[{0}]\n=Head\: Node[{0}]\n

#: m11Q6/src/Tests.java:81
Vous\ devez\ retourner\ 0\ quand\ la\ liste\ est\ vide.\n=You have to return 0 when the list is empty.\n

#: m11Q6/src/Tests.java:116
Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ liste.\ C'est\ inacceptable.\n=Your method has changed the list. This is unacceptable.\n

#: m11Q6/src/Tests.java:117
#, java-format
{0}("{1}")\ a\ retourn\u00e9\ {2}\ avec\ la\ liste\ \:\n{3}={0}("{1}") returns {2} with the list\:\n{3}

#: m11Q6/src/Tests.java:126
#, java-format
Vous\ retournez\ {0}\ alors\ qu''il\ faut\ retourner\ {1}\ lors\ de\ l''appel\ de\ {2}("{3}")\ sur\ la\ liste\ \:\n{4}=You returned {0} while you have to return {1} when calling {2}("{3}") on the list\:\n{4}

#: m11Q6/src/Tests.java:129
#, java-format
Votre\ m\u00e9thode\ {0}("{1}")\ ne\ retire\ pas\ correctement\ les\ \u00e9l\u00e9ments.\nLa\ liste\ est\ \:\n{2}\nVotre\ liste\ modifi\u00e9e\ est\ \:\n{3}\nLa\ liste\ attendue\ est\ \:\n{4}=Your method {0}("{1}") does not remove the elements correctly.\nThe list is\:\n{2}\nYour modified list is\:\n{3}\nThe expected list is\:\n{4}

#: mX1Q19/src/Tests.java:33
#, java-format
{1}\ en\ valeur\ absolue\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} in absolute value gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:34
#, java-format
{1}\ arrondi\ au\ dessus\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded above gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:35
#, java-format
{1}\ arrondi\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:36
#, java-format
{1}\ arrondi\ en\ dessous\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded below gives {2}. However, your code computes {3}.\n

#: m01Q12/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.max,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m01Q13/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.min,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m01Q5/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ l'op\u00e9rateur\ xor\ (^)\ de\ java,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m02Q1/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ le\ modulo\ de\ java,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m02dem3/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.pow,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m04Q10/custom_translatable.py:29 m04Q9/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ une\ m\u00e9thode\ de\ parsing\ d\u00e9j\u00e0\ impl\u00e9ment\u00e9e,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04Q6/custom_translatable.py:29 m04Q8/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ contains()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04Q8/custom_translatable.py:33
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ indexOf()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04dem3/custom_translatable.py:29
!Vous\ n'avez\ pas\ besoin\ de\ l'instruction\ return\ dans\ cet\ exercice\ \!\ Observez\ la\ signature\ de\ votre\ m\u00e9thode.=

#: m04dem4/custom_translatable.py:29
!Vous\ n'utilisez\ pas\ la\ m\u00e9thode\ Character.toUpperCase().=

#: m04dem4/custom_translatable.py:36
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ autre\ chose\ que\ Character.toUpperCase(),\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: utilities/exmaples/custom_translatable.py:31
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ ?????,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments
