accessible: true
author: Ludovic TAFFIN
categories: []
contact_url: ''
context: |-
    On vous donne la classe De dont voici le corps :

    .. code-block:: java

      import java.util.Random;

      public class De{
        private String nom; // le nom de ce dé (par exemple sa couleur)
        protected Random r ; // nombre aléatoire

        /*
         * @pre nom != null
         * @post a créé l'instance de la classe De ayant comme nom la chaine n, a initilisé
         *       le générateur de nombres aléatoires
         */
        public De(String n){
            nom = n;
            r = new Random();
        }

        /*
         * @pre -
         * @post a lance le dé et retourne la valeur du dé
         */
        public int lance(){
            return r.nextInt(6)+1;
        }

        /*
         * @pre -
         * @post retourne le générateur de nombres aléatoires utilisé par le dé
         */
        public Random getRandom(){
            return r;
        }

        /*
         * @pre -
         * @post retourne le nom du dé
         */
        public String getNom(){
            return nom;
        }

        /*
         * @pre n!=null
         * @post a modifié le nom du dé qui est maintenant n
         */
        public void setNom(String n){
            this.nom = n;
        }

        /*
         * @pre r!=null
         * @post a modifié le générateur de nombres aléatoires du dé qui est maintenant r
         */
        public void setRandom(Random r){
            this.r = r;
        }

        /*
         * @pre -
         * @post retourne une chaîne de caractères représentant le dé
         */
        public String toString(){
            return this.nom;
        }


        /*
         * @pre -
         * @post retourne true ssi other est un dé identique à celui-ci (même nom et même générateur aléatoire)
         */
        public boolean equals(Object other) {
            // A compléter
        }
      }
environment_id: java8
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '200'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: 'Mission 7 : Q* Dé - Méthode equals'
network_grading: false
order: 129
problems:
    q1:
        type: code
        name: Méthode equals
        header: Ecrivez le *contenu* de la méthode ``equals``.
        language: Java
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
