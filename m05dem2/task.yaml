accessible: true
author: 'Clémentine Munyabarenzi (ressource : Syllabus d''exercices  LSINF1101), Olivier
    Martin'
categories: []
contact_url: ''
context: |-
    Un étudiant utilise des tableaux de réels pour représenter des vecteurs mathématiques. Ces tableaux sont définis comme suit :

    .. code-block :: java

        double[] t1 = {1.0, 2.0, -3.0};
        double[] t2 = {1.0, 3.0, 9.0};

    L'étudiant propose la méthode suivante pour tester que deux vecteurs sont
    identiques :

    .. code-block :: java

        /**
         * @pre t1 != null, t2 != null
         * @post retourne true si t1 et t2 sont les mêmes vecteurs, false sinon
         */
        public static boolean egal(double[] t1, double[] t2) {
            return t1 == t2;
        }

    Il teste sa méthode sur les deux tableaux ci-dessus et conclut que sa
    méthode est correcte. Qu'en pensez-vous ?
environment_id: java8judge
environment_parameters:
    limits:
        time: '20'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: 'Mission 5 : Question de démarrage 2 : Compararer des tableaux'
network_grading: false
order: 87
problems:
    q1:
        type: code
        name: ''
        header: |-
            Les tableaux ``t1`` et ``t2`` étants définis comme plus haut, pouvez-vous faire en sorte que l'expression ``t1 == t2`` renvoie à coup sûr ``true``? Ecrivez du code permettant d'obtenir ce résultat.

            Considérez que vous écrivez une méthode sans signature et que *t1* et *t2* sont déjà initialisés comme ci-dessus (Par contre toutes les autres ressources dont vous estimerez avoir besoin devront être déclarées par vous).
        language: java
        default: ''
    q2:
        type: code
        name: ''
        header: Proposez une implémentation correcte du *corps* de la méthode ``egal``
            ci-dessus (Vous ne devez pas écrire la signature de la méthode).
        language: java
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
