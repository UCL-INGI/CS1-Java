# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
!=Project-Id-Version\: \nReport-Msgid-Bugs-To\: \nPOT-Creation-Date\: 2017-10-04 12\:00+0200\nPO-Revision-Date\: 2017-09-30 09\:16+0000\nLast-Translator\: Olivier MARTIN <olivier.martin@student.uclouvain.be>\nLanguage-Team\: English <http\://weblate.info.ucl.ac.be/projects/inginious/lfsab1401/en/>\nLanguage\: en\nMIME-Version\: 1.0\nContent-Type\: text/plain; charset\=UTF-8\nContent-Transfer-Encoding\: 8bit\nPlural-Forms\: nplurals\=2; plural\=n \!\= 1;\nX-Generator\: Weblate 2.16\n

#: utilities/run.py:165
La\ limite\ de\ m\u00e9moire\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=The memory limit of your program is exceeded

#: utilities/run.py:168
La\ limite\ de\ temps\ d'ex\u00e9cution\ de\ votre\ programme\ est\ d\u00e9pass\u00e9e=The time limit for your program is exceeded

#: utilities/run.py:173 utilities/run.py:191
Il\ semble\ que\ vous\ ayiez\ fait\ des\ erreurs\ dans\ votre\ code\u2026\n\n=It seems that you made mistakes in your code \u2026\n\n

#: utilities/run.py:187
Vous\ avez\ bien\ r\u00e9pondu\ \u00e0\ cette\ question=You answered this question well

#: utilities/run.py:196
Le\ programme\ ne\ compile\ pas\ \:\ \n=The program does not compile \: \n

#: utilities/run.py:204
Impossible\ de\ d\u00e9coder\ le\ config.json=Unable to decode config.json

#: m01Q10/src/Tests.java:33
#, java-format
{0}\ <\ {1}\ <\ {2}\ est\ {3}\ mais\ votre\ code\ indique\ {4}.\n={0} < {1} < {2} is {3} but your code indicates {4}.\n

#: m01Q10/src/Tests.java:54 m01Q11/src/Tests.java:52 m01Q12/src/Tests.java:55
#: m01Q13/src/Tests.java:54 m01Q14/src/Tests.java:52 m01Q15/src/Tests.java:63
#: m01Q16/src/Tests.java:50 m01Q17/src/Tests.java:67 m01Q18/src/Tests.java:56
#: m01Q2/src/Tests.java:86 m01Q20/src/Tests.java:70 m01Q3/src/Tests.java:59
#: m01Q4/src/Tests.java:54 m01Q5/src/Tests.java:50 m01Q6/src/Tests.java:49
#: m01Q7/src/Tests.java:49 m01Q8/src/Tests.java:54 m01Q9/src/Tests.java:77
#: m01_bf/src/Tests.java:49 m02Q1/src/Tests.java:46 m02Q10/src/Tests.java:52
#: m02Q3/src/Tests.java:68 m02Q4/src/Tests.java:50 m02Q5/src/Tests.java:49
#: m02Q6/src/Tests.java:47 m02Q7/src/Tests.java:50 m02Q8/src/Tests.java:74
#: m02Q9/src/Tests.java:46 m02_bf/src/Tests.java:49 m02dem2/src/Tests.java:57
#: m02dem3/src/Tests.java:62 m02dem4/src/Tests.java:49
#: m02dem5/src/Tests.java:88 m03Q1/src/Tests.java:81 m03Q2/src/Tests.java:55
#: m03Q3/src/Tests.java:57 m03Q4/src/Tests.java:61 m03Q5/src/Tests.java:55
#: m03Q6/src/Tests.java:54 m03Q7/src/Tests.java:54 m03_bf/src/Tests.java:56
#: m03dem2/src/Tests.java:63 m03dem3/src/Tests.java:51
#: m03dem4/src/Tests.java:78 m03dem5/src/Tests.java:49 m04Q1/src/Tests.java:57
#: m04Q10/src/Tests.java:52 m04Q11/src/Tests.java:51 m04Q2/src/Tests.java:52
#: m04Q3/src/Tests.java:58 m04Q4/src/Tests.java:145 m04Q5/src/Tests.java:60
#: m04Q6/src/Tests.java:64 m04Q7/src/Tests.java:61 m04Q8/src/Tests.java:59
#: m04Q9/src/Tests.java:52 m04_bf/src/Tests.java:70 m04dem1/src/Tests.java:74
#: m04dem2/src/Tests.java:73 m04dem3/src/Tests.java:67
#: m04dem4/src/Tests.java:61 m04dem5/src/Tests.java:89 m05Q1/src/Tests.java:64
#: m05Q10/src/Tests.java:66 m05Q11/src/Tests.java:70 m05Q12/src/TestsQ1.java:62
#: m05Q12/src/TestsQ2.java:58 m05Q2/src/Tests.java:65 m05Q3/src/Tests.java:64
#: m05Q4/src/Tests.java:63 m05Q5/src/Tests.java:54 m05Q6/src/Tests.java:59
#: m05Q7/src/Tests.java:71 m05Q8/src/Tests.java:79 m05Q9/src/Tests.java:65
#: m05_bf/src/Tests.java:92 m05dem1/src/Tests.java:95 m05dem2/src/Tests.java:71
#: m05dem3/src/Tests.java:56 m05dem4/src/Tests.java:175
#: m05dem5/src/Tests.java:101 m06Q1/src/TestCode.java:61
#: m06Q10/src/TestCode.java:110 m06Q11/src/TestParam.java:67
#: m06Q2/src/TestCode.java:102 m06Q3/src/TestCode.java:71
#: m06Q3/src/TestParam.java:66 m06Q4/src/TestCode.java:84
#: m06Q4/src/TestParam.java:64 m06Q5/src/TestCode.java:86
#: m06Q6/src/TestCode.java:77 m06Q6/src/TestParam.java:66
#: m06Q7/src/TestCode.java:87 m06Q8/src/TestCode.java:89
#: m06Q8/src/TestParam.java:74 m06Q9/src/TestCode.java:107
#: m06_bf/src/TestInspect.java:57 m06_bf/src/TestCode.java:58
#: m06dem1/src/TestCode.java:136 m06dem2/src/TestCode.java:268
#: m06dem3/src/TestCode.java:105 m06dem4/src/TestCode.java:116
#: m07Q1/src/TestParam.java:66 m07Q10/src/TestCode.java:49
#: m07Q11/src/TestParam.java:75 m07Q2/src/TestCode.java:101
#: m07Q3/src/TestParam.java:76 m07Q4/src/TestCode.java:48
#: m07Q5/src/TestCode.java:49 m07Q6/src/TestParam.java:69
#: m07Q7/src/TestCode.java:49 m07Q8/src/TestCode.java:50
#: m07Q9/src/TestCode.java:48 m07_bf/src/TestItem.java:62
#: m07_bf/src/TestCD.java:119 m07_bf/src/TestInspectCD.java:57
#: m07dem1/src/TestCode.java:172 m07dem2/src/TestCode.java:86
#: m08Q1/src/TestCode.java:50 m08Q2/src/TestCode.java:51
#: m08Q3/src/TestParam.java:67 m08Q4/src/TestAnd.java:75
#: m08Q4/src/TestGet.java:79 m08Q4/src/TestReset.java:78
#: m08Q4/src/TestRotate.java:74 m08Q4/src/TestSet.java:85
#: m08Q4/src/TestShift.java:74 m08Q4/src/TestConstruct.java:49
#: m08Q5/src/TestGet.java:74 m08Q5/src/TestReset.java:77
#: m08Q5/src/TestRotate.java:79 m08Q5/src/TestSet.java:77
#: m08Q5/src/TestShift.java:79 m08Q6/src/TestMax.java:65
#: m08Q6/src/TestMin.java:65 m08Q6/src/TestMoyenne.java:63
#: m08Q7/src/TestMax.java:64 m08Q7/src/TestMin.java:64
#: m08Q7/src/TestMoyenne.java:64 m08dem1/src/TestParam1.java:65
#: m08dem1/src/TestParam2.java:76 m08dem2/src/TestCode.java:61
#: m09Q1/src/TestParam.java:82 m09Q2/src/TestParam.java:80
#: m09Q3/src/TestCode.java:65 m09Q4/src/TestParam.java:67
#: m09Q4/src/TestCode.java:65 m09Q5/src/TestCode.java:56
#: m09Q6/src/TestCode.java:59 m09Q7/src/TestCode.java:61
#: m09_bf/src/TestErr.java:90 m09_bf/src/Tests.java:78
#: m09_bf/src/TestsException.java:88 m09dem1/src/TestParam.java:80
#: m09dem2/src/TestCode.java:62 m09dem2/src/TestRes.java:62
#: m10Q1/src/Tests.java:78 m10Q2/src/Tests.java:118 m10Q3/src/Tests.java:163
#: m10Q4/src/TestListAdd.java:107 m10Q4/src/TestListContains.java:106
#: m10Q4/src/TestListGet.java:106 m10Q4/src/TestListSet.java:94
#: m10dem1/src/Tests.java:162 m10dem1/src/TestOut.java:85
#: m10dem2/src/TestContenuFichier.java:135
#: m10dem2/src/TestValeurRetour.java:108 m11Q1/src/Tests.java:170
#: m11Q2/src/Tests.java:159 m11Q3/src/Tests.java:110 m11Q4/src/Tests.java:166
#: m11Q5/src/Tests.java:170 m11Q6/src/Tests.java:138 mX1Q19/src/Tests.java:110
Attention,\ il\ est\ interdit\ de\ diviser\ par\ z\u00e9ro.=Be careful, it is forbidden to divide by zero.

#: m01Q10/src/Tests.java:56 m01Q11/src/Tests.java:54 m01Q12/src/Tests.java:57
#: m01Q13/src/Tests.java:56 m01Q14/src/Tests.java:54 m01Q15/src/Tests.java:65
#: m01Q16/src/Tests.java:52 m01Q17/src/Tests.java:69 m01Q18/src/Tests.java:58
#: m01Q2/src/Tests.java:88 m01Q20/src/Tests.java:72 m01Q3/src/Tests.java:61
#: m01Q4/src/Tests.java:56 m01Q5/src/Tests.java:52 m01Q6/src/Tests.java:51
#: m01Q7/src/Tests.java:51 m01Q8/src/Tests.java:56 m01Q9/src/Tests.java:79
#: m01_bf/src/Tests.java:51 m02Q1/src/Tests.java:48 m02Q10/src/Tests.java:54
#: m02Q3/src/Tests.java:70 m02Q4/src/Tests.java:52 m02Q5/src/Tests.java:51
#: m02Q6/src/Tests.java:49 m02Q7/src/Tests.java:52 m02Q8/src/Tests.java:76
#: m02Q9/src/Tests.java:48 m02_bf/src/Tests.java:51 m02dem2/src/Tests.java:59
#: m02dem3/src/Tests.java:64 m02dem4/src/Tests.java:51
#: m02dem5/src/Tests.java:90 m03Q1/src/Tests.java:83 m03Q2/src/Tests.java:57
#: m03Q3/src/Tests.java:59 m03Q4/src/Tests.java:63 m03Q5/src/Tests.java:57
#: m03Q6/src/Tests.java:56 m03Q7/src/Tests.java:56 m03_bf/src/Tests.java:58
#: m03dem2/src/Tests.java:65 m03dem3/src/Tests.java:53
#: m03dem4/src/Tests.java:80 m03dem5/src/Tests.java:51 m04Q1/src/Tests.java:59
#: m04Q10/src/Tests.java:54 m04Q11/src/Tests.java:53 m04Q2/src/Tests.java:54
#: m04Q3/src/Tests.java:60 m04Q4/src/Tests.java:147 m04Q5/src/Tests.java:62
#: m04Q6/src/Tests.java:66 m04Q7/src/Tests.java:63 m04Q8/src/Tests.java:61
#: m04Q9/src/Tests.java:54 m04_bf/src/Tests.java:72 m04dem1/src/Tests.java:76
#: m04dem2/src/Tests.java:75 m04dem3/src/Tests.java:69
#: m04dem4/src/Tests.java:63 m04dem5/src/Tests.java:91 m05Q1/src/Tests.java:66
#: m05Q10/src/Tests.java:68 m05Q11/src/Tests.java:72 m05Q12/src/TestsQ1.java:64
#: m05Q12/src/TestsQ2.java:60 m05Q2/src/Tests.java:67 m05Q3/src/Tests.java:66
#: m05Q4/src/Tests.java:65 m05Q5/src/Tests.java:56 m05Q6/src/Tests.java:61
#: m05Q7/src/Tests.java:73 m05Q8/src/Tests.java:81 m05Q9/src/Tests.java:67
#: m05_bf/src/Tests.java:94 m05dem1/src/Tests.java:97 m05dem2/src/Tests.java:73
#: m05dem3/src/Tests.java:58 m05dem4/src/Tests.java:177
#: m05dem5/src/Tests.java:103 m06Q1/src/TestCode.java:63
#: m06Q10/src/TestCode.java:112 m06Q11/src/TestParam.java:69
#: m06Q2/src/TestCode.java:104 m06Q3/src/TestCode.java:73
#: m06Q3/src/TestParam.java:68 m06Q4/src/TestCode.java:86
#: m06Q4/src/TestParam.java:66 m06Q5/src/TestCode.java:88
#: m06Q6/src/TestCode.java:79 m06Q6/src/TestParam.java:68
#: m06Q7/src/TestCode.java:89 m06Q8/src/TestCode.java:91
#: m06Q8/src/TestParam.java:76 m06Q9/src/TestCode.java:109
#: m06_bf/src/TestInspect.java:59 m06_bf/src/TestCode.java:60
#: m06dem1/src/TestCode.java:138 m06dem2/src/TestCode.java:270
#: m06dem3/src/TestCode.java:107 m06dem4/src/TestCode.java:118
#: m07Q1/src/TestParam.java:68 m07Q10/src/TestCode.java:51
#: m07Q11/src/TestParam.java:77 m07Q2/src/TestCode.java:103
#: m07Q3/src/TestParam.java:78 m07Q4/src/TestCode.java:50
#: m07Q5/src/TestCode.java:51 m07Q6/src/TestParam.java:71
#: m07Q7/src/TestCode.java:51 m07Q8/src/TestCode.java:52
#: m07Q9/src/TestCode.java:50 m07_bf/src/TestItem.java:64
#: m07_bf/src/TestCD.java:121 m07_bf/src/TestInspectCD.java:59
#: m07dem1/src/TestCode.java:174 m07dem2/src/TestCode.java:88
#: m08Q1/src/TestCode.java:52 m08Q2/src/TestCode.java:53
#: m08Q3/src/TestParam.java:69 m08Q4/src/TestAnd.java:77
#: m08Q4/src/TestGet.java:81 m08Q4/src/TestReset.java:80
#: m08Q4/src/TestRotate.java:76 m08Q4/src/TestSet.java:87
#: m08Q4/src/TestShift.java:76 m08Q4/src/TestConstruct.java:51
#: m08Q5/src/TestGet.java:76 m08Q5/src/TestReset.java:79
#: m08Q5/src/TestRotate.java:81 m08Q5/src/TestSet.java:79
#: m08Q5/src/TestShift.java:81 m08Q6/src/TestMax.java:67
#: m08Q6/src/TestMin.java:67 m08Q6/src/TestMoyenne.java:65
#: m08Q7/src/TestMax.java:66 m08Q7/src/TestMin.java:66
#: m08Q7/src/TestMoyenne.java:66 m08dem1/src/TestParam1.java:67
#: m08dem1/src/TestParam2.java:78 m08dem2/src/TestCode.java:64
#: m09Q1/src/TestParam.java:84 m09Q2/src/TestParam.java:82
#: m09Q3/src/TestCode.java:67 m09Q4/src/TestParam.java:69
#: m09Q4/src/TestCode.java:67 m09Q5/src/TestCode.java:58
#: m09Q6/src/TestCode.java:61 m09Q7/src/TestCode.java:63
#: m09_bf/src/TestErr.java:92 m09_bf/src/Tests.java:80
#: m09_bf/src/TestsException.java:90 m09dem1/src/TestParam.java:82
#: m09dem2/src/TestCode.java:65 m09dem2/src/TestRes.java:65
#: m10Q1/src/Tests.java:80 m10Q2/src/Tests.java:120 m10Q3/src/Tests.java:165
#: m10Q4/src/TestListAdd.java:109 m10Q4/src/TestListContains.java:108
#: m10Q4/src/TestListGet.java:108 m10Q4/src/TestListSet.java:96
#: m10dem1/src/Tests.java:164 m10dem1/src/TestOut.java:87
#: m10dem2/src/TestContenuFichier.java:137
#: m10dem2/src/TestValeurRetour.java:110 m11Q1/src/Tests.java:172
#: m11Q2/src/Tests.java:161 m11Q3/src/Tests.java:112 m11Q4/src/Tests.java:168
#: m11Q5/src/Tests.java:172 m11Q6/src/Tests.java:140 mX1Q19/src/Tests.java:112
Attention,\ certaines\ variables\ ont\ \u00e9t\u00e9\ mal\ cast\u00e9es\ \!=Be careful, some variables have been wrongly casted\!

#: m01Q10/src/Tests.java:58 m01Q11/src/Tests.java:56 m01Q12/src/Tests.java:59
#: m01Q13/src/Tests.java:58 m01Q14/src/Tests.java:56 m01Q15/src/Tests.java:67
#: m01Q16/src/Tests.java:54 m01Q17/src/Tests.java:71 m01Q18/src/Tests.java:60
#: m01Q2/src/Tests.java:90 m01Q20/src/Tests.java:74 m01Q3/src/Tests.java:63
#: m01Q4/src/Tests.java:58 m01Q5/src/Tests.java:54 m01Q6/src/Tests.java:53
#: m01Q7/src/Tests.java:53 m01Q8/src/Tests.java:58 m01Q9/src/Tests.java:81
#: m01_bf/src/Tests.java:53 m02Q1/src/Tests.java:50 m02Q10/src/Tests.java:56
#: m02Q3/src/Tests.java:72 m02Q4/src/Tests.java:54 m02Q5/src/Tests.java:53
#: m02Q6/src/Tests.java:51 m02Q7/src/Tests.java:54 m02Q8/src/Tests.java:78
#: m02Q9/src/Tests.java:50 m02_bf/src/Tests.java:53 m02dem2/src/Tests.java:61
#: m02dem3/src/Tests.java:66 m02dem4/src/Tests.java:53
#: m02dem5/src/Tests.java:92 m03Q1/src/Tests.java:85 m03Q2/src/Tests.java:59
#: m03Q3/src/Tests.java:61 m03Q4/src/Tests.java:65 m03Q5/src/Tests.java:59
#: m03Q6/src/Tests.java:58 m03Q7/src/Tests.java:58 m03_bf/src/Tests.java:60
#: m03dem2/src/Tests.java:67 m03dem3/src/Tests.java:55
#: m03dem4/src/Tests.java:82 m03dem5/src/Tests.java:53 m04Q1/src/Tests.java:61
#: m04Q10/src/Tests.java:56 m04Q11/src/Tests.java:55 m04Q2/src/Tests.java:56
#: m04Q3/src/Tests.java:62 m04Q4/src/Tests.java:149 m04Q5/src/Tests.java:64
#: m04Q6/src/Tests.java:68 m04Q7/src/Tests.java:65 m04Q8/src/Tests.java:63
#: m04Q9/src/Tests.java:56 m04_bf/src/Tests.java:74 m04dem1/src/Tests.java:78
#: m04dem2/src/Tests.java:77 m04dem3/src/Tests.java:71
#: m04dem4/src/Tests.java:65 m04dem5/src/Tests.java:93 m05Q1/src/Tests.java:68
#: m05Q10/src/Tests.java:70 m05Q11/src/Tests.java:74 m05Q12/src/TestsQ1.java:66
#: m05Q12/src/TestsQ2.java:62 m05Q2/src/Tests.java:69 m05Q3/src/Tests.java:68
#: m05Q4/src/Tests.java:67 m05Q5/src/Tests.java:58 m05Q6/src/Tests.java:63
#: m05Q7/src/Tests.java:75 m05Q8/src/Tests.java:83 m05Q9/src/Tests.java:69
#: m05_bf/src/Tests.java:96 m05dem1/src/Tests.java:99 m05dem2/src/Tests.java:75
#: m05dem3/src/Tests.java:60 m05dem4/src/Tests.java:179
#: m05dem5/src/Tests.java:105 m06Q1/src/TestCode.java:65
#: m06Q10/src/TestCode.java:114 m06Q11/src/TestParam.java:71
#: m06Q2/src/TestCode.java:106 m06Q3/src/TestCode.java:75
#: m06Q3/src/TestParam.java:70 m06Q4/src/TestCode.java:88
#: m06Q4/src/TestParam.java:68 m06Q5/src/TestCode.java:90
#: m06Q6/src/TestCode.java:81 m06Q6/src/TestParam.java:70
#: m06Q7/src/TestCode.java:91 m06Q8/src/TestCode.java:93
#: m06Q8/src/TestParam.java:78 m06Q9/src/TestCode.java:111
#: m06_bf/src/TestInspect.java:61 m06_bf/src/TestCode.java:62
#: m06dem1/src/TestCode.java:140 m06dem2/src/TestCode.java:272
#: m06dem3/src/TestCode.java:109 m06dem4/src/TestCode.java:120
#: m07Q1/src/TestParam.java:70 m07Q10/src/TestCode.java:53
#: m07Q11/src/TestParam.java:79 m07Q2/src/TestCode.java:105
#: m07Q3/src/TestParam.java:80 m07Q4/src/TestCode.java:52
#: m07Q5/src/TestCode.java:53 m07Q6/src/TestParam.java:73
#: m07Q7/src/TestCode.java:53 m07Q8/src/TestCode.java:54
#: m07Q9/src/TestCode.java:52 m07_bf/src/TestItem.java:66
#: m07_bf/src/TestCD.java:123 m07_bf/src/TestInspectCD.java:61
#: m07dem1/src/TestCode.java:176 m07dem2/src/TestCode.java:90
#: m08Q1/src/TestCode.java:54 m08Q2/src/TestCode.java:55
#: m08Q3/src/TestParam.java:71 m08Q4/src/TestAnd.java:79
#: m08Q4/src/TestGet.java:83 m08Q4/src/TestReset.java:82
#: m08Q4/src/TestRotate.java:78 m08Q4/src/TestSet.java:89
#: m08Q4/src/TestShift.java:78 m08Q4/src/TestConstruct.java:53
#: m08Q5/src/TestGet.java:78 m08Q5/src/TestReset.java:81
#: m08Q5/src/TestRotate.java:83 m08Q5/src/TestSet.java:81
#: m08Q5/src/TestShift.java:83 m08Q6/src/TestMax.java:69
#: m08Q6/src/TestMin.java:69 m08Q6/src/TestMoyenne.java:67
#: m08Q7/src/TestMax.java:68 m08Q7/src/TestMin.java:68
#: m08Q7/src/TestMoyenne.java:68 m08dem1/src/TestParam1.java:69
#: m08dem1/src/TestParam2.java:80 m08dem2/src/TestCode.java:68
#: m09Q1/src/TestParam.java:86 m09Q2/src/TestParam.java:84
#: m09Q3/src/TestCode.java:69 m09Q4/src/TestParam.java:71
#: m09Q4/src/TestCode.java:69 m09Q5/src/TestCode.java:60
#: m09Q6/src/TestCode.java:63 m09Q7/src/TestCode.java:65
#: m09_bf/src/TestErr.java:94 m09_bf/src/Tests.java:82
#: m09_bf/src/TestsException.java:92 m09dem1/src/TestParam.java:84
#: m09dem2/src/TestCode.java:68 m09dem2/src/TestRes.java:68
#: m10Q1/src/Tests.java:82 m10Q2/src/Tests.java:122 m10Q3/src/Tests.java:167
#: m10Q4/src/TestListAdd.java:111 m10Q4/src/TestListContains.java:110
#: m10Q4/src/TestListGet.java:110 m10Q4/src/TestListSet.java:98
#: m10dem1/src/Tests.java:166 m10dem1/src/TestOut.java:89
#: m10dem2/src/TestContenuFichier.java:139
#: m10dem2/src/TestValeurRetour.java:112 m11Q1/src/Tests.java:174
#: m11Q2/src/Tests.java:163 m11Q3/src/Tests.java:114 m11Q4/src/Tests.java:170
#: m11Q5/src/Tests.java:174 m11Q6/src/Tests.java:142 mX1Q19/src/Tests.java:114
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ String\ \!\ (StringIndexOutOfBoundsException)=Be careful, you try to read outside the boundaries of a String\! (StringIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:60 m01Q11/src/Tests.java:58 m01Q12/src/Tests.java:61
#: m01Q13/src/Tests.java:60 m01Q14/src/Tests.java:58 m01Q15/src/Tests.java:69
#: m01Q16/src/Tests.java:56 m01Q17/src/Tests.java:73 m01Q18/src/Tests.java:62
#: m01Q2/src/Tests.java:92 m01Q20/src/Tests.java:76 m01Q3/src/Tests.java:65
#: m01Q4/src/Tests.java:60 m01Q5/src/Tests.java:56 m01Q6/src/Tests.java:55
#: m01Q7/src/Tests.java:55 m01Q8/src/Tests.java:60 m01Q9/src/Tests.java:83
#: m01_bf/src/Tests.java:55 m02Q1/src/Tests.java:52 m02Q10/src/Tests.java:58
#: m02Q3/src/Tests.java:74 m02Q4/src/Tests.java:56 m02Q5/src/Tests.java:55
#: m02Q6/src/Tests.java:53 m02Q7/src/Tests.java:56 m02Q8/src/Tests.java:80
#: m02Q9/src/Tests.java:52 m02_bf/src/Tests.java:55 m02dem2/src/Tests.java:63
#: m02dem3/src/Tests.java:68 m02dem4/src/Tests.java:55
#: m02dem5/src/Tests.java:94 m03Q1/src/Tests.java:87 m03Q2/src/Tests.java:61
#: m03Q3/src/Tests.java:63 m03Q4/src/Tests.java:67 m03Q5/src/Tests.java:61
#: m03Q6/src/Tests.java:60 m03Q7/src/Tests.java:60 m03_bf/src/Tests.java:62
#: m03dem2/src/Tests.java:69 m03dem3/src/Tests.java:57
#: m03dem4/src/Tests.java:84 m03dem5/src/Tests.java:55 m04Q1/src/Tests.java:63
#: m04Q10/src/Tests.java:58 m04Q11/src/Tests.java:57 m04Q2/src/Tests.java:58
#: m04Q3/src/Tests.java:64 m04Q4/src/Tests.java:151 m04Q5/src/Tests.java:66
#: m04Q6/src/Tests.java:70 m04Q7/src/Tests.java:67 m04Q8/src/Tests.java:65
#: m04Q9/src/Tests.java:58 m04_bf/src/Tests.java:76 m04dem1/src/Tests.java:80
#: m04dem2/src/Tests.java:79 m04dem3/src/Tests.java:73
#: m04dem4/src/Tests.java:67 m04dem5/src/Tests.java:95 m05Q1/src/Tests.java:70
#: m05Q10/src/Tests.java:72 m05Q11/src/Tests.java:76 m05Q12/src/TestsQ1.java:68
#: m05Q12/src/TestsQ2.java:64 m05Q2/src/Tests.java:71 m05Q3/src/Tests.java:70
#: m05Q4/src/Tests.java:69 m05Q5/src/Tests.java:60 m05Q6/src/Tests.java:65
#: m05Q7/src/Tests.java:79 m05Q8/src/Tests.java:87 m05Q9/src/Tests.java:71
#: m05_bf/src/Tests.java:98 m05dem1/src/Tests.java:101
#: m05dem2/src/Tests.java:77 m05dem3/src/Tests.java:62
#: m05dem4/src/Tests.java:181 m05dem5/src/Tests.java:107
#: m06Q1/src/TestCode.java:67 m06Q10/src/TestCode.java:116
#: m06Q11/src/TestParam.java:73 m06Q2/src/TestCode.java:108
#: m06Q3/src/TestCode.java:77 m06Q3/src/TestParam.java:72
#: m06Q4/src/TestCode.java:90 m06Q4/src/TestParam.java:70
#: m06Q5/src/TestCode.java:92 m06Q6/src/TestCode.java:83
#: m06Q6/src/TestParam.java:72 m06Q7/src/TestCode.java:93
#: m06Q8/src/TestCode.java:95 m06Q8/src/TestParam.java:80
#: m06Q9/src/TestCode.java:113 m06_bf/src/TestInspect.java:63
#: m06_bf/src/TestCode.java:64 m06dem1/src/TestCode.java:142
#: m06dem2/src/TestCode.java:274 m06dem3/src/TestCode.java:111
#: m06dem4/src/TestCode.java:122 m07Q1/src/TestParam.java:72
#: m07Q10/src/TestCode.java:55 m07Q11/src/TestParam.java:81
#: m07Q2/src/TestCode.java:107 m07Q3/src/TestParam.java:82
#: m07Q4/src/TestCode.java:54 m07Q5/src/TestCode.java:55
#: m07Q6/src/TestParam.java:75 m07Q7/src/TestCode.java:55
#: m07Q8/src/TestCode.java:56 m07Q9/src/TestCode.java:54
#: m07_bf/src/TestItem.java:68 m07_bf/src/TestCD.java:125
#: m07_bf/src/TestInspectCD.java:63 m07dem1/src/TestCode.java:178
#: m07dem2/src/TestCode.java:92 m08Q1/src/TestCode.java:56
#: m08Q2/src/TestCode.java:57 m08Q3/src/TestParam.java:73
#: m08Q4/src/TestAnd.java:81 m08Q4/src/TestGet.java:85
#: m08Q4/src/TestReset.java:84 m08Q4/src/TestRotate.java:80
#: m08Q4/src/TestSet.java:91 m08Q4/src/TestShift.java:80
#: m08Q4/src/TestConstruct.java:55 m08Q5/src/TestGet.java:80
#: m08Q5/src/TestReset.java:83 m08Q5/src/TestRotate.java:85
#: m08Q5/src/TestSet.java:83 m08Q5/src/TestShift.java:85
#: m08Q6/src/TestMax.java:71 m08Q6/src/TestMin.java:71
#: m08Q6/src/TestMoyenne.java:69 m08Q7/src/TestMax.java:70
#: m08Q7/src/TestMin.java:70 m08Q7/src/TestMoyenne.java:70
#: m08dem1/src/TestParam1.java:71 m08dem1/src/TestParam2.java:82
#: m08dem2/src/TestCode.java:72 m09Q1/src/TestParam.java:88
#: m09Q2/src/TestParam.java:86 m09Q3/src/TestCode.java:71
#: m09Q4/src/TestParam.java:73 m09Q4/src/TestCode.java:71
#: m09Q5/src/TestCode.java:62 m09Q6/src/TestCode.java:65
#: m09Q7/src/TestCode.java:67 m09_bf/src/TestErr.java:96
#: m09_bf/src/Tests.java:84 m09_bf/src/TestsException.java:94
#: m09dem1/src/TestParam.java:86 m09dem2/src/TestCode.java:71
#: m09dem2/src/TestRes.java:71 m10Q1/src/Tests.java:84 m10Q2/src/Tests.java:124
#: m10Q3/src/Tests.java:169 m10Q4/src/TestListAdd.java:113
#: m10Q4/src/TestListContains.java:112 m10Q4/src/TestListGet.java:112
#: m10Q4/src/TestListSet.java:100 m10dem1/src/Tests.java:168
#: m10dem1/src/TestOut.java:91 m10dem2/src/TestContenuFichier.java:141
#: m10dem2/src/TestValeurRetour.java:114 m11Q1/src/Tests.java:176
#: m11Q2/src/Tests.java:165 m11Q3/src/Tests.java:116 m11Q4/src/Tests.java:172
#: m11Q5/src/Tests.java:176 m11Q6/src/Tests.java:144 mX1Q19/src/Tests.java:116
Attention,\ vous\ tentez\ de\ lire\ en\ dehors\ des\ limites\ d'un\ tableau\ \!\ (ArrayIndexOutOfBoundsException)=Be careful, you try to read outside of the limits of an array\! (ArrayIndexOutOfBoundsException)

#: m01Q10/src/Tests.java:62 m01Q11/src/Tests.java:60 m01Q12/src/Tests.java:63
#: m01Q13/src/Tests.java:62 m01Q14/src/Tests.java:60 m01Q15/src/Tests.java:71
#: m01Q16/src/Tests.java:58 m01Q17/src/Tests.java:75 m01Q18/src/Tests.java:64
#: m01Q2/src/Tests.java:94 m01Q20/src/Tests.java:78 m01Q3/src/Tests.java:67
#: m01Q4/src/Tests.java:62 m01Q5/src/Tests.java:58 m01Q6/src/Tests.java:57
#: m01Q7/src/Tests.java:57 m01Q8/src/Tests.java:62 m01Q9/src/Tests.java:85
#: m01_bf/src/Tests.java:57 m02Q1/src/Tests.java:54 m02Q10/src/Tests.java:60
#: m02Q3/src/Tests.java:76 m02Q4/src/Tests.java:58 m02Q5/src/Tests.java:57
#: m02Q6/src/Tests.java:55 m02Q7/src/Tests.java:58 m02Q8/src/Tests.java:82
#: m02Q9/src/Tests.java:54 m02_bf/src/Tests.java:57 m02dem2/src/Tests.java:65
#: m02dem3/src/Tests.java:70 m02dem4/src/Tests.java:57
#: m02dem5/src/Tests.java:96 m03Q1/src/Tests.java:89 m03Q2/src/Tests.java:63
#: m03Q3/src/Tests.java:65 m03Q4/src/Tests.java:69 m03Q5/src/Tests.java:63
#: m03Q6/src/Tests.java:62 m03Q7/src/Tests.java:62 m03_bf/src/Tests.java:64
#: m03dem2/src/Tests.java:71 m03dem3/src/Tests.java:59
#: m03dem4/src/Tests.java:86 m03dem5/src/Tests.java:57 m04Q1/src/Tests.java:65
#: m04Q10/src/Tests.java:60 m04Q11/src/Tests.java:59 m04Q2/src/Tests.java:60
#: m04Q3/src/Tests.java:66 m04Q4/src/Tests.java:153 m04Q5/src/Tests.java:68
#: m04Q6/src/Tests.java:72 m04Q7/src/Tests.java:69 m04Q8/src/Tests.java:67
#: m04Q9/src/Tests.java:60 m04_bf/src/Tests.java:78 m04dem1/src/Tests.java:82
#: m04dem2/src/Tests.java:81 m04dem3/src/Tests.java:75
#: m04dem4/src/Tests.java:69 m04dem5/src/Tests.java:97 m05Q1/src/Tests.java:72
#: m05Q10/src/Tests.java:74 m05Q11/src/Tests.java:78 m05Q12/src/TestsQ1.java:70
#: m05Q12/src/TestsQ2.java:66 m05Q2/src/Tests.java:73 m05Q3/src/Tests.java:72
#: m05Q4/src/Tests.java:71 m05Q5/src/Tests.java:62 m05Q6/src/Tests.java:67
#: m05Q7/src/Tests.java:81 m05Q8/src/Tests.java:89 m05Q9/src/Tests.java:73
#: m05_bf/src/Tests.java:100 m05dem1/src/Tests.java:103
#: m05dem2/src/Tests.java:79 m05dem3/src/Tests.java:64
#: m05dem4/src/Tests.java:183 m05dem5/src/Tests.java:109
#: m06Q1/src/TestCode.java:69 m06Q10/src/TestCode.java:118
#: m06Q11/src/TestParam.java:75 m06Q2/src/TestCode.java:110
#: m06Q3/src/TestCode.java:79 m06Q3/src/TestParam.java:74
#: m06Q4/src/TestCode.java:92 m06Q4/src/TestParam.java:72
#: m06Q5/src/TestCode.java:94 m06Q6/src/TestCode.java:85
#: m06Q6/src/TestParam.java:74 m06Q7/src/TestCode.java:95
#: m06Q8/src/TestCode.java:97 m06Q8/src/TestParam.java:82
#: m06Q9/src/TestCode.java:115 m06_bf/src/TestInspect.java:66
#: m06_bf/src/TestCode.java:67 m06dem1/src/TestCode.java:144
#: m06dem2/src/TestCode.java:276 m06dem3/src/TestCode.java:113
#: m06dem4/src/TestCode.java:124 m07Q1/src/TestParam.java:74
#: m07Q10/src/TestCode.java:57 m07Q11/src/TestParam.java:83
#: m07Q2/src/TestCode.java:109 m07Q3/src/TestParam.java:84
#: m07Q4/src/TestCode.java:56 m07Q5/src/TestCode.java:57
#: m07Q6/src/TestParam.java:77 m07Q7/src/TestCode.java:57
#: m07Q8/src/TestCode.java:58 m07Q9/src/TestCode.java:56
#: m07_bf/src/TestItem.java:70 m07_bf/src/TestCD.java:127
#: m07_bf/src/TestInspectCD.java:66 m07dem1/src/TestCode.java:180
#: m07dem2/src/TestCode.java:94 m08Q1/src/TestCode.java:58
#: m08Q2/src/TestCode.java:59 m08Q3/src/TestParam.java:75
#: m08Q4/src/TestAnd.java:83 m08Q4/src/TestGet.java:87
#: m08Q4/src/TestReset.java:86 m08Q4/src/TestRotate.java:82
#: m08Q4/src/TestSet.java:93 m08Q4/src/TestShift.java:82
#: m08Q4/src/TestConstruct.java:57 m08Q5/src/TestGet.java:82
#: m08Q5/src/TestReset.java:85 m08Q5/src/TestRotate.java:87
#: m08Q5/src/TestSet.java:85 m08Q5/src/TestShift.java:87
#: m08Q6/src/TestMax.java:73 m08Q6/src/TestMin.java:73
#: m08Q6/src/TestMoyenne.java:71 m08Q7/src/TestMax.java:72
#: m08Q7/src/TestMin.java:72 m08Q7/src/TestMoyenne.java:72
#: m08dem1/src/TestParam1.java:73 m08dem1/src/TestParam2.java:84
#: m08dem2/src/TestCode.java:75 m09Q1/src/TestParam.java:90
#: m09Q2/src/TestParam.java:88 m09Q3/src/TestCode.java:74
#: m09Q4/src/TestParam.java:75 m09Q4/src/TestCode.java:73
#: m09Q5/src/TestCode.java:65 m09Q6/src/TestCode.java:68
#: m09Q7/src/TestCode.java:69 m09_bf/src/TestErr.java:98
#: m09_bf/src/Tests.java:86 m09_bf/src/TestsException.java:96
#: m09dem1/src/TestParam.java:88 m09dem2/src/TestCode.java:74
#: m09dem2/src/TestRes.java:74 m10Q1/src/Tests.java:86 m10Q2/src/Tests.java:126
#: m10Q3/src/Tests.java:171 m10Q4/src/TestListAdd.java:115
#: m10Q4/src/TestListContains.java:114 m10Q4/src/TestListGet.java:114
#: m10Q4/src/TestListSet.java:102 m10dem1/src/Tests.java:170
#: m10dem1/src/TestOut.java:93 m10dem2/src/TestContenuFichier.java:143
#: m10dem2/src/TestValeurRetour.java:116 m11Q1/src/Tests.java:178
#: m11Q2/src/Tests.java:167 m11Q3/src/Tests.java:118 m11Q4/src/Tests.java:174
#: m11Q5/src/Tests.java:178 m11Q6/src/Tests.java:146 mX1Q19/src/Tests.java:118
Attention,\ vous\ faites\ une\ op\u00e9ration\ sur\ un\ objet\ qui\ vaut\ null\ \!\ Veillez\ \u00e0\ bien\ g\u00e9rer\ ce\ cas.=Be careful, you are doing an operation on a null object\! Be sure to handle this case.

#: m01Q10/src/Tests.java:64 m01Q11/src/Tests.java:62 m01Q12/src/Tests.java:65
#: m01Q13/src/Tests.java:64 m01Q14/src/Tests.java:62 m01Q15/src/Tests.java:73
#: m01Q16/src/Tests.java:60 m01Q17/src/Tests.java:77 m01Q18/src/Tests.java:66
#: m01Q2/src/Tests.java:96 m01Q20/src/Tests.java:80 m01Q3/src/Tests.java:69
#: m01Q4/src/Tests.java:64 m01Q5/src/Tests.java:60 m01Q6/src/Tests.java:59
#: m01Q7/src/Tests.java:59 m01Q8/src/Tests.java:64 m01Q9/src/Tests.java:87
#: m01_bf/src/Tests.java:63 m02Q1/src/Tests.java:56 m02Q10/src/Tests.java:62
#: m02Q3/src/Tests.java:78 m02Q4/src/Tests.java:60 m02Q5/src/Tests.java:59
#: m02Q6/src/Tests.java:57 m02Q7/src/Tests.java:60 m02Q8/src/Tests.java:84
#: m02Q9/src/Tests.java:56 m02_bf/src/Tests.java:63 m02dem2/src/Tests.java:67
#: m02dem3/src/Tests.java:72 m02dem4/src/Tests.java:59
#: m02dem5/src/Tests.java:98 m03Q1/src/Tests.java:93 m03Q1/src/Tests.java:96
#: m03Q2/src/Tests.java:67 m03Q2/src/Tests.java:70 m03Q3/src/Tests.java:69
#: m03Q3/src/Tests.java:72 m03Q4/src/Tests.java:73 m03Q4/src/Tests.java:76
#: m03Q5/src/Tests.java:67 m03Q5/src/Tests.java:70 m03Q6/src/Tests.java:66
#: m03Q6/src/Tests.java:69 m03Q7/src/Tests.java:66 m03Q7/src/Tests.java:69
#: m03_bf/src/Tests.java:70 m03dem2/src/Tests.java:75 m03dem2/src/Tests.java:78
#: m03dem3/src/Tests.java:63 m03dem3/src/Tests.java:66
#: m03dem4/src/Tests.java:90 m03dem4/src/Tests.java:93
#: m03dem5/src/Tests.java:61 m04Q1/src/Tests.java:71 m04Q1/src/Tests.java:74
#: m04Q10/src/Tests.java:66 m04Q10/src/Tests.java:69 m04Q11/src/Tests.java:65
#: m04Q11/src/Tests.java:68 m04Q2/src/Tests.java:66 m04Q2/src/Tests.java:69
#: m04Q3/src/Tests.java:72 m04Q3/src/Tests.java:75 m04Q4/src/Tests.java:159
#: m04Q4/src/Tests.java:162 m04Q5/src/Tests.java:74 m04Q5/src/Tests.java:77
#: m04Q6/src/Tests.java:78 m04Q6/src/Tests.java:81 m04Q7/src/Tests.java:75
#: m04Q7/src/Tests.java:78 m04Q8/src/Tests.java:73 m04Q8/src/Tests.java:76
#: m04Q9/src/Tests.java:66 m04Q9/src/Tests.java:69 m04_bf/src/Tests.java:84
#: m04dem1/src/Tests.java:84 m04dem2/src/Tests.java:85
#: m04dem3/src/Tests.java:77 m04dem4/src/Tests.java:75
#: m04dem5/src/Tests.java:103 m05Q1/src/Tests.java:78 m05Q1/src/Tests.java:81
#: m05Q10/src/Tests.java:80 m05Q10/src/Tests.java:83 m05Q11/src/Tests.java:84
#: m05Q11/src/Tests.java:87 m05Q12/src/TestsQ1.java:76
#: m05Q12/src/TestsQ1.java:79 m05Q12/src/TestsQ2.java:72
#: m05Q12/src/TestsQ2.java:75 m05Q2/src/Tests.java:79 m05Q2/src/Tests.java:82
#: m05Q3/src/Tests.java:78 m05Q3/src/Tests.java:81 m05Q4/src/Tests.java:77
#: m05Q4/src/Tests.java:80 m05Q5/src/Tests.java:68 m05Q5/src/Tests.java:71
#: m05Q6/src/Tests.java:73 m05Q6/src/Tests.java:76 m05Q7/src/Tests.java:87
#: m05Q7/src/Tests.java:90 m05Q8/src/Tests.java:95 m05Q8/src/Tests.java:98
#: m05Q9/src/Tests.java:79 m05Q9/src/Tests.java:82 m05_bf/src/Tests.java:106
#: m05dem1/src/Tests.java:109 m05dem2/src/Tests.java:85
#: m05dem3/src/Tests.java:70 m05dem4/src/Tests.java:189
#: m05dem5/src/Tests.java:115 m06Q1/src/TestCode.java:75
#: m06Q10/src/TestCode.java:124 m06Q11/src/TestParam.java:81
#: m06Q2/src/TestCode.java:116 m06Q3/src/TestCode.java:85
#: m06Q3/src/TestParam.java:80 m06Q4/src/TestCode.java:98
#: m06Q4/src/TestParam.java:78 m06Q5/src/TestCode.java:100
#: m06Q6/src/TestCode.java:91 m06Q6/src/TestParam.java:80
#: m06Q7/src/TestCode.java:101 m06Q8/src/TestCode.java:103
#: m06Q8/src/TestParam.java:88 m06Q9/src/TestCode.java:121
#: m06_bf/src/TestInspect.java:72 m06_bf/src/TestCode.java:73
#: m06dem1/src/TestCode.java:150 m06dem2/src/TestCode.java:282
#: m06dem3/src/TestCode.java:119 m06dem4/src/TestCode.java:130
#: m07Q1/src/TestParam.java:80 m07Q10/src/TestCode.java:63
#: m07Q11/src/TestParam.java:89 m07Q2/src/TestCode.java:115
#: m07Q3/src/TestParam.java:90 m07Q4/src/TestCode.java:62
#: m07Q5/src/TestCode.java:63 m07Q6/src/TestParam.java:83
#: m07Q7/src/TestCode.java:63 m07Q8/src/TestCode.java:64
#: m07Q9/src/TestCode.java:62 m07_bf/src/TestItem.java:76
#: m07_bf/src/TestCD.java:133 m07_bf/src/TestInspectCD.java:72
#: m07dem1/src/TestCode.java:182 m07dem1/src/TestCode.java:185
#: m07dem2/src/TestCode.java:100 m08Q1/src/TestCode.java:64
#: m08Q2/src/TestCode.java:65 m08Q3/src/TestParam.java:81
#: m08Q4/src/TestAnd.java:89 m08Q4/src/TestGet.java:93
#: m08Q4/src/TestReset.java:92 m08Q4/src/TestRotate.java:88
#: m08Q4/src/TestSet.java:99 m08Q4/src/TestShift.java:88
#: m08Q4/src/TestConstruct.java:63 m08Q5/src/TestGet.java:88
#: m08Q5/src/TestReset.java:91 m08Q5/src/TestRotate.java:93
#: m08Q5/src/TestSet.java:91 m08Q5/src/TestShift.java:93
#: m08Q6/src/TestMax.java:79 m08Q6/src/TestMin.java:79
#: m08Q6/src/TestMoyenne.java:77 m08Q7/src/TestMax.java:78
#: m08Q7/src/TestMin.java:78 m08Q7/src/TestMoyenne.java:78
#: m08dem1/src/TestParam1.java:79 m08dem1/src/TestParam2.java:90
#: m09Q1/src/TestParam.java:96 m09Q2/src/TestParam.java:94
#: m09Q3/src/TestCode.java:80 m09Q4/src/TestParam.java:81
#: m09Q4/src/TestCode.java:79 m09Q5/src/TestCode.java:71
#: m09Q6/src/TestCode.java:74 m09Q6/src/TestCode.java:115
#: m09Q6/src/TestCode.java:132 m09Q6/src/TestCode.java:146
#: m09Q6/src/TestCode.java:148 m09Q6/src/TestCode.java:165
#: m09Q6/src/TestCode.java:173 m09Q6/src/TestCode.java:200
#: m09Q7/src/TestCode.java:75 m09Q7/src/TestCode.java:140
#: m09Q7/src/TestCode.java:153 m09Q7/src/TestCode.java:155
#: m09Q7/src/TestCode.java:174 m09Q7/src/TestCode.java:182
#: m09Q7/src/TestCode.java:200 m09Q7/src/TestCode.java:202
#: m09Q7/src/TestCode.java:229 m09Q7/src/TestCode.java:235
#: m09Q7/src/TestCode.java:237 m09Q7/src/TestCode.java:245
#: m09_bf/src/TestErr.java:104 m09_bf/src/Tests.java:92
#: m09_bf/src/TestsException.java:102 m09dem1/src/TestParam.java:94
#: m09dem2/src/TestCode.java:83 m09dem2/src/TestRes.java:83
#: m10Q1/src/Tests.java:92 m10Q1/src/Tests.java:95 m10Q3/src/Tests.java:177
#: m10Q4/src/TestListAdd.java:122 m10Q4/src/TestListContains.java:121
#: m10Q4/src/TestListGet.java:121 m10Q4/src/TestListSet.java:109
#: m10dem1/src/Tests.java:176 m10dem1/src/Tests.java:179
#: m10dem1/src/TestOut.java:99 m10dem1/src/TestOut.java:102
#: m10dem2/src/TestContenuFichier.java:149
#: m10dem2/src/TestValeurRetour.java:122 m11Q1/src/Tests.java:184
#: m11Q2/src/Tests.java:173 m11Q3/src/Tests.java:124 m11Q4/src/Tests.java:180
#: m11Q5/src/Tests.java:184 m11Q6/src/Tests.java:152 mX1Q19/src/Tests.java:120
Une\ erreur\ inattendue\ est\ survenue\ dans\ votre\ t\u00e2che\ \:\ =An unexpected error occurred in your task\: 

#: m01Q11/src/Tests.java:38
#, java-format
La\ moyenne\ entre\ {0,number,\#},\ {1,number,\#}\ et\ {2,number,\#}\ vaut\ {3,number,\#},\ or\ votre\ programme\ calcule\ {4,number,\#}.\n=The mean between {0,number,\#}, {1,number,\#} and {2,number,\#} is {3,number,\#}, but your program computes {4,number,\#}.\n

#: m01Q12/src/Tests.java:34 m01Q13/src/Tests.java:33 m01Q3/src/Tests.java:33
Veuillez\ placer\ le\ r\u00e9sultat\ dans\ la\ variable=Please put the result in the variable

#: m01Q12/src/Tests.java:38 m03Q3/src/Tests.java:36
#, java-format
Le\ maximum\ entre\ les\ variables\ a\={0},\ b\={1}\ et\ c\={2}\ est\ {3}\ or\ votre\ programme\ calcule\ {4}.\n=The maximum between variables a\={0}, b\={1} and c\={2} is {3} but your program computes {4}.\n

#: m01Q13/src/Tests.java:37
#, java-format
Le\ minimum\ entre\ les\ variables\ a\={0},\ b\={1},\ c\={2}\ et\ d\={3}\ est\ {4}\ or\ votre\ programme\ calcule\ {5}.\n=The minimum between variables a\={0}, b\={1} and c\={2} is {3} but your program computes {4}.\n

#: m01Q14/src/Tests.java:33
#, java-format
Il\ y\ a\ {0}\ valeurs\ diff\u00e9rentes\ parmi\ {1},\ {2},\ {3}.\nCependant,\ votre\ code\ indique\ qu''il\ y\ en\ a\ {4}.\n=There are {0} different values among {1}, {2}, {3}.\nHowever, your code indicates that there are {4}.\n

#: m01Q15/src/Tests.java:34
#, java-format
Pour\ le\ {0}/{1}/2016\ la\ saison\ est\ ''{2}''\ alors\ que\ votre\ code\ indique\ ''{3}''.\n=For the {0}/{1}/2016 the season is ''{2}'' while your code says ''{3}''.\n

#: m01Q16/src/Tests.java:33
#, java-format
Pour\ {0}h{1}m{2}s,\ le\ total\ attendu\ est\ {3,number,\#}s\ or\ votre\ code\ indique\ {4,number,\#}s.\n=For {0}h{1}m{2}s, the expected time is {3,number,\#}s but your code computes {4,number,\#}s.\n

#: m01Q17/src/Tests.java:32 m01Q9/src/Tests.java:31 m03Q1/src/Tests.java:32
est=is

#: m01Q17/src/Tests.java:33 m01Q9/src/Tests.java:32 m03Q1/src/Tests.java:33
n'est\ pas=is not

#: m01Q17/src/Tests.java:34
#, java-format
L''ann\u00e9e\ {0,number,\#}\ {1}\ une\ ann\u00e9e\ bissextile.\nCependant,\ votre\ code\ indique\ que\ {0,number,\#}\ {2}\ une\ ann\u00e9e\ bissextile\n=The year {0,number,\#} {1} a leap year.\nHowever, your code indicates {0,number,\#} {2} a leap year\n

#: m01Q18/src/Tests.java:31
#, java-format
L''ann\u00e9e\ {0,number,\#}\ est\ au\ si\u00e8cle\ {1,number,\#}\ or\ votre\ code\ indique\ si\u00e8cle\ {2,number,\#}.\n=The year {0,number,\#} belongs to the {1,number,\#}th century but your code indicates the {2,number,\#}th century.\n

#: m01Q2/src/Tests.java:33
#, java-format
{0}\ \:\ Un\ v\u00e9hicule\ roulant\ \u00e0\ {1}km/h\ dans\ une\ zone\ limit\u00e9e\ \u00e0\ {2}km/h\ doit\ recevoir\ une\ amende\ de\ {3}\u20ac.\ Cependant,\ votre\ code\ calcule\ {4}\u20ac.\n={0}\: A vehicle driving at {1}km/h in an area limited to {2}km/h must get a fine of {3}\u20ac. However, your code computes {4}\u20ac.\n

#: m01Q2/src/Tests.java:52 m02Q8/src/Tests.java:65 m04Q4/src/Tests.java:134
#: m05dem4/src/Tests.java:83 m05dem4/src/Tests.java:103
#: m05dem4/src/Tests.java:135 m05dem4/src/Tests.java:161
#: m06Q10/src/TestCode.java:50 m06Q2/src/TestCode.java:41
#: m06Q4/src/TestCode.java:46 m06Q5/src/TestCode.java:40
#: m06Q6/src/TestCode.java:45 m06Q7/src/TestCode.java:45
#: m06Q8/src/TestCode.java:50 m06Q9/src/TestCode.java:50
#: m06_bf/src/TestInspect.java:44 m06_bf/src/TestCode.java:45
#: m06dem1/src/TestCode.java:37 m06dem2/src/TestCode.java:38
#: m06dem3/src/TestCode.java:36 m06dem4/src/TestCode.java:42
#: m07Q10/src/TestCode.java:36 m07Q2/src/TestCode.java:37
#: m07Q4/src/TestCode.java:35 m07Q5/src/TestCode.java:36
#: m07Q7/src/TestCode.java:36 m07Q8/src/TestCode.java:37
#: m07Q9/src/TestCode.java:35 m07_bf/src/TestInspectCD.java:44
#: m07dem1/src/TestCode.java:53 m07dem2/src/TestCode.java:49
#: m08Q1/src/TestCode.java:37 m08Q2/src/TestCode.java:38
#: m08Q4/src/TestConstruct.java:36 m08dem2/src/TestCode.java:48
#: m09Q3/src/TestCode.java:52 m09Q4/src/TestCode.java:52
#: m09Q5/src/TestCode.java:43 m09Q6/src/TestCode.java:46
#: m09Q7/src/TestCode.java:48 m09dem2/src/TestCode.java:48
#: m09dem2/src/TestRes.java:48 m10Q2/src/Tests.java:77 m10Q2/src/Tests.java:105
#: m10Q3/src/Tests.java:113 m10Q3/src/Tests.java:151 m10dem1/src/Tests.java:151
#: m10dem1/src/TestOut.java:74 m10dem2/src/TestContenuFichier.java:105
#: m10dem2/src/TestValeurRetour.java:99
#, java-format
{0}\ \:\ r\u00e9ussi={0}\: success

#: m01Q2/src/Tests.java:64
Lorsque\ l'exc\u00e8s\ de\ vitesse\ d\u00e9passe\ 10km/h,\ l'amende\ est\ doubl\u00e9e.\n=When excessive speed exceeds 10km/h, the fine is doubled.\n

#: m01Q2/src/Tests.java:69 m01Q2/src/Tests.java:74
Lorsque\ les\ vitesses\ sont\ \u00e9gales,\ l'amende\ doit\ \u00eatre\ de\ z\u00e9ro.\n=When speeds are equal, the fine must be zero.\n

#: m01Q2/src/Tests.java:79
Pas\ d'amende\ requise\ car\ la\ vitesse\ du\ v\u00e9hicule\ est\ inf\u00e9rieure\ \u00e0\ la\ vitesse\ maximale.\n=No fines required as vehicle speed is below maximum speed.\n

#: m01Q20/src/Tests.java:30
une\ consonne=a consonant

#: m01Q20/src/Tests.java:31
une\ voyelle=a vowel

#: m01Q20/src/Tests.java:32
un\ chiffre=a number

#: m01Q20/src/Tests.java:38
#, java-format
''{0}''\ est\ {1}.\ Cependant,\ votre\ code\ indique\ que\ c''est\ {2}.\n=''{0}'' is {1}. However, your code indicates that it is {2}.\n

#: m01Q3/src/Tests.java:36
#, java-format
Pour\ une\ personne\ de\ {0}m\ et\ {1}kg,\ votre\ r\u00e9ponse\ {2}\ ne\ correspond\ pas\ \u00e0\ la\ valeur\ attendue\ {3}.\n=For a person of {0}m and {1}kg, your answer {2} does not match the expected value {3}.\n

#: m01Q4/src/Tests.java:31
#, java-format
Lorsque\ la\ voiture\ entre\ en\ section\ {0}\ et\ sort\ en\ section\ {1},\ la\ voiture\ a\ pacouru\ {2}\ section(s)\ et\ le\ prix\ attendu\ est\ {3}\u20ac\ alors\ que\ votre\ code\ calcule\ {4}\u20ac.\n=When the car enters section {0} and exits in section {1}, the car has covered {2} section(s) and the expected price is {3}\u20ac while your code calculates {4}\u20ac.\n

#: m01Q5/src/Tests.java:30
#, java-format
{0}\ XOR\ {1}\ ne\ retourne\ pas\ le\ bon\ r\u00e9sultat.\n={0} XOR {1} does not return the correct result.\n

#: m01Q6/src/Tests.java:30
#, java-format
Pour\ i\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=For i\={0}, you answered ''{1}'' but the expected answer is ''{2}''.\n

#: m01Q7/src/Tests.java:30
#, java-format
Pour\ n\={0},\ vous\ avez\ r\u00e9pondu\ ''{1}''\ alors\ qu''il\ faut\ r\u00e9pondre\ ''{2}''.\n=For n\={0}, you answered ''{1}'' but the expected answer is ''{2}''.\n

#: m01Q8/src/Tests.java:34 m03Q4/src/Tests.java:37
#, java-format
La\ mediane\ entre\ {0},\ {1}\ et\ {2}\ vaut\ {3},\ or\ votre\ programme\ calcule\ {4}.\n=The median between {0}, {1} and {2} is {3} but your program computes {4}.\n

#: m01Q9/src/Tests.java:34 m03Q1/src/Tests.java:34
#, java-format
Le\ nombre\ {0}\ {1}\ dans\ l''intervalle\ [{2},\ {3}].\nCependant,\ votre\ code\ indique\ le\ contraire.\n=The number {0} {1} in the interval [{2}, {3}].\nHowever, your code indicates otherwise.\n

#: m01_bf/src/Tests.java:32
#, java-format
Vous\ affichez\ mal\ la\ suite\ de\ Syracuse\ sur\ la\ sortie\ standard\ quand\ s0\ \=\ {0}.\nLa\ vraie\ suite\ est\ \:\ {1}\nVotre\ suite\ est\ \:\ {2}=You do not display the Syracuse sequence correctly on the standard output when s0 \= {0}.\nThe real sequence is\: {1}\nYour sequence is\: {2}

#: m01_bf/src/Tests.java:59 m02_bf/src/Tests.java:59 m03_bf/src/Tests.java:66
#: m04Q1/src/Tests.java:67 m04Q10/src/Tests.java:62 m04Q11/src/Tests.java:61
#: m04Q2/src/Tests.java:62 m04Q3/src/Tests.java:68 m04Q4/src/Tests.java:155
#: m04Q5/src/Tests.java:70 m04Q6/src/Tests.java:74 m04Q7/src/Tests.java:71
#: m04Q8/src/Tests.java:69 m04Q9/src/Tests.java:62 m04_bf/src/Tests.java:80
#: m04dem4/src/Tests.java:71 m04dem5/src/Tests.java:99 m05Q1/src/Tests.java:74
#: m05Q10/src/Tests.java:76 m05Q11/src/Tests.java:80 m05Q12/src/TestsQ1.java:72
#: m05Q12/src/TestsQ2.java:68 m05Q2/src/Tests.java:75 m05Q3/src/Tests.java:74
#: m05Q4/src/Tests.java:73 m05Q5/src/Tests.java:64 m05Q6/src/Tests.java:69
#: m05Q7/src/Tests.java:83 m05Q8/src/Tests.java:91 m05Q9/src/Tests.java:75
#: m05_bf/src/Tests.java:102 m05dem1/src/Tests.java:105
#: m05dem2/src/Tests.java:81 m05dem3/src/Tests.java:66
#: m05dem4/src/Tests.java:185 m05dem5/src/Tests.java:111
#: m06Q1/src/TestCode.java:71 m06Q10/src/TestCode.java:120
#: m06Q11/src/TestParam.java:77 m06Q2/src/TestCode.java:112
#: m06Q3/src/TestCode.java:81 m06Q3/src/TestParam.java:76
#: m06Q4/src/TestCode.java:94 m06Q4/src/TestParam.java:74
#: m06Q5/src/TestCode.java:96 m06Q6/src/TestCode.java:87
#: m06Q6/src/TestParam.java:76 m06Q7/src/TestCode.java:97
#: m06Q8/src/TestCode.java:99 m06Q8/src/TestParam.java:84
#: m06Q9/src/TestCode.java:117 m06_bf/src/TestInspect.java:68
#: m06_bf/src/TestCode.java:69 m06dem1/src/TestCode.java:146
#: m06dem2/src/TestCode.java:278 m06dem3/src/TestCode.java:115
#: m06dem4/src/TestCode.java:126 m07Q1/src/TestParam.java:76
#: m07Q10/src/TestCode.java:59 m07Q11/src/TestParam.java:85
#: m07Q2/src/TestCode.java:111 m07Q3/src/TestParam.java:86
#: m07Q4/src/TestCode.java:58 m07Q5/src/TestCode.java:59
#: m07Q6/src/TestParam.java:79 m07Q7/src/TestCode.java:59
#: m07Q8/src/TestCode.java:60 m07Q9/src/TestCode.java:58
#: m07_bf/src/TestItem.java:72 m07_bf/src/TestCD.java:129
#: m07_bf/src/TestInspectCD.java:68 m07dem2/src/TestCode.java:96
#: m08Q1/src/TestCode.java:60 m08Q2/src/TestCode.java:61
#: m08Q3/src/TestParam.java:77 m08Q4/src/TestAnd.java:85
#: m08Q4/src/TestGet.java:89 m08Q4/src/TestReset.java:88
#: m08Q4/src/TestRotate.java:84 m08Q4/src/TestSet.java:95
#: m08Q4/src/TestShift.java:84 m08Q4/src/TestConstruct.java:59
#: m08Q5/src/TestGet.java:84 m08Q5/src/TestReset.java:87
#: m08Q5/src/TestRotate.java:89 m08Q5/src/TestSet.java:87
#: m08Q5/src/TestShift.java:89 m08Q6/src/TestMax.java:75
#: m08Q6/src/TestMin.java:75 m08Q6/src/TestMoyenne.java:73
#: m08Q7/src/TestMax.java:74 m08Q7/src/TestMin.java:74
#: m08Q7/src/TestMoyenne.java:74 m08dem1/src/TestParam1.java:75
#: m08dem1/src/TestParam2.java:86 m09Q1/src/TestParam.java:92
#: m09Q2/src/TestParam.java:90 m09Q3/src/TestCode.java:76
#: m09Q4/src/TestParam.java:77 m09Q4/src/TestCode.java:75
#: m09Q5/src/TestCode.java:67 m09Q6/src/TestCode.java:70
#: m09Q7/src/TestCode.java:71 m09_bf/src/TestErr.java:100
#: m09_bf/src/Tests.java:88 m09_bf/src/TestsException.java:98
#: m09dem1/src/TestParam.java:90 m09dem2/src/TestCode.java:77
#: m09dem2/src/TestRes.java:77 m10Q1/src/Tests.java:88 m10Q2/src/Tests.java:128
#: m10Q3/src/Tests.java:173 m10Q4/src/TestListAdd.java:117
#: m10Q4/src/TestListContains.java:116 m10Q4/src/TestListGet.java:116
#: m10Q4/src/TestListSet.java:104 m10dem1/src/Tests.java:172
#: m10dem1/src/TestOut.java:95 m10dem2/src/TestContenuFichier.java:145
#: m10dem2/src/TestValeurRetour.java:118 m11Q1/src/Tests.java:180
#: m11Q2/src/Tests.java:169 m11Q3/src/Tests.java:120 m11Q4/src/Tests.java:176
#: m11Q5/src/Tests.java:180 m11Q6/src/Tests.java:148
Vous\ initialisez\ un\ tableau\ avec\ une\ taille\ n\u00e9gative.=You initialize an array with a negative size.

#: m01_bf/src/Tests.java:61 m02_bf/src/Tests.java:61 m03Q1/src/Tests.java:91
#: m03Q2/src/Tests.java:65 m03Q3/src/Tests.java:67 m03Q4/src/Tests.java:71
#: m03Q5/src/Tests.java:65 m03Q6/src/Tests.java:64 m03Q7/src/Tests.java:64
#: m03_bf/src/Tests.java:68 m03dem2/src/Tests.java:73 m03dem3/src/Tests.java:61
#: m03dem4/src/Tests.java:88 m03dem5/src/Tests.java:59 m04Q1/src/Tests.java:69
#: m04Q10/src/Tests.java:64 m04Q11/src/Tests.java:63 m04Q2/src/Tests.java:64
#: m04Q3/src/Tests.java:70 m04Q4/src/Tests.java:157 m04Q5/src/Tests.java:72
#: m04Q6/src/Tests.java:76 m04Q7/src/Tests.java:73 m04Q8/src/Tests.java:71
#: m04Q9/src/Tests.java:64 m04_bf/src/Tests.java:82 m04dem2/src/Tests.java:83
#: m04dem4/src/Tests.java:73 m04dem5/src/Tests.java:101 m05Q1/src/Tests.java:76
#: m05Q10/src/Tests.java:78 m05Q11/src/Tests.java:82 m05Q12/src/TestsQ1.java:74
#: m05Q12/src/TestsQ2.java:70 m05Q2/src/Tests.java:77 m05Q3/src/Tests.java:76
#: m05Q4/src/Tests.java:75 m05Q5/src/Tests.java:66 m05Q6/src/Tests.java:71
#: m05Q7/src/Tests.java:85 m05Q8/src/Tests.java:93 m05Q9/src/Tests.java:77
#: m05_bf/src/Tests.java:104 m05dem1/src/Tests.java:107
#: m05dem2/src/Tests.java:83 m05dem3/src/Tests.java:68
#: m05dem4/src/Tests.java:187 m05dem5/src/Tests.java:113
#: m06Q1/src/TestCode.java:73 m06Q10/src/TestCode.java:122
#: m06Q11/src/TestParam.java:79 m06Q2/src/TestCode.java:114
#: m06Q3/src/TestCode.java:83 m06Q3/src/TestParam.java:78
#: m06Q4/src/TestCode.java:96 m06Q4/src/TestParam.java:76
#: m06Q5/src/TestCode.java:98 m06Q6/src/TestCode.java:89
#: m06Q6/src/TestParam.java:78 m06Q7/src/TestCode.java:99
#: m06Q8/src/TestCode.java:101 m06Q8/src/TestParam.java:86
#: m06Q9/src/TestCode.java:119 m06_bf/src/TestInspect.java:70
#: m06_bf/src/TestCode.java:71 m06dem1/src/TestCode.java:148
#: m06dem2/src/TestCode.java:280 m06dem3/src/TestCode.java:117
#: m06dem4/src/TestCode.java:128 m07Q1/src/TestParam.java:78
#: m07Q10/src/TestCode.java:61 m07Q11/src/TestParam.java:87
#: m07Q2/src/TestCode.java:113 m07Q3/src/TestParam.java:88
#: m07Q4/src/TestCode.java:60 m07Q5/src/TestCode.java:61
#: m07Q6/src/TestParam.java:81 m07Q7/src/TestCode.java:61
#: m07Q8/src/TestCode.java:62 m07Q9/src/TestCode.java:60
#: m07_bf/src/TestItem.java:74 m07_bf/src/TestCD.java:131
#: m07_bf/src/TestInspectCD.java:70 m07dem2/src/TestCode.java:98
#: m08Q1/src/TestCode.java:62 m08Q2/src/TestCode.java:63
#: m08Q3/src/TestParam.java:79 m08Q4/src/TestAnd.java:87
#: m08Q4/src/TestGet.java:91 m08Q4/src/TestReset.java:90
#: m08Q4/src/TestRotate.java:86 m08Q4/src/TestSet.java:97
#: m08Q4/src/TestShift.java:86 m08Q4/src/TestConstruct.java:61
#: m08Q5/src/TestGet.java:86 m08Q5/src/TestReset.java:89
#: m08Q5/src/TestRotate.java:91 m08Q5/src/TestSet.java:89
#: m08Q5/src/TestShift.java:91 m08Q6/src/TestMax.java:77
#: m08Q6/src/TestMin.java:77 m08Q6/src/TestMoyenne.java:75
#: m08Q7/src/TestMax.java:76 m08Q7/src/TestMin.java:76
#: m08Q7/src/TestMoyenne.java:76 m08dem1/src/TestParam1.java:77
#: m08dem1/src/TestParam2.java:88 m08dem2/src/TestCode.java:78
#: m09Q1/src/TestParam.java:94 m09Q2/src/TestParam.java:92
#: m09Q3/src/TestCode.java:78 m09Q4/src/TestParam.java:79
#: m09Q4/src/TestCode.java:77 m09Q5/src/TestCode.java:69
#: m09Q6/src/TestCode.java:72 m09Q7/src/TestCode.java:73
#: m09_bf/src/TestErr.java:102 m09_bf/src/Tests.java:90
#: m09_bf/src/TestsException.java:100 m09dem1/src/TestParam.java:92
#: m09dem2/src/TestCode.java:80 m09dem2/src/TestRes.java:80
#: m10Q1/src/Tests.java:90 m10Q2/src/Tests.java:130 m10Q3/src/Tests.java:175
#: m10Q4/src/TestListAdd.java:119 m10Q4/src/TestListContains.java:118
#: m10Q4/src/TestListGet.java:118 m10Q4/src/TestListSet.java:106
#: m10dem1/src/Tests.java:174 m10dem1/src/TestOut.java:97
#: m10dem2/src/TestContenuFichier.java:147
#: m10dem2/src/TestValeurRetour.java:120 m11Q1/src/Tests.java:182
#: m11Q2/src/Tests.java:171 m11Q3/src/Tests.java:122 m11Q4/src/Tests.java:178
#: m11Q5/src/Tests.java:182 m11Q6/src/Tests.java:150
Il\ semble\ que\ votre\ code\ boucle.\ Ceci\ peut\ arriver\ si\ votre\ fonction\ s'appelle\ elle-m\u00eame.=It seems that your code loops. This can happen if your function calls itself.

#: m02Q1/src/Tests.java:27
#, java-format
Le\ reste\ de\ la\ division\ enti\u00e8re\ entre\ {0,number,\#}\ et\ {1,number,\#}\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=The rest of the division between {0,number,\#} and {1,number,\#} is {2,number,\#} but your program computes {3,number,\#}\n

#: m02Q10/src/Tests.java:32
#, java-format
Le\ nombre\ de\ diviseur\ de\ {0,number,\#}\ est\ {1,number,\#}\ or\ votre\ programme\ calcule\ {2,number,\#}.\n=The number of divisors of {0,number,\#} is {1,number,\#} but your program calculates {2,number,\#}.\n

#: m02Q3/src/Tests.java:32
#, java-format
Un\ triangle\ de\ c\u00f4t\u00e9\ {0}\ donne\ \:\n{1}\nVotre\ programme\ affiche\ \:\n{2}\n=A triangle of width {0} gives\:\n{1}\nYour program displays\:\n{2}\n

#: m02Q3/src/Tests.java:51 m02Q4/src/Tests.java:38
Vous\ affichez\ trop\ de\ caract\u00e8res\ \!\ \u26d4=You print to many characters \! \u26d4

#: m02Q4/src/Tests.java:34
#, java-format
Le\ dessin\ de\ la\ lettre\ H\ de\ hauteur\ {0}\ et\ de\ largeur\ {1}\ donne\ \n\n{2}\n\ et\ votre\ programme\ donne\n\n{3}\n=The drawing of the letter H of height {0} and width {1} gives\n\n{2}\nbut your program gives\n\n{3}\n

#: m02Q5/src/Tests.java:34
#, java-format
Le\ dessin\ de\ la\ lettre\ X\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=The drawing of the letter X of height {0} gives\n\n{1}\nbut your program gives\n\n{2}\n

#: m02Q5/src/Tests.java:36 m02Q6/src/Tests.java:35
Vous\ affichez\ trop\ de\ caract\u00e8res\!=You print to many characters\!

#: m02Q6/src/Tests.java:33
#, java-format
Le\ dessin\ de\ la\ lettre\ S\ de\ hauteur\ {0}\ donne\ \n\n{1}\n\ et\ votre\ programme\ donne\n\n{2}\n=The drawing of the letter S of height {0} gives\n\n{1}\nbut your program gives\n\n{2}\n

#: m02Q7/src/Tests.java:30
#, java-format
Le\ calcul\ d''int\u00e9r\u00eats\ avec\ une\ base\ de\ {0,number,\#}\ sur\ {1,number,\#}\ ann\u00e9es\ au\ taux\ d''int\u00e9r\u00eat\ {2,number,\#}\ donne\ {3,number,\#}\ mais\ votre\ programme\ calcule\ {4,number,\#}.\n=The calculation of interest with a base of {0,number,\#} during {1,number,\#} years at interest rate {2,number,\#} gives {3,number,\#} but your program computes {4,number,\#}.\n

#: m02Q8/src/Tests.java:35 m02Q8/src/Tests.java:40
#, java-format
V\u00e9rifiez\ que\ vous\ g\u00e9rez\ la\ factorielle\ de\ {0}.\n=Make sure that you handle the factorial of {0}.\n

#: m02Q8/src/Tests.java:62
#, java-format
La\ factorielle\ de\ {0}\ donne\ {1,number,\#},\ pourtant,\ votre\ code\ renvoie\ {2,number,\#}.\n=The factorial of {0} gives {1,number,\#}, but your code returns {2,number,\#}.\n

#: m02Q9/src/Tests.java:27
#, java-format
La\ somme\ des\ nombres\ dans\ l''intervalle\ [{0,number,\#},\ {1,number,\#}]\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=The sum of numbers in the interval [{0,number,\#}, {1,number,\#}] is equal to {2,number,\#} but your program calculates {3,number,\#}.\n

#: m02_bf/src/Tests.java:31
<rien>=<nothing>

#: m02_bf/src/Tests.java:33
#, java-format
Vous\ affichez\ mal\ les\ diviseurs\ propres\ sur\ la\ sortie\ standard\ quand\ n\ \=\ {0}.\nVous\ affichez\ \:\n{1}\nIl\ est\ attendu\ \:\n{2}=You do not display proper divisors on standard output when n \= {0}.\nYou print\:\n{1}\nThe expected print is\:\n{2}

#: m02dem2/src/Tests.java:36
#, java-format
Test\ {0}\ \:\ La\ somme\ des\ {1,number,\#}\ entiers\ pairs\ sup\u00e9rieurs\ \u00e0\ z\u00e9ro\ vaut\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=Test {0}\: The sum of {1,number,\#} even integers greater than zero is {2,number,\#} but your program calculates {3,number,\#}.\n

#: m02dem3/src/Tests.java:34
#, java-format
Test\ {0}\ \:\ l''entier\ {1,number,\#}\ exposant\ {2,number,\#}\ vaut\ {3,number,\#}\ et\ votre\ programme\ calcule\ {4,number,\#}.\n=Test {0}\: The integer {1,number,\#} exponent {2,number,\#} is {3,number,\#} and your program calculates {4,number,\#}.\n

#: m02dem4/src/Tests.java:30
#, java-format
Test\ {0}\ \:\ le\ plus\ grand\ diviseur\ entier\ de\ {1,number,\#}\ est\ {2,number,\#}\ et\ votre\ programme\ calcule\ {3,number,\#}.\n=Test {0}\: The largest integer divisor of {1,number,\#} is {2,number,\#} and your program calculates {3,number,\#}.\n

#: m02dem5/src/Tests.java:29
#, java-format
Test\ {0}\ \:\ le\ test\ de\ nombre\ premier\ sur\ {1,number,\#}\ renvoie\ {2}\ et\ votre\ programme\ renvoie\ {3}.\n=Test {0}\: the test of prime number on {1,number,\#} returns {2} and your program returns {3}.\n

#: m03Q1/src/librairies/FunctionHelper.java:47
#: m03Q2/src/librairies/FunctionHelper.java:47
#: m03Q3/src/librairies/FunctionHelper.java:47
#: m03Q4/src/librairies/FunctionHelper.java:47
#: m03Q5/src/librairies/FunctionHelper.java:47
#: m03Q6/src/librairies/FunctionHelper.java:47
#: m03Q7/src/librairies/FunctionHelper.java:47
#: m03_bf/src/librairies/FunctionHelper.java:47
#: m03dem2/src/librairies/FunctionHelper.java:47
#: m03dem3/src/librairies/FunctionHelper.java:47
#: m03dem4/src/librairies/FunctionHelper.java:47
#: m03dem5/src/librairies/FunctionHelper.java:47
#: m04Q1/src/librairies/FunctionHelper.java:47
#: m04Q10/src/librairies/FunctionHelper.java:47
#: m04Q11/src/librairies/FunctionHelper.java:47
#: m04Q2/src/librairies/FunctionHelper.java:47
#: m04Q3/src/librairies/FunctionHelper.java:47
#: m04Q4/src/librairies/FunctionHelper.java:47
#: m04Q5/src/librairies/FunctionHelper.java:47
#: m04Q6/src/librairies/FunctionHelper.java:47
#: m04Q7/src/librairies/FunctionHelper.java:47
#: m04Q8/src/librairies/FunctionHelper.java:47
#: m04Q9/src/librairies/FunctionHelper.java:47
#: m05Q1/src/librairies/FunctionHelper.java:47
#: m05Q10/src/librairies/FunctionHelper.java:47
#: m05Q11/src/librairies/FunctionHelper.java:47
#: m05Q12/src/librairies/FunctionHelper.java:47
#: m05Q2/src/librairies/FunctionHelper.java:47
#: m05Q3/src/librairies/FunctionHelper.java:47
#: m05Q4/src/librairies/FunctionHelper.java:47
#: m05Q5/src/librairies/FunctionHelper.java:47
#: m05Q6/src/librairies/FunctionHelper.java:47
#: m05Q7/src/librairies/FunctionHelper.java:47
#: m05Q8/src/librairies/FunctionHelper.java:47
#: m05Q9/src/librairies/FunctionHelper.java:47 m07dem1/src/TestCode.java:70
#: m09Q5/src/librairies/FunctionHelper.java:47
#: m09_bf/src/librairies/FunctionHelper.java:47
#: m10Q1/src/librairies/FunctionHelperCustom.java:46
#: m10Q3/src/librairies/FunctionHelper.java:47
#: m10dem1/src/librairies/FunctionHelper.java:47
#: m10dem2/src/librairies/FunctionHelper.java:47
#: utilities/FunctionHelper.java:47
#, java-format
Le\ type\ de\ retour\ de\ votre\ fonction\ doit\ \u00eatre\ du\ type\ {0}\ \!\n=The return type of your function must be of type {0}\!\n

#: m03Q1/src/librairies/FunctionHelper.java:50
#: m03Q2/src/librairies/FunctionHelper.java:50
#: m03Q3/src/librairies/FunctionHelper.java:50
#: m03Q4/src/librairies/FunctionHelper.java:50
#: m03Q5/src/librairies/FunctionHelper.java:50
#: m03Q6/src/librairies/FunctionHelper.java:50
#: m03Q7/src/librairies/FunctionHelper.java:50
#: m03_bf/src/librairies/FunctionHelper.java:50
#: m03dem2/src/librairies/FunctionHelper.java:50
#: m03dem3/src/librairies/FunctionHelper.java:50
#: m03dem4/src/librairies/FunctionHelper.java:50
#: m03dem5/src/librairies/FunctionHelper.java:50
#: m04Q1/src/librairies/FunctionHelper.java:50
#: m04Q10/src/librairies/FunctionHelper.java:50
#: m04Q11/src/librairies/FunctionHelper.java:50
#: m04Q2/src/librairies/FunctionHelper.java:50
#: m04Q3/src/librairies/FunctionHelper.java:50
#: m04Q4/src/librairies/FunctionHelper.java:50
#: m04Q5/src/librairies/FunctionHelper.java:50
#: m04Q6/src/librairies/FunctionHelper.java:50
#: m04Q7/src/librairies/FunctionHelper.java:50
#: m04Q8/src/librairies/FunctionHelper.java:50
#: m04Q9/src/librairies/FunctionHelper.java:50
#: m05Q1/src/librairies/FunctionHelper.java:50
#: m05Q10/src/librairies/FunctionHelper.java:50
#: m05Q11/src/librairies/FunctionHelper.java:50
#: m05Q12/src/librairies/FunctionHelper.java:50
#: m05Q2/src/librairies/FunctionHelper.java:50
#: m05Q3/src/librairies/FunctionHelper.java:50
#: m05Q4/src/librairies/FunctionHelper.java:50
#: m05Q5/src/librairies/FunctionHelper.java:50
#: m05Q6/src/librairies/FunctionHelper.java:50
#: m05Q7/src/librairies/FunctionHelper.java:50
#: m05Q8/src/librairies/FunctionHelper.java:50
#: m05Q9/src/librairies/FunctionHelper.java:50 m07dem1/src/TestCode.java:73
#: m09Q5/src/librairies/FunctionHelper.java:50
#: m09_bf/src/librairies/FunctionHelper.java:50
#: m10Q1/src/librairies/FunctionHelperCustom.java:49
#: m10Q3/src/librairies/FunctionHelper.java:50
#: m10dem1/src/librairies/FunctionHelper.java:50
#: m10dem2/src/librairies/FunctionHelper.java:50
#: utilities/FunctionHelper.java:50
#, java-format
Votre\ fonction\ doit\ prendre\ {0}\ argument(s)\ \!\n=Your function must take {0} argument(s)\!\n

#: m03Q1/src/librairies/FunctionHelper.java:54
#: m03Q2/src/librairies/FunctionHelper.java:54
#: m03Q3/src/librairies/FunctionHelper.java:54
#: m03Q4/src/librairies/FunctionHelper.java:54
#: m03Q5/src/librairies/FunctionHelper.java:54
#: m03Q6/src/librairies/FunctionHelper.java:54
#: m03Q7/src/librairies/FunctionHelper.java:54
#: m03_bf/src/librairies/FunctionHelper.java:54
#: m03dem2/src/librairies/FunctionHelper.java:54
#: m03dem3/src/librairies/FunctionHelper.java:54
#: m03dem4/src/librairies/FunctionHelper.java:54
#: m03dem5/src/librairies/FunctionHelper.java:54
#: m04Q1/src/librairies/FunctionHelper.java:54
#: m04Q10/src/librairies/FunctionHelper.java:54
#: m04Q11/src/librairies/FunctionHelper.java:54
#: m04Q2/src/librairies/FunctionHelper.java:54
#: m04Q3/src/librairies/FunctionHelper.java:54
#: m04Q4/src/librairies/FunctionHelper.java:54
#: m04Q5/src/librairies/FunctionHelper.java:54
#: m04Q6/src/librairies/FunctionHelper.java:54
#: m04Q7/src/librairies/FunctionHelper.java:54
#: m04Q8/src/librairies/FunctionHelper.java:54
#: m04Q9/src/librairies/FunctionHelper.java:54
#: m05Q1/src/librairies/FunctionHelper.java:54
#: m05Q10/src/librairies/FunctionHelper.java:54
#: m05Q11/src/librairies/FunctionHelper.java:54
#: m05Q12/src/librairies/FunctionHelper.java:54
#: m05Q2/src/librairies/FunctionHelper.java:54
#: m05Q3/src/librairies/FunctionHelper.java:54
#: m05Q4/src/librairies/FunctionHelper.java:54
#: m05Q5/src/librairies/FunctionHelper.java:54
#: m05Q6/src/librairies/FunctionHelper.java:54
#: m05Q7/src/librairies/FunctionHelper.java:54
#: m05Q8/src/librairies/FunctionHelper.java:54
#: m05Q9/src/librairies/FunctionHelper.java:54 m07dem1/src/TestCode.java:77
#: m09Q5/src/librairies/FunctionHelper.java:54
#: m09_bf/src/librairies/FunctionHelper.java:54
#: m10Q3/src/librairies/FunctionHelper.java:54
#: m10dem1/src/librairies/FunctionHelper.java:54
#: m10dem2/src/librairies/FunctionHelper.java:54
#: utilities/FunctionHelper.java:54
#, java-format
L''argument\ n\u00b0{0}\ n''est\ pas\ de\ type\ ''{1}''\ comme\ demand\u00e9\ \!\n=The argument n\u00b0{0} is not of type ''{1}'' as requested\!\n

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60 m07dem1/src/TestCode.java:83
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m09_bf/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
Votre\ fonction\ n'a\ pas\ \u00e9t\u00e9\ d\u00e9finie\ correctement.\ Assurez\ vous\ que\ son\ nom\ est\ correctement\ d\u00e9fini\ \!\n=Your function has not been defined correctly. Make sure its name is defined correctly\!\n

#: m03Q1/src/librairies/FunctionHelper.java:60
#: m03Q2/src/librairies/FunctionHelper.java:60
#: m03Q3/src/librairies/FunctionHelper.java:60
#: m03Q4/src/librairies/FunctionHelper.java:60
#: m03Q5/src/librairies/FunctionHelper.java:60
#: m03Q6/src/librairies/FunctionHelper.java:60
#: m03Q7/src/librairies/FunctionHelper.java:60
#: m03_bf/src/librairies/FunctionHelper.java:60
#: m03dem2/src/librairies/FunctionHelper.java:60
#: m03dem3/src/librairies/FunctionHelper.java:60
#: m03dem4/src/librairies/FunctionHelper.java:60
#: m03dem5/src/librairies/FunctionHelper.java:60
#: m04Q1/src/librairies/FunctionHelper.java:60
#: m04Q10/src/librairies/FunctionHelper.java:60
#: m04Q11/src/librairies/FunctionHelper.java:60
#: m04Q2/src/librairies/FunctionHelper.java:60
#: m04Q3/src/librairies/FunctionHelper.java:60
#: m04Q4/src/librairies/FunctionHelper.java:60
#: m04Q5/src/librairies/FunctionHelper.java:60
#: m04Q6/src/librairies/FunctionHelper.java:60
#: m04Q7/src/librairies/FunctionHelper.java:60
#: m04Q8/src/librairies/FunctionHelper.java:60
#: m04Q9/src/librairies/FunctionHelper.java:60
#: m05Q1/src/librairies/FunctionHelper.java:60
#: m05Q10/src/librairies/FunctionHelper.java:60
#: m05Q11/src/librairies/FunctionHelper.java:60
#: m05Q12/src/librairies/FunctionHelper.java:60
#: m05Q2/src/librairies/FunctionHelper.java:60
#: m05Q3/src/librairies/FunctionHelper.java:60
#: m05Q4/src/librairies/FunctionHelper.java:60
#: m05Q5/src/librairies/FunctionHelper.java:60
#: m05Q6/src/librairies/FunctionHelper.java:60
#: m05Q7/src/librairies/FunctionHelper.java:60
#: m05Q8/src/librairies/FunctionHelper.java:60
#: m05Q9/src/librairies/FunctionHelper.java:60
#: m09Q5/src/librairies/FunctionHelper.java:60
#: m09_bf/src/librairies/FunctionHelper.java:60
#: m10Q1/src/librairies/FunctionHelperCustom.java:63
#: m10Q3/src/librairies/FunctionHelper.java:60
#: m10dem1/src/librairies/FunctionHelper.java:60
#: m10dem2/src/librairies/FunctionHelper.java:60
#: utilities/FunctionHelper.java:60
#, java-format
Le\ nom\ attendu\ est\ \:\ ''{0}''.\n=The expected name is\: ''{0}''.\n

#: m03Q2/src/Tests.java:35
#, java-format
Le\ surface\ d''un\ rectangle\ de\ longueur\ {0}\ et\ de\ largeur\ {1}\ est\ {2}.\nCependant,\ votre\ code\ calcule\ {3}.\n=The surface of a rectangle of length {0} and width {1} is {2}.\nHowever, your code calculates {3}.\n

#: m03Q5/src/Tests.java:35
#, java-format
La\ surface\ d''une\ sph\u00e8re\ de\ rayon\ {0}\ est\ {1}.\nCependant,\ votre\ code\ calcule\ {2}.\n=The surface of a sphere of radius {0} is {1}.\nHowever, your code calculates {2}.\n

#: m03Q6/src/Tests.java:36
#, java-format
La\ factorielle\ de\ {0,number,\#}\ vaut\ {1,number,\#}\ et\ votre\ programme\ calcule\ {2,number,\#}.\n=The factorial of {0,number,\#} is {1,number,\#} and your program calculates {2,number,\#}.\n

#: m03Q7/src/Tests.java:36
#, java-format
Avec\ x\={0},\ votre\ code\ ne\ donne\ pas\ la\ bonne\ r\u00e9ponse.\n=With x\={0}, your code does not give the correct answer.\n

#: m03_bf/src/Tests.java:32
#, java-format
Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ n\ \=\ {2}.\n=Your {0} method returned {1} when called with n \= {2}.\n

#: m03_bf/src/Tests.java:33
Faites\ attention\ au\ cas\ o\u00f9\ n\ est\ n\u00e9gatif.\n=Pay attention to the case where n is negative.\n

#: m03dem2/src/Tests.java:44
Votre\ code\ n'affiche\ pas\ le\ nombre\ le\ plus\ grand.\n=Your code does not display the largest number.\n

#: m03dem3/src/Tests.java:35
#, java-format
Votre\ code\ indique\ que\ impair\ de\ {0}\ est\ {1}\ alors\ que\ cela\ devrait\ \u00eatre\ {2}.\n=Your code indicates that odd of {0} is {1} whereas it should be {2}.\n

#: m03dem4/src/Tests.java:60
#, java-format
Le\ dessin\ de\ la\ lettre\ L\ avec\ le\ caract\u00e8re\ {0}\ de\ hauteur\ {1}\ et\ largeur\ {2}\ donne\ \n\n{3}\net\ votre\ programme\ donne\n\n{4}\nAssurez\ vous\ aussi\ de\ ne\ pas\ mettre\ des\ espaces\ inutiles\ dans\ vos\ prints.=The drawing of the letter L with the character {0} of height {1} and width {2} gives\n\n{3}\nAnd your program gives\n\n{4}\nAlso make sure not to put unnecessary spaces in your prints.

#: m03dem5/src/Tests.java:30
#, java-format
Le\ nombre\ de\ diviseurs\ entiers\ du\ nombre\ {0}\ est\ {1}.\nCependant,\ votre\ code\ indique\ {2}.\n=The number of integer divisors of the number {0} is {1}.\nHowever, your code says {2}.\n

#: m04Q1/src/Tests.java:32 m04Q2/src/Tests.java:30
#, java-format
Avec\ les\ arguments\ c\="{0}"\ et\ s\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the arguments c\="{0}" and s\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04Q10/src/Tests.java:30 m04Q11/src/Tests.java:29 m04Q3/src/Tests.java:30
#: m04Q5/src/Tests.java:30 m04Q7/src/Tests.java:29 m04Q9/src/Tests.java:30
#, java-format
Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=With the argument s\="{0}", the expected result is\n{1}\nUnfortunately, your code returns\n{2}\n

#: m04Q4/src/Tests.java:94
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ majuscule\ ?\n=Do you check the presence of capital letter?\n

#: m04Q4/src/Tests.java:100
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'une\ minuscule\ ?\n=Do you check the presence of a lowercase letter?\n

#: m04Q4/src/Tests.java:106
V\u00e9rifiez-vous\ la\ pr\u00e9sence\ d'un\ chiffre\ ?\n=Do you check the presence of a number?\n

#: m04Q4/src/Tests.java:112
V\u00e9rifiez-vous\ toutes\ les\ conditions\ simultan\u00e9ment\ ?\n=Do you check all conditions simultaneously?\n

#: m04Q4/src/Tests.java:118
V\u00e9rifiez-vous\ la\ longueur\ du\ mot\ de\ passe\ ?\n=Do you check the length of the password?\n

#: m04Q4/src/Tests.java:130
#, java-format
Avec\ l''argument\ s\="{0}",\ la\ r\u00e9ponse\ attendue\ est\ {1},\ malheureusement,\ votre\ code\ renvoie\ {2}.\n=With the argument s\="{0}", the expected result {1} but your code returns {2}.\n

#: m04Q6/src/Tests.java:36 m04Q8/src/Tests.java:36 m04dem5/src/Tests.java:70
#, java-format
Avec\ les\ arguments\ s1\="{0}"\ et\ s2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the arguments s1\="{0}" and s2\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04_bf/src/Tests.java:34
#, java-format
Votre\ m\u00e9thode\ {0}\ a\ retourn\u00e9\ {1}\ quand\ elle\ est\ appel\u00e9e\ avec\ p\ \=\ "{2}"\ et\ s\ \=\ "{3}".\n=Your {0} method returned {1} when it was called with p \= "{2}" and s \= "{3}".\n

#: m04dem3/src/Tests.java:27
#, java-format
Avec\ les\ arguments\ {1},\ votre\ m\u00e9thode\ doit\ afficher\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With arguments {1}, your method must display\n{2}\nUnfortunately, your code returns\n{3}\n

#: m04dem4/src/Tests.java:44
#, java-format
Avec\ l''argument\ "{0}",\ la\ r\u00e9ponse\ attendue\ est\n{1}\nMalheureusement,\ votre\ code\ renvoie\ \n{2}\n=With the argument "{0}", the expected result is\n{1}\nUnfortunately, your code returns\n{2}\n

#: m05Q1/src/Tests.java:33 m05Q10/src/Tests.java:32 m05Q11/src/Tests.java:32
#: m05Q12/src/TestsQ1.java:33 m05Q2/src/Tests.java:33 m05Q3/src/Tests.java:33
#: m05Q4/src/Tests.java:31 m05Q7/src/Tests.java:34 m05dem4/src/Tests.java:74
Votre\ m\u00e9thode\ modifie\ le\ contenu\ du\ tableau\ pass\u00e9\ en\ argument.\ Une\ telle\ modification\ n'est\ autoris\u00e9e\ que\ si\ elle\ est\ explicitement\ indiqu\u00e9e\ dans\ les\ sp\u00e9cifications.\ Ce\ n'est\ pas\ le\ cas\ pour\ cette\ m\u00e9thode.\n=Your method changes the contents of the array passed as an argument. Such modification is permitted only if explicitly stated in the specifications. This is not the case for this method.\n

#: m05Q1/src/Tests.java:40
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}.\n=With the array {0}, your method should return {1}.\n

#: m05Q10/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ a\ \=\ {0}\ et\ b\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=Calling your method with a \= {0} and b \= {1}\nreturns {2} instead of {3}

#: m05Q11/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ n\ \=\ {0}\ et\ v\ \=\ {1}\nretourne\ {2}\ au\ lieux\ de\ {3}=Calling your method with n \= {0} and v \= {1}\nreturns {2} instead of {3}

#: m05Q12/src/TestsQ1.java:32 m05Q9/src/Tests.java:31
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ retourne\ {1}\ au\ lieux\ de\ {2}=Calling your method with v \= {0} returns {1} instead of {2}

#: m05Q12/src/TestsQ2.java:32
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ doit\ donner\ {1}.\nOr,\ vos\ modifications\ du\ tableau\ donnent\ {2}=Calling your method with v \= {0} should returns {1}.\nHowever, your changes in the array give {2}

#: m05Q2/src/Tests.java:40 m05Q3/src/Tests.java:40
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1,number,\#}\ mais\ elle\ retourne\ {2,number,\#}.\n=With the array {0}, your method should return {1,number,\#} but return {2,number,\#}.\n

#: m05Q4/src/Tests.java:38
#, java-format
Avec\ le\ tableau\ {0},\ votre\ m\u00e9thode\ devrait\ retourner\ {1}\ mais\ elle\ retourne\ {2}.\n=With the array {0}, your method should return {1} but return {2}.\n

#: m05Q5/src/Tests.java:33 m05Q6/src/Tests.java:38 m05dem3/src/Tests.java:39
Votre\ code\ retourne\ null.=Your code returns null.

#: m05Q5/src/Tests.java:34
Votre\ tableau\ n'a\ pas\ la\ bonne\ taille.=Your array does not have the correct size.

#: m05Q5/src/Tests.java:36
Un\ des\ \u00e9l\u00e9ment\ de\ votre\ tableau\ n'a\ pas\ la\ bonne\ valeur.=One of the element in your array does not have the correct value.

#: m05Q6/src/Tests.java:31 m05dem3/src/Tests.java:32
#, java-format
Avec\ une\ taille\ de\ {0},\ votre\ code\ g\u00e9n\u00e8re\ \:\n\n{1}\n\nOr,\ vous\ devriez\ avoir\ \:\ \n\n{2}=With a size of {0}, your code generates\:\n\n{1}\n\nBut, you should have\:\n\n{2}

#: m05Q6/src/Tests.java:32 m05dem3/src/Tests.java:33
Votre\ matrice\ n'a\ pas\ la\ bonne\ taille.\n=Your matrix does not have the correct size.\n

#: m05Q7/src/Tests.java:33
#, java-format
Votre\ code\ retourne\ {0}\ \u00e0\ la\ place\ de\ {1}\ avec\ l''occurence\ {2}\ et\ le\ tableau\ \:\n\n{3}\n=Your code returns {0} instead of {1} with the occurrence {2} and the array\:\n\n{3}\n

#: m05Q7/src/Tests.java:79 m05Q8/src/Tests.java:87
Cette\ exception\ est\ survenue\ quand\ le\ tableau\ est\ \:\n=This error occurred when the array is\:\n

#: m05Q8/src/Tests.java:33
#, java-format
L''appel\ de\ votre\ m\u00e9thode\ avec\ v\ \=\ {0}\ et\ w\ \=\ {1}\ et\ m\ \=\ \n{2}\nretourne\n{3}\nau\ lieux\ de\n{4}=Calling your method with v \= {0} and w \= {1} and m \=\n{2}\nreturn\n{3}\ninstead of\n{4}

#: m05_bf/src/Tests.java:35
#, java-format
Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau.\nLe\ tableau\ original\ est\ \:\n{1}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{2}\nVotre\ tableau\ est\ \:\n{3}=Your {0} method does not change the array correctly.\nThe original array is\:\n{1}\nThe expected array is\:\n{2}\nYour array is\:\n{3}

#: m05_bf/src/Tests.java:36
#, java-format
Votre\ m\u00e9thode\ {0}\ ne\ modifie\ pas\ correctement\ le\ tableau\ avec\ n\ \=\ {1}.\nLe\ tableau\ original\ est\ \:\n{2}\nLa\ r\u00e9ponse\ attendue\ est\ \:\n{3}\nVotre\ tableau\ est\ \:\n{4}=Your {0} method does not change the array correctly when n \= {1}.\nThe original array is\:\n{2}\nThe expected array is\:\n{3}\nYour array is\:\n{4}

#: m05dem1/src/Tests.java:33
#, java-format
Le\ tableau\ doit\ avoir\ une\ taille\ de\ {1}.\ Cependant,\ votre\ code\ cr\u00e9e\ un\ tableau\ de\ taille\ {2}.\n=The array must be a size of {1}. However, your code creates an array of size {2}.\n

#: m05dem1/src/Tests.java:34
#, java-format
La\ matrice\ devrait\ avoir\ {1}\ lignes\ et\ {2}\ colonnes.\ Cependant,\ votre\ code\ cr\u00e9e\ une\ matrice\ de\ {3}\ lignes\ et\ {4}\ colonnes.=The matrix should have {1} rows and {2} columns. However, your code creates a matrix of {3} rows and {4} columns.

#: m05dem1/src/Tests.java:36
Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ lignes.\n=You do not use the correct operation to get the number of rows.\n

#: m05dem1/src/Tests.java:37
Vous\ n'effectuez\ pas\ la\ bonne\ op\u00e9ration\ pour\ obtenir\ le\ nombre\ de\ colonnes.\n=You do not use the correct operation to get the number of columns.\n

#: m05dem2/src/Tests.java:33
Le\ test\ t1\ \=\=\ t2\ ne\ r\u00e9ussi\ pas.\n=The test t1 \=\= t2 is not successful.\n

#: m05dem2/src/Tests.java:34
#, java-format
Avec\ t1\ \=\ {1}\ et\ t2\ \=\ {2},\ votre\ code\ ne\ donne\ pas\ le\ bon\ r\u00e9sultat.=With t1 \= {1} and t2 \= {2}, your code does not give the correct result.

#: m05dem2/src/Tests.java:77
Les\ deux\ tableaux\ ne\ sont\ pas\ forc\u00e9ment\ de\ la\ m\u00eame\ taille\u2026=The two arrays are not necessarily of the same size \u2026

#: m05dem4/src/Tests.java:71
#, java-format
{0}\ \:\ vous\ utilisez\ mal\ les\ assertions.={0}\: You misuse assertions.

#: m05dem4/src/Tests.java:79
#, java-format
{0}\ \:\ votre\ code\ retourne\ null.={0}\: Your code returns null.

#: m05dem4/src/Tests.java:81
#, java-format
{0}\ \:\ votre\ code\ ne\ calcule\ pas\ la\ somme\ correctement.={0}\: Your code does not calculate the sum correctly.

#: m05dem4/src/Tests.java:106 m05dem4/src/Tests.java:109
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ a\ et/ou\ b\ est\ null.={0}\: You must throw an assert if a and/or b is null.

#: m05dem4/src/Tests.java:106
Faites\ aussi\ attention\ \u00e0\ l''ordre\ de\ vos\ assertions.\ Par\ exemple,\ l''assertion\ qui\ v\u00e9rifie\ que\ ''a''\ est\ diff\u00e9rent\ de\ null\ doit\ venir\ avant\ l''assertion\ qui\ v\u00e9rifie\ la\ taille\ de\ la\ matrice\ car\ sinon,\ vous\ allez\ provoquer\ une\ NullPointerException.=Also pay attention to the order of your assertions. For example, the assertion that verifies that ''a'' is different of null must come before the assertion that checks the size of the matrix because otherwise you will cause a NullPointerException.

#: m05dem4/src/Tests.java:140
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ lignes/colonnes\ ne\ sont\ pas\ TOUTES\ de\ le\ m\u00eame\ longeur\ (si\ un\ des\ double\ tableaux\ est\ arrang\u00e9\ sous\ forme\ triangle\ par\ exemple).={0}\: You must throw an assert in case rows/columns are not ALL of the same length (if one of the double array is arranged in a triangle form for example).

#: m05dem4/src/Tests.java:166
#, java-format
{0}\ \:\ vous\ devez\ lancer\ un\ assert\ dans\ le\ cas\ o\u00f9\ les\ matrices\ ne\ sont\ pas\ de\ la\ m\u00eame\ taille.={0}\: You must throw an assert in case the matrices are not the same size.

#: m05dem5/src/Tests.java:59
Vous\ n'affichez\ pas\ correctement\ les\ Strings\ pr\u00e9sents\ dans\ args.\ N'oubliez\ pas\ de\ faire\ un\ retour\ \u00e0\ la\ ligne\ apr\u00e8s\ chaque\ \u00e9l\u00e9ment\ de\ args.=You do not correctly display Strings from args. Do not forget to make a line break after each element of args.

#: m05dem5/src/Tests.java:91
#, java-format
Avec\ args\ \=\ {0}\ vous\ affichez\ ''{1}''\ alors\ qu''il\ faut\ afficher\ ''{2}''.\n=With args \= {0}, you print ''{1}'' but you should print ''{2}''\n

#: m06Q1/src/TestCode.java:40
#, java-format
lorsque\ on\ fait\ new\ Date({0},{1},{2}),\ votre\ date\ est\ {3}/{4}/{5}=when we perform new Date({0},{1},{2}), your date is {3}/{4}/{5}

#: m06Q10/src/TestCode.java:68
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ la\ m\u00e9thode\ surface()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ surfaces\ \!={0}\: You must use the surface() method to retrieve surface values\!

#: m06Q10/src/TestCode.java:96
#, java-format
{0}\ \:\ lorsque\ l''on\ compare\ les\ rectangle\ {1}\ et\ {2},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!={0}\: When comparing rectangle {1} and {2}, your method should return {3} but this is not the case\!

#: m06Q11/src/TestParam.java:63
#, java-format
Lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ rectangles\ {0}\ et\ {1},\ votre\ m\u00e9thode\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ le\ cas\ \!=When executing your code with rectangles {0} and {1}, your method should return {2} but that is not the case\!

#: m06Q2/src/TestCode.java:58
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getJour()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getJour() on date {1}, your code returns {2} instead of {3}

#: m06Q2/src/TestCode.java:73
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getMois()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getMois() on date {1}, your code returns {2} instead of {3}

#: m06Q2/src/TestCode.java:89
#, java-format
{0}\ \:\ lorsque\ l''on\ fait\ getAnnee()\ sur\ la\ date\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When we call getJour() on date {1}, your code returns {2} instead of {3}

#: m06Q3/src/TestCode.java:62 m06Q4/src/TestCode.java:74
#: m06Q8/src/TestCode.java:67 m06Q9/src/TestCode.java:65
#: m06dem1/src/TestCode.java:56 m07Q2/src/TestCode.java:91
#: m07dem1/src/TestCode.java:158
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ les\ getters\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!={0}\: You must use the getters to retrieve the values of the instance variables\!

#: m06Q3/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ Attention,\ pour\ les\ date\ {0}\ et\ {1},\ votre\ code\ devrait\ renvoyer\ {2}\ mais\ ce\ n'est\ pas\ la\ cas\ \!=Test 2\: Be careful, for dates {0} and {1}, your code should return {2} but it is not\!

#: m06Q4/src/TestParam.java:60
#, java-format
Test\ 2\ \:\ Attention,\ pour\ la\ date\ {0}\ vous\ renvoyez\ {1}\ \u00e0\ la\ place\ de\ {2}=Test 2\: Be careful, for the date {0} you return {1} instead of {2}

#: m06Q5/src/TestCode.java:59
#, java-format
{0}\ \:\ lorsque\ la\ fraction\ vaut\ {1},\ votre\ m\u00e9thode\ getNum()\ retourne\ {2}\ au\ lieu\ de\ {3}={0}\: When the fraction is {1}, your getNum() method returns {2} instead of {3}

#: m06Q5/src/TestCode.java:74
#, java-format
Test\ \:\ lorsque\ la\ fraction\ vaut\ {0},\ votre\ m\u00e9thode\ getDen()\ retourne\ {1}\ au\ lieu\ de\ {2}=Test\: When the fraction is {0}, your getDen() method returns {1} instead of {2}

#: m06Q6/src/TestCode.java:66
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ les\ m\u00e9thodes\ getNum()\ et\ getDen()\ pour\ r\u00e9cup\u00e9rer\ les\ valeurs\ des\ variables\ d''instances\ \!={0}\: You must use the getNum() and getDen() methods to retrieve the values of the instance variables\!

#: m06Q6/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ lance\ la\ fonction\ entier()\ avec\ la\ fraction\ {0},\ votre\ code\ devrait\ renvoyer\ {1}\ mais\ ce\ n''est\ pas\ le\ cas.=Test 2\: When executing the entier() function with the fraction {0}, your code should return {1} but it is not.

#: m06Q7/src/TestCode.java:59
#, java-format
{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getX()\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: For the pair {1}, your getX() method returns {2} instead of {3}

#: m06Q7/src/TestCode.java:76
#, java-format
{0}\ \:\ pour\ la\ paire\ {1},\ votre\ m\u00e9thode\ getY()\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: For the pair {1}, your getY() method returns {2} instead of {3}

#: m06Q8/src/TestParam.java:70
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ les\ points\ {0}\ et\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the points {0} and {1}, your code returns {2} instead of {3}

#: m06Q9/src/TestCode.java:92
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ le\ rectangle\ {1},\ elle\ renvoie\ {2}\ au\ lieu\ de\ {3}={0}\: When calling your method on rectangle {1}, it returns {2} instead of {3}

#: m06_bf/src/librairies/Inspector.java:216
#: m07_bf/src/librairies/Inspector.java:214 utilities/Inspector.java:168
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:220
#: m07_bf/src/librairies/Inspector.java:218 utilities/Inspector.java:172
#, java-format
!Le\ constructeur\ avec\ comme\ modificateur\ [{0}],\ comme\ types\ d''arguments\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:223
#: m07_bf/src/librairies/Inspector.java:221 utilities/Inspector.java:175
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:226
#: m07_bf/src/librairies/Inspector.java:224 utilities/Inspector.java:178
#, java-format
!Le\ constructeur\ avec\ comme\ types\ d''arguments\ {0}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9\ \!=

#: m06_bf/src/librairies/Inspector.java:291
#: m07_bf/src/librairies/Inspector.java:289 utilities/Inspector.java:243
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {4}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:295
#: m07_bf/src/librairies/Inspector.java:293 utilities/Inspector.java:247
#, java-format
!La\ m\u00e9thode\ avec\ comme\ modificateur\ [{0}],\ comme\ type\ de\ retour\ {1},\ comme\ nom\ {2},\ comme\ type\ d''arguments\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:298
#: m07_bf/src/librairies/Inspector.java:296 utilities/Inspector.java:250
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ et\ comme\ exceptions\ d\u00e9clar\u00e9e\ via\ throws\ {3}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/librairies/Inspector.java:301
#: m07_bf/src/librairies/Inspector.java:299 utilities/Inspector.java:253
#, java-format
!La\ m\u00e9thode\ avec\ comme\ type\ de\ retour\ {0},\ comme\ nom\ {1},\ comme\ type\ d''arguments\ {2}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ \!=

#: m06_bf/src/TestCode.java:126 m06_bf/src/TestCode.java:150
#: m06_bf/src/TestCode.java:174 m06_bf/src/TestCode.java:197
#: m06_bf/src/TestCode.java:221
#, java-format
!{0}\ \:\ aucun\ constructeur\ public\ prenant\ comme\ premier\ param\u00e8tre\ un\ String\ et\ comme\ deuxi\u00e8me\ un\ float\ n''as\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m06_bf/src/TestCode.java:127
#, java-format
!{0}\ \:\ lorsque\ l''on\ construit\ un\ nouvel\ objet\ Employe\ avec\ comme\ param\u00e8tre\ {1}\ et\ {2,number,\#},\ il\ n''y\ a\ pas\ de\ variable\ d''instance\ de\ type\ {3}\ avec\ la\ valeur\ {4}=

#: m06_bf/src/TestCode.java:130
Une\ erreur\ inattendu\ est\ survenue\ dans\ votre\ t\u00e2che,\ veuillez\ contactez\ une\ administrateur=An unexpected error occurred in your task, please contact your administrator

#: m06_bf/src/TestCode.java:151
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ le\ nom\ {1},\ votre\ m\u00e9thode\ getNom()\ retourne\ {2}={0}\: When we have an employee with the name {1}, your getNom() method returns {2}

#: m06_bf/src/TestCode.java:157 m06_bf/src/TestCode.java:180
#: m06_bf/src/TestCode.java:203 m06_bf/src/TestCode.java:230
#, java-format
{0}\ \:\ la\ m\u00e9thode\ {1}\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!={0}\: the {1} method was not found in your answer\!

#: m06_bf/src/TestCode.java:177
#, java-format
{0}\ \:\ lorsque\ l''on\ a\ un\ employ\u00e9\ avec\ un\ salaire\ de\ {1},\ votre\ m\u00e9thode\ getSalaire()\ retourne\ {2}={0}\: When you have an employee with a salary of {1}, your getSalary() method returns {2}

#: m06_bf/src/TestCode.java:200
#, fuzzy, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ l''Employe\ {1}\ avec\ le\ salaire\ {2},\ votre\ m\u00e9thode\ toString\ retourn\ {3}={0} when we perform charAt({2}) on the array {1}, your method returns {3}

#: m06_bf/src/TestCode.java:226
#, fuzzy, java-format
!{0}\ \:\ lorsque\ l''on\ a\ un\ Employe\ avec\ un\ salaire\ de\ {1}\ et\ que\ l''on\ augmente\ de\ {2},\ votre\ m\u00e9thode\ fixe\ son\ salaire\ \u00e0\ {3}={0} when we perform charAt({2}) on the array {1}, your method returns {3}

#: m06dem1/src/TestCode.java:70
#, java-format
{0}\ \:\ Il\ semblerait\ que\ votre\ m\u00e9thode\ renvoie\ un\ r\u00e9sultat\ incorrect.\ La\ m\u00e9thode\ doit\ renvoyer\ une\ nouvelle\ paire\ \!={0}\: It appears that your method returns an incorrect result. The method must return a new pair\!

#: m06dem1/src/TestCode.java:92
#, java-format
{0}\ \:\ Votre\ m\u00e9thode\ ne\ renvoie\ pas\ une\ paire\ avec\ les\ bonne\ valeurs.\ Pour\ la\ pair\ ({1},{2}),\ vous\ renvoyez\ ({3},{4})\ au\ lieu\ de\ ({5},{6}).={0}\: Your method does not return a pair with the correct values. For the pair ({1}, {2}), you return ({3}, {4}) instead of ({5}, {6}).

#: m06dem1/src/TestCode.java:115
#, java-format
{0}\ \:\ Votre\ m\u00e9thode\ semble\ modifier\ les\ variable\ d''instances\ de\ l''instance\ appelante.\ La\ paire\ appelante\ vallait\ ({1},{2})\ et\ vaut\ maintenant\ ({3},{4}).={0}\: Your method seems to change the instance variables of the calling instance. The calling pair was ({1}, {2}) and is now ({3}, {4}).

#: m06dem2/src/TestCode.java:55 m06dem2/src/TestCode.java:68
#: m06dem2/src/TestCode.java:85 m06dem2/src/TestCode.java:98
#, fuzzy, java-format
!{0}\ \:\ vous\ devez\ utilisez\ setOrdered\ pour\ changer\ la\ valeur\ de\ ordered\ \!={0}\: You must use setOrdered() to change the value of ''ordered''\!

#: m06dem2/src/TestCode.java:113
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6}\ mais\ ce\ n''est\ pas\ le\ cas={0}\: after calling setA({1}), we have the pair ({2}, {3}) and ''ordered'' should be {4} because {5} <\= {6} but this is not the case

#: m06dem2/src/TestCode.java:149
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setB({1}),\ nous\ avons\ la\ paire\ ({2},{3})\ et\ ''ordered''\ devrait\ valoir\ {4}\ car\ {5}\ <\=\ {6},\ mais\ ce\ n''est\ pas\ le\ cas={0}\: after a call to setB({1}), we have pair ({2}, {3}) and ''ordered'' should be {4} because {5} <\= {6}, but this is not the case

#: m06dem2/src/TestCode.java:180
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ ''a''\ vaut\ {2}\ au\ lieu\ de\ {3}={0}\: after calling setA({1}), ''a'' is {2} instead of {3}

#: m06dem2/src/TestCode.java:181
#, java-format
{0}\:\ apr\u00e8s\ l''appel\ \u00e0\ setA({1}),\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}={0}\: after calling setA({1}), {2} ''a'' changed from {3} to {4}

#: m06dem2/src/TestCode.java:225
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ setB({1}),\ ''b''\ vaut\ {2}\ au\ lieu\ de\ {3}={0}\: after calling setB({1}), ''b'' is {2} instead of {3}

#: m06dem2/src/TestCode.java:226
#, java-format
{0}\ \:\ apr\u00e8s\ l''appel\ setB({0})\ {2}\ ''a''\ chang\u00e9\ et\ est\ pass\u00e9\ de\ {3}\ \u00e0\ {4}={0}\: after calling setB({0}) {2} ''a'' changed from {3} to {4}

#: m06dem3/src/TestCode.java:65
#, java-format
{0}\ \:\ Vous\ devez\ utiliser\ la\ m\u00e9thode\ get()\ pour\ r\u00e9cup\u00e9rer\ la\ valeur\ du\ drapeau\ \!={0}\: You must use the get() method to retrieve the flag value\!

#: m06dem3/src/TestCode.java:80
#, java-format
{0}\ \:\ lorsque\ ''d''\ a\ l''\u00e9tat\ {1}\ et\ que\ la\ variable\ drapeau\ vaut\ {2},\ votre\ m\u00e9thode\ devrait\ retourner\ {3}\ mais\ ce\ n''est\ pas\ le\ cas.={0}\: When ''d'' is in state {1} and the flag variable is {2}, your method should return {3} but this is not the case.

#: m06dem4/src/TestCode.java:53
#, java-format
{0}\ \:\ Attention,\ vous\ ne\ lisez\ pas\ toutes\ les\ lignes\ du\ fichier,\ v\u00e9rifiez\ la\ condition={0}\: Be careful, you do not read all the lines of the file, check the condition

#: m06dem4/src/TestCode.java:60
#, java-format
{0}\ \:\ V\u00e9rifiez\ votre\ condition,\ vous\ avez\ provoqu\u00e9\ une\ EOFException\ \!={0}\: Check your condition, you have caused an EOFException\!

#: m06dem4/src/TestCode.java:77
#, java-format
{0}\ \:\ Le\ fichier\ ''student/cotes.txt''\ n''est\ pas\ lu\ correctement.\ V\u00e9rifiez\ la\ condition\ de\ boucle\ \!={0}\: The file ''student / cotes.txt'' is not read correctly. Check the loop condition\!

#: m06dem4/src/TestCode.java:98
#, java-format
{0}\ \:\ Vous\ avez\ caus\u00e9\ une\ FileNotfoundException,\ v\u00e9rifiez\ le\ nom\ du\ fichier\ \!={0}\: You caused a FileNotfoundException, check the file name\!

#: m07Q1/src/TestParam.java:62
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ l'employ\u00e9\ {0}\ par\ rapport\ \u00e0\ l'objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the employee {0} in relation to the object {1}, your code returns {2} instead of {3}

#: m07Q10/src/TestCode.java:80
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyez\ le\ bon\ String.\ Vous\ renvoyez\n''{1}''\ \u00e0\ la\ place\ de\n''{2}''={0}\: Your code does not seem to return the correct String. You return\n''{1}'' in place of\n''{2}''

#: m07Q10/src/TestCode.java:101
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ utiliser\ la\ m\u00e9thode\ toString()\ de\ la\ classe\ m\u00e8re={0}\: Your code does not seem to use the toString() method of the parent class

#: m07Q11/src/TestParam.java:71
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ le\ DeStats\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your method with the DeStats {0} to object {1}, your code returns {2} instead of {3}

#: m07Q2/src/TestCode.java:55
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ nom\ de\ l''employ\u00e9\ \!={0}\: Your code does not seem to return a String containing the employee's name\!

#: m07Q2/src/TestCode.java:70
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoy\u00e9\ un\ String\ contenant\ le\ salaire\ de\ l''employ\u00e9\ \!={0}\: your code does not seem to return a String containing the employee's salary\!

#: m07Q3/src/TestParam.java:72
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ d\u00e9\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your code with the die {0} in relation to the object {1}, your code returns {2} instead of {3}

#: m07Q4/src/TestCode.java:75
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ nom\ \!={0}\: Be careful, your constructor does not build a director with the correct name\!

#: m07Q4/src/TestCode.java:89
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ le\ bon\ salaire\ \!={0}\: Be careful, your constructor does not build a director with the correct salary\!

#: m07Q4/src/TestCode.java:103
#, java-format
{0}\ \:\ attention,\ votre\ constructeur\ ne\ construit\ pas\ un\ directeur\ avec\ la\ bonne\ prime\ \!={0}\: Be careful, your constructor does not build a director with the correct bonus\!

#: m07Q5/src/TestCode.java:81
#, java-format
{0}\ \:\ vous\ devez\ faire\ appel\ \u00e0\ la\ m\u00e9thode\ getSalaire()\ de\ la\ classe\ m\u00e8re\ \!={0}\: You must use the getSalaire() method of the parent class\!

#: m07Q5/src/TestCode.java:100
#, java-format
{0}\ \:\ Pour\ le\ directeur\ {1},\ votre\ m\u00e9thode\ renvoie\ {2,number,\#}\ au\ lieu\ de\ {3,number,\#}={0}\: For director {1}, your method returns {2,number,\#} instead of {3,number,\#}

#: m07Q6/src/TestParam.java:65
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ directeur\ {0}\ par\ rapport\ \u00e0\ l''objet\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your code with the director {0} relative to object {1}, your code returns {2} instead of {3}

#: m07Q7/src/TestCode.java:76
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStat\ avec\ le\ bon\ nom\ \!={0}\: Your code does not seem to initialize a DeStat object with the correct name\!

#: m07Q7/src/TestCode.java:91
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ un\ object\ DeStats\ avec\ le\ bon\ nombre\ de\ lancers\ totaux\ \!={0}\: Your code does not seem to initialize a DeStats object with the correct number of total throws\!

#: m07Q7/src/TestCode.java:106
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ (il\ est\ null)\ \!={0}\: Your code does not seem to initialize the result array (it is null)\!

#: m07Q7/src/TestCode.java:121
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ la\ bonne\ taille\ \!={0}\: Your code does not seem to initialize the result array with the correct size\!

#: m07Q7/src/TestCode.java:137
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ initialiser\ le\ tableau\ de\ r\u00e9sultats\ avec\ les\ bonnes\ valeurs\ \!={0}\: Your code does not seem to initialize the result array with the correct values\!

#: m07Q8/src/TestCode.java:81
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ r\u00e9sultat\ donn\u00e9\ par\ le\ d\u00e9={0}\: Your code does not seem to return the result given by the die

#: m07Q8/src/TestCode.java:101
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ \!={0}\: Your code does not seem to correctly increment the number of throws\!

#: m07Q8/src/TestCode.java:120
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ incr\u00e9menter\ correctement\ le\ nombre\ de\ lancers\ pour\ un\ r\u00e9sultat\ particulier\ \!={0}\: Your code does not seem to correctly increment the number of throws for a particular result\!

#: m07Q8/src/TestCode.java:141
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ appeler\ la\ m\u00e9thode\ lance()\ de\ la\ classe\ m\u00e8re={0}\: Your code does not seem to call the lance() method from the parent class

#: m07Q9/src/TestCode.java:76
#, java-format
{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyer\ le\ tableau\ de\ r\u00e9sultats={0}\: Your code does not appear to return the result array

#: m07_bf/src/TestItem.java:57
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ avec\ l''item\ qui\ a\ comme\ auteur\ {1},\ comme\ titre\ {2}\ et\ comme\ num\u00e9ros\ de\ s\u00e9rie\ {3,number,\#},\ votre\ m\u00e9thode\ renvoie\ ''{4}''\ au\ lieu\ de\ ''{5}''={0}\: When we execute your method with the item that has {1} as author, {2} as title and as serial numbers {3,number,\#}, your method returns ' '{4}' ' instead of ' '{5}' '

#: m07_bf/src/TestCD.java:102
#, java-format
!{0}\ \:\ aucun\ constructeur\ avec\ comme\ premier\ param\u00e8tre\ un\ String,\ comme\ deuxi\u00e8me\ un\ String\ et\ comme\ trois\u00e8me\ un\ int\ n''a\ \u00e9t\u00e9\ trouv\u00e9\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:106
!{0}\ \:\ apr\u00e8s\ avoir\ appel\u00e9\ votre\ constructeur\ avec\ les\ param\u00e8tre\ {1}\ (auteur),\ {2}\ (titre}\ et\ {3}\ (dur\u00e9e),\ il\ manque\ certaines\ variables\ d''instance\ avec\ ces\ valeurs\ \!=

#: m07_bf/src/TestCD.java:111
!La\ m\u00e9thode\ toString()\ n''as\ pas\ \u00e9t\u00e9\ trouv\u00e9e\ dans\ votre\ r\u00e9ponse\ \!=

#: m07_bf/src/TestCD.java:114
#, fuzzy, java-format
!{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ toString()\ sur\ le\ CD\ ayant\ pour\ auteur\ {1},\ titre\ {2},\ et\ dur\u00e9e\ {3,number,\#},\ votre\ m\u00e9thode\ retourne\n{4}\nau\ lieu\ de\n{5}=Test min\: When executing your min() method on the matrix {0}, your code returns {1} instead of {2}

#: m07dem1/src/TestCode.java:123
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ les\ paires\ {1}\ et\ {2},\ votre\ code\ devrait\ renvoyer\ {3}\ mais\ ce\ n'est\ pas\ le\ cas\ \!={0}\: When calling your method with pairs {1} and {2}, your code should return {3} but it is not the case\!

#: m07dem2/src/TestCode.java:60
#, java-format
{0}\ \:\ votre\ classe\ n''incr\u00e9mente\ pas\ les\ tickets\ \!={0}\: your class does not increment tickets\!

#: m07dem2/src/TestCode.java:75
#, java-format
{0}\ \:\ le\ premier\ ticket\ n''as\ pas\ le\ num\u00e9ro\ 1,\ il\ a\ le\ num\u00e9ro\ {1}={0}\: the first ticket does not have the number 1, it has the number {1}

#: m08Q1/src/TestCode.java:103 m08Q1/src/TestCode.java:124
#: m08Q1/src/TestCode.java:144
#, java-format
{0}\ \:\ votre\ code\ construit\ une\ instance\ o\u00f9\ s\ est\ null\ \!={0}\: Your code builds an instance where s is null\!

#: m08Q1/src/TestCode.java:106
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ StringTab\ de\ taille\ 1\ \!={0}\: Your code does not build a StringTab of size 1\!

#: m08Q1/src/TestCode.java:127
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ constructeur\ avec\ comme\ param\u00e8tre\ {1},\ la\ premi\u00e8re\ lettre\ de\ votre\ StringTab\ est\ {2}={0}\: When executing your constructor with the {1} parameter, the first letter of your StringTab is {2}

#: m08Q1/src/TestCode.java:147
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ vous\ construisez\ un\ String\ de\ taille\ {2}={0}\: When we pass as a parameter {1} to your constructor, you construct a String of size {2}

#: m08Q1/src/TestCode.java:164
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ param\u00e8tre\ {1}\ \u00e0\ votre\ constructeur,\ votre\ tableau\ est\ {2}={0}\: When we pass the parameter {1} to your constructor, your array is {2}

#: m08Q1/src/TestCode.java:181
#, java-format
{0}\ lorsque\ l''on\ utilise\ votre\ m\u00e9thode\ length()\ sur\ le\ StringTab\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}={0} When calling your length() method on the StringTab {1}, your method returns {2}

#: m08Q1/src/TestCode.java:199
#, java-format
{0}\ lorsque\ l''on\ a\ le\ tableau\ {1}\ et\ que\ l''on\ fait\ charAt({2}),\ votre\ m\u00e9thode\ renvoie\ {3}={0} when we perform charAt({2}) on the array {1}, your method returns {3}

#: m08Q2/src/TestCode.java:109
#, java-format
{0}\ \:\ lorsque\ l''on\ concat\u00e8ne\ {1}\ avec\ {2},\ votre\ code\ renvoie\ {2}={0}\: When concatenating {1} with {2}, your code returns {2}

#: m08Q3/src/TestParam.java:63
#, java-format
Lorsque\ l''on\ v\u00e9rifie\ que\ le\ StringTab\ {0}\ apparait\ dans\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}=When checking that the String Tab {0} appears in {1}, your code returns {2} instead of {3}

#: m08Q4/src/TestAnd.java:71
#, java-format
Test\ 8\ \:\ lorsque\ l''on\ fait\ un\ ET\ logique\ entre\ les\ ByteString\ {0}\ et\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ retourne\ le\ Byte\ {2}\ au\ lieu\ de\ {3}\ (repr\u00e9sentation\ String)=Test 8\: When doing a logical AND between ByteString {0} and {1} (String representation), your method returns Byte {2} instead of {3} (String representation)

#: m08Q4/src/TestGet.java:75
#, java-format
Test\ 3\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ getBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ naturelle\ est\ {1},\ votre\ code\ renvoie\ {2}\ au\ lieu\ de\ {3}.=Test 3\: When we run your getBit({0}) method on the ByteString whose natural representation is {1}, your code returns {2} instead of {3}.

#: m08Q4/src/TestReset.java:73
#, java-format
Test\ 5\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ resetBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=Test 5\: When we run your resetBit({0}) method on the ByteString whose ByteString natural representation is {1}, your code returns {2} instead of {3}.

#: m08Q4/src/TestRotate.java:70
#, java-format
Test\ 7\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=Test 7\: When executing your rotateRight() method on the ByteString {0}, the string becomes {1} instead of {2}

#: m08Q4/src/TestSet.java:80
#, java-format
Test\ 4\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ setBit({0})\ sur\ le\ ByteString\ dont\ la\ repr\u00e9sentation\ en\ ByteString\ est\ {1},\ le\ cha\u00eene\ devient\ {2}\ au\ lieu\ de\ {3}.=Test 4\: When we run your setBit({0}) method on the ByteString whose ByteString representation is {1}, the string becomes {2} instead of {3}.

#: m08Q4/src/TestShift.java:70
#, java-format
Test\ 6\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ ByteString\ {0},\ la\ cha\u00eene\ devient\ {1}\ au\ lieu\ de\ {2}=Test 6\: When we execute your shiftLeft() method on ByteString {0}, the string becomes {1} instead of {2}

#: m08Q4/src/TestConstruct.java:82
#, java-format
{0}\ \:\ votre\ code\ construit\ le\ byte\ {1}\ (repr\u00e9sentation\ naturelle)\ au\ lieu\ du\ byte\ 00000000\ (repr\u00e9sentation\ naturelle)={0}\: your code constructs the byte {1} (natural representation) instead of byte 00000000 (natural representation)

#: m08Q4/src/TestConstruct.java:83
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ String\ de\ taille\ 8={0}\: Your code does not build a String of size 8

#: m08Q4/src/TestConstruct.java:104
#, java-format
{0}\ \:\ lorsque\ l''on\ passe\ comme\ argument\ {1}\ \u00e0\ votre\ constructeur,\ il\ cr\u00e9e\ le\ byte\ {2}\ (repr\u00e9sentation\ naturelle)={0}\: when passing {1} as argument to your constructor, it creates the byte {2} (natural representation)

#: m08Q4/src/TestConstruct.java:108
#, java-format
{0}\ \:\ votre\ code\ ne\ construit\ pas\ un\ byte\ de\ taille\ 8={0}\: Your code does not build a StringTab of size 1

#: m08Q5/src/TestGet.java:70
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ getBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ votre\ m\u00e9thode\ renvoie\ {2}\ au\ lieu\ de\ {3}=Test 1\: When we execute your method getBit ({0}) with as byte {1} (String representation), your method returns {2} instead of {3}

#: m08Q5/src/TestReset.java:73
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ resetBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=Test 2\: When we execute your method resetBit({0}) with as byte {1} (String representation), the byte becomes {2} instead of {3}

#: m08Q5/src/TestRotate.java:75
#, java-format
Test\ 5\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ rotateRight()\ sur\ le\ String\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=Test 5\: When you call your rotateRight() method on String {0} (String representation), it becomes {1} instead of {2}

#: m08Q5/src/TestSet.java:73
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ setBit({0})\ avec\ comme\ byte\ {1}\ (repr\u00e9sentation\ en\ String),\ le\ byte\ devient\ {2}\ au\ lieu\ de\ {3}=Test 2\: When you call your method setBit({0}) with as byte {1} (String representation), the byte becomes {2} instead of {3}

#: m08Q5/src/TestShift.java:75
#, java-format
Test\ 4\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ shiftLeft()\ sur\ le\ byte\ {0}\ (repr\u00e9sentation\ en\ String),\ il\ devient\ {1}\ au\ lieu\ de\ {2}=Test 4\: When calling your shiftLeft() method on the byte {0} (String representation), it becomes {1} instead of {2}

#: m08Q6/src/TestMax.java:61
#, java-format
Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ max()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Max test\: when executing the max() method with array {0}, the result is {1} instead of {2}

#: m08Q6/src/TestMin.java:61
#, java-format
Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ min()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Min Test\: When executing the min() method with array {0}, the result is {1} instead of {2}

#: m08Q6/src/TestMoyenne.java:59
#, java-format
Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ la\ m\u00e9thode\ moyenne()\ avec\ le\ tableau\ {0},\ le\ r\u00e9sultat\ est\ {1}\ au\ lieu\ de\ {2}=Average test\: when the average method() is executed with the array {0}, the result is {1} instead of {2}

#: m08Q7/src/TestMax.java:60
#, fuzzy, java-format
!Test\ max\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ max()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Test Max\: When we run your max() method on the matrix {0}, your code returns {1} instead of {2}

#: m08Q7/src/TestMin.java:60
#, fuzzy, java-format
!Test\ min\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ min()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Test min\: When executing your min() method on the matrix {0}, your code returns {1} instead of {2}

#: m08Q7/src/TestMoyenne.java:60
#, fuzzy, java-format
!Test\ moyenne\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ moyenne()\ sur\ la\ matrice\n{0}\nvotre\ code\ renvoie\ {1}\ au\ lieu\ de\ {2}=Average test\: when we run your moyenne() on the matrix\n{0}, your code returns {1} instead of {2}

#: m08dem1/src/TestParam1.java:61
#, java-format
Test\ 1\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set({0})\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}=Test 1\: When we run your set({0}) method on a flag with state {1}, the flag state becomes {2}

#: m08dem1/src/TestParam2.java:72
#, java-format
Test\ 2\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ m\u00e9thode\ set(''{0}'')\ sur\ un\ drapeau\ avec\ l''\u00e9tat\ {1},\ l''\u00e9tat\ du\ drapeau\ devient\ {2}\n=Test 2\: When we execute your set(''{0}'') method on a flag with state {1}, the flag state becomes {2}\n

#: m08dem2/src/TestCode.java:95
#, fuzzy, java-format
!{0}\ \:\ attention,\ lorsque\ s\ vaut\ null,\ vous\ renvoyez\ {1}\ au\ lieu\ de\ null=Test 2\: Be careful, for the date {0} you return {1} instead of {2}

#: m08dem2/src/TestCode.java:109
#, fuzzy, java-format
!{0}\ \:\ attention,\ lorsque\ n\ vaut\ 0,\ vous\ renvoyez\ {1}\ au\ lieu\ de\ null=Test 2\: Be careful, for the date {0} you return {1} instead of {2}

#: m08dem2/src/TestCode.java:129
#, fuzzy, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ r\u00e9p\u00e9ter\ assez\ de\ fois\ la\ cha\u00eene\ de\ carct\u00e8re,\ v\u00e9rifiez\ votre\ condition\!={0}\: Your code does not seem to call the lance() method from the parent class

#: m08dem2/src/TestCode.java:131
#, fuzzy, java-format
!{0}\ \:\ votre\ code\ ne\ semble\ pas\ renvoyez\ un\ string\ contenant\ la\ cha\u00eene\ de\ caract\u00e8re\ pass\u00e9\ en\ param\u00e8tre\!={0}\: Your code does not seem to return a String containing the employee's name\!

#: m09Q1/src/TestParam.java:67
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ la\ fraction\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=When you call your method with the fraction {0} on the object {1}, your method returns {2}. Review specifications\!

#: m09Q2/src/TestParam.java:70
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ l''employ\u00e9\ {0}\ sur\ l''objet\ {1},\ votre\ m\u00e9thode\ renvoie\ {2}.\ Relisez\ les\ sp\u00e9cifications\ \!=When you call your method with the employee {0} on the object {1}, your method returns {2}. Review specifications\!

#: m09Q3/src/TestCode.java:93 m09Q4/src/TestCode.java:92
#: m09Q7/src/TestCode.java:92
#, java-format
{0}\ \:\ vous\ devez\ utiliser\ un\ BufferedReader\ \!={0}\: You must use a BufferedReader\!

#: m09Q3/src/TestCode.java:115
#, java-format
{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close\ lorsque\ la\ m\u00e9thode\ se\ termine\ sans\ erreur\ \!={0}\: you do not call close() when the method ends without error\!

#: m09Q3/src/TestCode.java:131
#, java-format
{0}\ \:\ votre\ code\ ne\ compte\ pas\ le\ bon\ nombre\ de\ lignes\ \!={0}\: Your code does not count the correct number of lines\!

#: m09Q3/src/TestCode.java:155
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ -1\ lorsqu''une\ erreur\ se\ produit\ \!={0}\: You do not return -1 when an error occurs\!

#: m09Q3/src/TestCode.java:159 m09Q3/src/TestCode.java:183
#: m09Q4/src/TestCode.java:119 m09Q4/src/TestCode.java:194
#: m09Q7/src/TestCode.java:117
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ bien\ les\ IOExceptions\ \!={0}\: you do not manage IOExceptions correctly\!

#: m09Q3/src/TestCode.java:187 m09Q4/src/TestCode.java:198
#, java-format
{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsqu''une\ exception\ apparait\ \!={0}\: you do not close the stream when an exception occur\!

#: m09Q4/src/TestParam.java:64
\ Test\ 1\ \:\ votre\ code\ en\ renvoie\ pas\ le\ bon\ r\u00e9sultat\ \!=\ Test 1\: your code does not return the right result\!

#: m09Q4/src/TestCode.java:115
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ false\ lorsqu''une\ erreur\ se\ produit\ \!={0}\: You do not return false when an error occurs\!

#: m09Q4/src/TestCode.java:139
#, java-format
{0}\ \:\ lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ avec\ un\ String\ se\ trouvant\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When we call your method with a String in the file, you do not close the stream\!

#: m09Q4/src/TestCode.java:168
#, java-format
{0}\ \:\ lorsque\ le\ String\ ''s''\ ne\ se\ trouve\ pas\ dans\ le\ fichier,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When the String ''s'' is not in the file, you do not close the stream\!

#: m09Q5/src/TestCode.java:93
#, java-format
{0}\ \:\ lorsque\ le\ fichier\ n''existe\ pas,\ votre\ m\u00e9thode\ devrait\ renvoyer\ false\ mais\ ce\ n''est\ pas\ le\ cas\ \!={0}\: When the file does not exist, your method should return false but it is not the case\!

#: m09Q5/src/TestCode.java:108
#, java-format
{0}\ \:\ lorsque\ le\ fichier\ existe\ et\ est\ accessible,\ votre\ m\u00e9thode\ devrait\ renvoyer\ true\ mais\ ce\ n''est\ pas\ le\ cas\ \!={0}\: When the file exists and is accessible, your method should return true but it is not the case\!

#: m09Q6/src/TestCode.java:89 m09Q6/src/TestCode.java:121
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ les\ exceptions\ \!={0}\: you do not handle the exceptions\!

#: m09Q6/src/TestCode.java:123
#, java-format
{0}\ \:\ vous\ ne\ fa\u00eetes\ pas\ appel\ \u00e0\ close()\ \!={0}\: you do not call close ()\!

#: m09Q6/src/TestCode.java:194
#, java-format
{0}\ \:\ lorsque\ l''on\ ex\u00e9cute\ votre\ code\ avec\ le\ tableau\ {1}\nle\ contenu\ de\ votre\ fichier\ est\n{2}\nau\ lieu\ de\ \n{3}={0}\: calling your code with the array {1}\nthe content of your file is\n{2}\ninstead of\n{3}

#: m09Q7/src/TestCode.java:112
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsqu''une\ IOException\ se\ produit\ \!={0}\: You do not return null when an IOException occurs\!

#: m09Q7/src/TestCode.java:121
#, java-format
{0}\ \:\ lorsqu''une\ IOException\ surgit,\ vous\ ne\ fermez\ pas\ le\ flux={0}\: When an IOException occurs, you do not close the stream

#: m09Q7/src/TestCode.java:145
#, java-format
{0}\ \:\ vous\ ne\ renvoyez\ pas\ null\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ \!={0}\: You do not return null when the file has a bad format\!

#: m09Q7/src/TestCode.java:149
#, java-format
{0}\ \:\ vous\ ne\ g\u00e9rez\ pas\ le\ cas\ ou\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffre\ \!={0}\: You do not manage the case where the file has a bad digit format\!

#: m09Q7/src/TestCode.java:151
#, java-format
{0}\ \:\ vous\ ne\ fermez\ pas\ le\ flux\ lorsque\ le\ fichier\ a\ un\ mauvais\ format\ de\ chiffres\ \!={0}\: You do not close the stream when the file has a wrong digits format\!

#: m09Q7/src/TestCode.java:208
#, java-format
{0}\ \:\ lorsque\ l''on\ lit\ le\ fichier\ suivant\n{1}\ avec\ votre\ m\u00e9thode,\ vous\ renvoyez\ {2}\ au\ lieu\ de\ {3}\ \!={0}\: when reading the following file\n{1} with your method, return {2} instead of {3}\!

#: m09Q7/src/TestCode.java:243
#, java-format
{0}\ \:\ lorsque\ tout\ se\ d\u00e9roule\ sans\ exception,\ vous\ ne\ fermez\ pas\ le\ flux\ \!={0}\: When everything happens without exception, you do not close the stream\!

#: m09_bf/src/TestErr.java:52
#, fuzzy
!votre\ m\u00e9thode\ n''affiche\ pas\ "ERREUR"\ sur\ la\ sortie\ d''erreur\ standard.\n=check the output of the error output (stdErr).\n

#: m09_bf/src/TestErr.java:63 m09_bf/src/Tests.java:61
#: m09_bf/src/TestsException.java:63
#, fuzzy, java-format
!{0}\ \:\ rat\u00e9\ \:\ ={0}\: success

#: m09_bf/src/TestErr.java:72 m09_bf/src/Tests.java:69
#: m09_bf/src/TestsException.java:72
#, fuzzy, java-format
!{0}\ \:\ r\u00e9ussi\n={0}\: success

#: m09_bf/src/TestErr.java:80 m09_bf/src/TestsException.java:78
#, java-format
!{0}\ \:\ rat\u00e9\ \:\ votre\ programme\ g\u00e9n\u00e8re\ une\ exception\ non\ g\u00e9r\u00e9e\ \:\ =

#: m09_bf/src/Tests.java:37
!votre\ m\u00e9thode\ ne\ renvoie\ pas\ la\ bonne\ valeur\ du\ maximum\ sur\ un\ fichier\ compl\u00e8tement\ erron\u00e9.\n=

#: m09_bf/src/Tests.java:41
!votre\ m\u00e9thode\ ne\ renvoie\ pas\ la\ bonne\ valeur\ du\ maximum\ sur\ un\ fichier\ avec\ une\ ligne\ malform\u00e9e\ contenant\ un\ maximum.\n=

#: m09_bf/src/Tests.java:45
!votre\ m\u00e9thode\ ne\ renvoie\ pas\ la\ bonne\ valeur\ du\ maximum\ sur\ un\ fichier\ avec\ une\ ligne\ malform\u00e9e.\n=

#: m09_bf/src/Tests.java:50
!votre\ m\u00e9thode\ ne\ renvoie\ pas\ la\ bonne\ valeur\ du\ maximum\ avec\ un\ fichier\ au\ bon\ format.\n=

#: m09_bf/src/TestsException.java:52
#, fuzzy
!votre\ m\u00e9thode\ ne\ g\u00e8re\ pas\ les\ IOExceptions.\n={0}\: you do not manage IOExceptions correctly\!

#: m09dem1/src/TestParam.java:66
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ qu''ils\ sont\ \u00e9gaux\ \!=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m09dem1/src/TestParam.java:67
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ <\ {1}=When you call your method on the Integer {0} with argument {1}, your method says that {0} < {1}

#: m09dem1/src/TestParam.java:68
#, java-format
Lorsque\ l''on\ appelle\ votre\ m\u00e9thode\ sur\ l''Integer\ {0}\ avec\ comme\ argument\ {1},\ votre\ m\u00e9thode\ dit\ que\ {0}\ >\ {1}=When you call your method on the Integer {0} with argument {1}, your method says that {0} > {1}

#: m09dem2/src/TestCode.java:98
#, java-format
{0}\ \:\ attention,\ lorsqu''une\ exception\ est\ lanc\u00e9e,\ votre\ code\ doit\ renvoyer\ -1\ \!={0}\: Be careful, when an exception is thrown, your code must return -1\!

#: m09dem2/src/TestCode.java:103
#, java-format
{0}\ \:\ attention,\ vous\ ne\ g\u00e9rer\ pas\ les\ exceptions\ \!={0}\: be careful, you do not handle the exceptions\!

#: m09dem2/src/TestRes.java:99
#, java-format
{0}\ \:\ vous\ ne\ lisez\ pas\ bien\ le\ fichier,\ le\ r\u00e9sultat\ n'est\ pas\ celui\ attendu\ \!={0}\: you do not read the file well, the result is not the expected one\!

#: m10Q1/src/Tests.java:53
#, java-format
Avec\ les\ fractions\ f1\="{0}"\ et\ f2\="{1}",\ la\ r\u00e9ponse\ attendue\ est\n{2}\nMalheureusement,\ votre\ code\ renvoie\ \n{3}\n=With the fractions f1\="{0}" and f2\="{1}", the expected result is\n{2}\nUnfortunately, your code returns\n{3}\n

#: m10Q2/src/Tests.java:49
#, java-format
{0}\ \:\ le\ test\ avec\ une\ fraction\ avec\ 0\ au\ d\u00e9nominateur\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a fraction with 0 in the denominator does not work\: 

#: m10Q2/src/Tests.java:54
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ null\ ne\ fonctionne\ pas\ \:\ ={0}\: The test with a null string does not work\: 

#: m10Q2/src/Tests.java:59
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ non-conforme\ au\ format\ "a/b"\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a non-conforming string "a/b" does not work\: 

#: m10Q2/src/Tests.java:65
lancez-vous\ la\ bonne\ exception\ ?\ \n=do you throw the correct exception? \n

#: m10Q2/src/Tests.java:66
v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ ce\ cas.\ \n=make sure you manage this case. \n

#: m10Q2/src/Tests.java:86
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ fonctionne\ pas\ \:\ ={0}\: the test with a valid string does not work\: 

#: m10Q2/src/Tests.java:92
respectez\ vous\ le\ format\ "a/b"\ ?\n=do you respect the "a/b" format?\n

#: m10Q2/src/Tests.java:93
modifiez-vous\ les\ variables\ d'instances\ de\ la\ classe\ Fraction\ ?\n=Do you modify the instance variables of the Fraction class?\n

#: m10Q3/src/Tests.java:85
#, java-format
{0}\ \:\ le\ test\ de\ parsing\ d'un\ string\ qui\ n'est\ pas\ un\ double\ ne\ passe\ pas\ \:\ ={0}\: the parsing test of a string that is not a double does not pass\: 

#: m10Q3/src/Tests.java:90
#, java-format
{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ sup\u00e9rieure\ \u00e0\ 20\ ne\ passe\ pas\ \:\ ={0}\: the test with a student with a score greater than 20 does not pass\: 

#: m10Q3/src/Tests.java:95
#, java-format
{0}\ \:\ le\ test\ avec\ un\ \u00e9tudiant\ poss\u00e9dant\ une\ cote\ n\u00e9gative\ ne\ passe\ pas\ \:\ ={0}\: the test with a student with a negative rating does not pass\: 

#: m10Q3/src/Tests.java:101
#, fuzzy
!vous\ ne\ lancez\ pas\ la\ bonne\ exception.\n=you do not throw the correct exception. \n

#: m10Q3/src/Tests.java:102
#, fuzzy
!vous\ ne\ lancez\ pas\ une\ exception\ dans\ les\ cas\ particuliers.\n=Do you throw an exception in particular cases? \n

#: m10Q3/src/Tests.java:122 m10Q3/src/Tests.java:127
#, java-format
!{0}\ \:\ les\ cotes\ sont\ comprises\ entre\ 0\ et\ 20\ \!\n=

#: m10Q3/src/Tests.java:132
#, java-format
{0}\ \:\ le\ test\ avec\ un\ string\ correct\ ne\ passe\ pas\ \:\ ={0}\: the test with a valid string does not pass\: 

#: m10Q3/src/Tests.java:138
#, fuzzy
!vous\ ne\ respectez\ pas\ le\ format\ "nom;\ cote1,\ cote2,\ cote3"\ avec\ les\ cotes\ <\=20\ et\ >\=0.\n=do you respect the format "name, rating1, rating2, rating3"?\n

#: m10Q3/src/Tests.java:139
#, fuzzy
!vous\ n'initialisez\ pas\ correctement\ les\ variables\ d'instances\ de\ la\ classe\ Student.\n=do you correctly initialize Student class instance variables?\n

#: m10Q4/src/TestListAdd.java:85
#, fuzzy, java-format
!@{0}\ \:\nla\ fonction\ add\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListAdd.java:96
!votre\ m\u00e9thode\ add()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ sans\ l'agrandir\ \!\n=

#: m10Q4/src/TestListAdd.java:98
!votre\ m\u00e9thode\ add()\ lance\ une\ exception\ (=

#: m10Q4/src/TestListContains.java:83
#, fuzzy, java-format
!@{0}\ \:\nla\ fonction\ contains\ avec\ l''AList\n{1}\net\ l''objet\ {2}\ doit\ renvoyer\n{3}\npourtant,\ votre\ code\ donne\n{4}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListContains.java:84
#, java-format
!@{0}\ \:\nvotre\ m\u00e9thode\ contains\ ne\ doit\ pas\ modifier\ le\ tableau\ \!\n=

#: m10Q4/src/TestListContains.java:95
!votre\ m\u00e9thode\ contains()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ \!\n=

#: m10Q4/src/TestListContains.java:97
!votre\ m\u00e9thode\ contains()\ lance\ une\ exception\ (=

#: m10Q4/src/TestListGet.java:83
#, fuzzy, java-format
!@{0}\ \:\nla\ fonction\ get\ avec\ l''AList\n{1}\net\ l''indice\ {2}\ doit\ renvoyer\n{3}\npourtant,\ votre\ code\ donne\n{4}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListGet.java:84
#, fuzzy, java-format
!@{0}\ \:\nvotre\ m\u00e9thode\ get\ ne\ doit\ pas\ modifier\ le\ tableau\ \!\n={0}\: Your code does not build a StringTab of size 1

#: m10Q4/src/TestListGet.java:95
!votre\ m\u00e9thode\ get()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ \!\ Pensez\ \u00e0\ regarder\ les\ pr\u00e9-conditions.\n=

#: m10Q4/src/TestListGet.java:97
!votre\ m\u00e9thode\ get()\ lance\ une\ exception\ (=

#: m10Q4/src/TestListSet.java:72
#, fuzzy, java-format
!@{0}\ \:\nla\ fonction\ set\ avec\ l''AList\n{1}\nl''objet\ {2}\ et\ l''index\ {3}\ doit\ modifier\ la\ liste\ en\n{4}\npourtant,\ votre\ code\ donne\n{5}\n=The factorial of {0} gives {1}, but your code returns {2}.\n

#: m10Q4/src/TestListSet.java:83
!votre\ m\u00e9thode\ set()\ tente\ d'acc\u00e9der\ \u00e0\ un\ index\ hors\ de\ l'AList\ sans\ l'agrandir\ \!\n=

#: m10Q4/src/TestListSet.java:85
!votre\ m\u00e9thode\ set()\ lance\ une\ exception\ (=

#: m10Q5/src/VectorTest.java:46
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector()\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0}\nvotre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTest.java:55
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector()\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0}\nvotre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ {2}=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTestMock.java:32 m10Q6/src/MatrixTestMock.java:31
!g\u00e9n\u00e8re\ une\ IOException=

#: m10Q5/src/VectorTestMock.java:33
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector()\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTestMock.java:34
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector()\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ null.\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTestMock.java:65
#, fuzzy
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector()\ avec\ une\ IOException\ lanc\u00e9e\ par\ le\ readLine()\ du\ BufferedReader,\ le\ fichier\ n'a\ pas\ \u00e9t\u00e9\ ferm\u00e9\ correctement.=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q5/src/VectorTestMock.java:129
#, fuzzy
!n''existe\ pas=is not

#: m10Q6/src/MatrixTest.java:90
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadMatrix\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q6/src/MatrixTest.java:97
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadMatrix\ avec\ comme\ argument\ un\ fichier\ contenant\ \n{0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ {2}=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q6/src/MatrixTestMock.java:32
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadMatrix\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ lanc\u00e9\ une\ exception.=When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q6/src/MatrixTestMock.java:33
#, fuzzy, java-format
!Lors\ de\ l''ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadMatrix\ avec\ un\ fichier\ qui\ {0},\ votre\ m\u00e9thode\ a\ retourn\u00e9\ le\ tableau\ {1}\ alors\ que\ le\ r\u00e9sultat\ attendu\ est\ null.\ =When you call your method on the Integer {0} with argument {1}, your method says that they are equal\!

#: m10Q6/src/MatrixTestMock.java:63
!Lors\ de\ l'ex\u00e9cution\ de\ votre\ m\u00e9thode\ loadVector\ avec\ une\ IOException\ lanc\u00e9e\ par\ le\ readLine()\ du\ BufferedReader,\ le\ fichier\ n'a\ pas\ \u00e9t\u00e9\ ferm\u00e9\ correctement.=

#: m10Q6/src/MatrixTestMock.java:125
#, fuzzy
!n'existe\ pas=is not

#: m10dem1/src/Tests.java:42
v\u00e9rifiez\ l'output\ sur\ la\ sortie\ standard\ (stdOut).\n=check the output of the standard output (stdOut).\n

#: m10dem1/src/Tests.java:43
v\u00e9rifiez\ l'output\ sur\ la\ sortie\ d'erreur\ standard\ (stdErr).\n=check the output of the error output (stdErr).\n

#: m10dem1/src/Tests.java:44 m10dem1/src/TestOut.java:26
v\u00e9rifiez\ les\ valeurs\ de\ retour\ de\ votre\ programme.\n=check the output values of your program.\n

#: m10dem1/src/Tests.java:45 m10dem1/src/TestOut.java:27
v\u00e9rifiez\ que\ vous\ g\u00e9rez\ bien\ les\ exceptions.\n=make sure you manage the exceptions.\n

#: m10dem1/src/Tests.java:82
la\ division\ par\ 0\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=the division by 0 does not give the expected result\: \n

#: m10dem1/src/Tests.java:90
le\ parsing\ d''un\ String\ compos\u00e9\ de\ lettres\ ne\ donne\ pas\ le\ r\u00e9sultat\ attendu\ \:\ \n=the parsing of a String composed of letters does not give the expected result\: \n

#: m10dem1/src/TestOut.java:49
!tous\ les\ arguments\ ne\ sont\ pas\ v\u00e9rifi\u00e9s\ \!\ Appelez\ divise\ avec\ tous\ les\ arguments\ \!\n=

#: m10dem2/src/TestContenuFichier.java:47
Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs\ ou\ vous\ ne\ fermez\ votre\ flux.\n=You do not write all the first n positive integers or you do not close your stream.\n

#: m10dem2/src/TestContenuFichier.java:48
Vous\ n'\u00e9crivez\ pas\ tous\ les\ n\ premiers\ entiers\ positifs=You do not write all the first n positive integers

#: m10dem2/src/TestContenuFichier.java:49
Vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=You write more than one integer per line.\n

#: m10dem2/src/TestContenuFichier.java:50
vous\ \u00e9crivez\ plus\ d'un\ entier\ par\ ligne.\n=you write more than one integer per line.\n

#: m10dem2/src/TestContenuFichier.java:118
\ et\ =\ and 

#: m10dem2/src/TestValeurRetour.java:51
La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ il\ y\ a\ une\ IOException.=The return value of your program is not correct in case there is an IOException.

#: m10dem2/src/TestValeurRetour.java:72
La\ valeur\ de\ retour\ de\ votre\ programme\ n'est\ pas\ correcte\ dans\ le\ cas\ o\u00f9\ tout\ se\ d\u00e9roule\ bien.=The return value of your program is not correct in the event that everything runs smoothly.

#: m11Q1/Templates/PileInt.java:99 m11Q2/Templates/Pile.java:110
Pile\ vide\n=Empty stack\n

#: m11Q1/Templates/PileInt.java:107 m11Q2/Templates/Pile.java:118
Attention\ \:\ votre\ pile\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ pile\ provoque\ une\ boucle\ infinie\u2026=Be careful\: your stack is badly formed. Go through your stack causes an infinite loop \u2026

#: m11Q1/Templates/PileInt.java:109
#, java-format
Sommet\ \:\ Noeud[{0}]\nProfondeur\ \:\ {1}\n=Top\: Node[{0}]\nDepth\: {1}\n

#: m11Q1/Templates/PileInt.java:113 m11Q2/Templates/Pile.java:124
#: m11Q3/Templates/FIFOQueue.java:118 m11Q6/Templates/Liste.java:143
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ Noeud[{2}]\n=Node[{0}]\: content\: {1}, next node\: Node[{2}]\n

#: m11Q1/Templates/PileInt.java:116 m11Q2/Templates/Pile.java:127
#: m11Q3/Templates/FIFOQueue.java:121 m11Q6/Templates/Liste.java:146
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ suivant\ \:\ null\n=Node[{0}]\: content\: {1}, next node\: null\n

#: m11Q1/Templates/PileInt.java:120
#, java-format
Attention\ \:\ la\ variable\ d''instance\ ''{0}''\ ({1})\ ne\ correspond\ pas\ au\ nombre\ d''entiers\ sur\ la\ pile.\n=Be careful\: the instance variable ''{0}'' ({1}) does not match the number of integers on the stack.\n

#: m11Q1/src/Tests.java:40 m11Q2/src/Tests.java:40
#, java-format
Vous\ ne\ retournez\ pas\ le\ bon\ sommet\ de\ la\ pile.\ Quand\ le\ sommet\ est\ {0},\ votre\ m\u00e9thode\ pop()\ retourne\ {1}=You do not return the correct top of the stack. When the top is {0}, your pop() method returns {1}

#: m11Q1/src/Tests.java:41 m11Q2/src/Tests.java:41
Voici\ l'\u00e9volution\ de\ votre\ pile\ durant\ les\ tests\ afin\ que\ vous\ puissiez\ corriger\ votre\ code\ \:\n\n=Here is the evolution of your stack during the tests so that you can correct your code\:\n\n

#: m11Q1/src/Tests.java:55
Lorsque\ l'on\ ex\u00e9cute\ votre\ m\u00e9thode\ pop()\ sur\ une\ pile\ vide,\ elle\ ne\ lance\ pas\ l'exception\ IllegalStateException.\n=When we run your pop() method on an empty stack, it does not throw the IllegalStateException exception.\n

#: m11Q1/src/Tests.java:79 m11Q1/src/Tests.java:85
Le\ sommet\ de\ votre\ pile\ vaut\ null\ apr\u00e8s\ un\ push().\n=The top of your stack is null after a push().\n

#: m11Q1/src/Tests.java:80
L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 4\ apr\u00e8s\ un\ push(4).\n=The element on the top of your stack is not 4 after a push(4).\n

#: m11Q1/src/Tests.java:81
La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 1\ apr\u00e8s\ un\ push().\n=The depth() method does not return 1 after a push().\n

#: m11Q1/src/Tests.java:86
L'\u00e9l\u00e9ment\ au\ sommet\ de\ votre\ pile\ ne\ vaut\ pas\ 6\ apr\u00e8s\ un\ push(6).\n=The element on the top of your stack is not 6 after a push(6).\n

#: m11Q1/src/Tests.java:87
La\ m\u00e9thode\ depth()\ ne\ retourne\ pas\ 2\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=The depth() method does not return 2 after calling twice the push() method.\n

#: m11Q1/src/Tests.java:88
Le\ noeud\ suivant\ du\ sommet\ vaut\ null\ apr\u00e8s\ avoir\ effectu\u00e9\ 2\ fois\ la\ m\u00e9thode\ push().\n=The next node of the top is null after calling twice the push() method.\n

#: m11Q1/src/Tests.java:89
L'\u00e9l\u00e9ment\ suivant\ du\ sommet\ (l'\u00e9l\u00e9ment\ tout\ en\ dessous\ de\ la\ pile)\ ne\ vaut\ pas\ 4\ apr\u00e8s\ avoir\ effectu\u00e9\ push(4)\ suivi\ d'un\ push(6).\n=The next element of the top (the element below the stack) is not worth 4 after a push(4) followed by a push(6).\n

#: m11Q1/src/Tests.java:142 m11Q2/src/Tests.java:134
Pile\ apr\u00e8s\ l'op\u00e9ration\ \:\ =Stack after the operation\: 

#: m11Q1/src/Tests.java:166 m11Q2/src/Tests.java:155
Cette\ erreur\ est\ survenue\ quand\ la\ pile\ est\ \:\n=This error occurred when the stack is\:\n

#: m11Q2/Templates/Pile.java:120
#, java-format
Sommet\ \:\ Noeud[{0}]\n=Top\: Node[{0}]\n

#: m11Q2/src/Tests.java:75
#, java-format
Votre\ m\u00e9thode\ depth()\ retourne\ {0}\ alors\ que\ la\ v\u00e9ritable\ profondeur\ est\ {1}.\ Voici\ la\ pile\ \:\n\n{2}=Your method depth() returns {0} while the true depth is {1}. Here is the stack\:\n\n{2}

#: m11Q2/src/Tests.java:79
Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ pile.\ C'est\ inacceptable.=Your method has changed the stack. This is unacceptable.

#: m11Q2/src/Tests.java:93
Votre\ m\u00e9thode\ pop()\ doit\ retourner\ null\ si\ la\ pile\ est\ vide.\n=Your pop() method should returns null when the stack is empty.\n

#: m11Q3/Templates/FIFOQueue.java:95 m11Q4/Templates/Queue.java:109
Queue\ vide\n=Empty queue\n

#: m11Q3/Templates/FIFOQueue.java:97 m11Q4/Templates/Queue.java:111
#: m11Q5/Templates/OrderedList.java:132 m11Q5/Templates/OrderedList.java:134
#, java-format
Attention\ ''{0}''\ pointe\ vers\ null\ mais\ pas\ ''{1}''\ \!\n=Warning ''{0}'' points to null but not ''{1}''\!\n

#: m11Q3/Templates/FIFOQueue.java:105 m11Q4/Templates/Queue.java:119
Attention\ \:\ votre\ queue\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ queue\ provoque\ une\ boucle\ infinie\u2026\n=Be careful\: your queue is badly formed. Go through your queue causes an infinite loop \u2026\n

#: m11Q3/Templates/FIFOQueue.java:107 m11Q4/Templates/Queue.java:121
#, java-format
Entr\u00e9e\ \:\ Noeud[{0}]\n=Entry\: Node[{0}]\n

#: m11Q3/Templates/FIFOQueue.java:110 m11Q4/Templates/Queue.java:124
#, java-format
Attention\ \:\ ''{0}''\ pointe\ vers\ un\ noeud\ non\ pr\u00e9sent\ dans\ la\ queue\ \!\n=Warning\: ''{0}'' points to a node not present in the queue\!\n

#: m11Q3/Templates/FIFOQueue.java:112 m11Q4/Templates/Queue.java:126
#, java-format
Sortie\ \:\ Noeud[{0}]\n=Exit\: Node[{0}]\n

#: m11Q3/Templates/FIFOQueue.java:114 m11Q4/Templates/Queue.java:128
#, java-format
Attention\ ''{0}''\ pointe\ vers\ null\ \!\n=Warning ''{0}'' points to null\!\n

#: m11Q3/src/Tests.java:40 m11Q4/src/Tests.java:96
Quand\ la\ queue\ est\ vide,\ vous\ devez\ retourner\ null.\n=When the queue is empty, you must return null.\n

#: m11Q3/src/Tests.java:56
Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ retournez\ null\ \!\n=When the queue contains only one element, you return null\!\n

#: m11Q3/src/Tests.java:57
Quand\ la\ queue\ ne\ contient\ qu'un\ \u00e9l\u00e9ment,\ vous\ vous\ ne\ le\ retournez\ pas\ correctment.\n=When the queue contains only one element, you do not return it correctly.\n

#: m11Q3/src/Tests.java:58 m11Q3/src/Tests.java:59 m11Q4/src/Tests.java:115
#: m11Q4/src/Tests.java:116
#, java-format
Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ queue\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=You did not set the variable ''{0}'' to null when the queue contains a single element and is removed.\n

#: m11Q3/src/Tests.java:97 m11Q4/src/Tests.java:153
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=You have not properly updated the queue by removing a node from the structure. The queue before the operation removes() is\:\n{0}\nThe expected queue is\:\n{1}\nYour queue is\:\n{2}

#: m11Q3/src/Tests.java:98 m11Q4/src/Tests.java:154 m11Q5/src/Tests.java:158
#, java-format
Vous\ avez\ retourn\u00e9\ {0}\ alors\ que\ la\ r\u00e9ponse\ attendue\ est\ {1}.\ Le\ queue\ est\ \:\n{2}=You returned {0} while the expected answer is {1}. The queue is\:\n{2}

#: m11Q3/src/Tests.java:106 m11Q4/src/Tests.java:162
Cette\ erreur\ est\ survenue\ quand\ la\ queue\ est\ \:\n=This error occurred when the queue is\:\n

#: m11Q4/Templates/Queue.java:131 m11Q4/Templates/Queue.java:132
#: m11Q5/Templates/OrderedList.java:148 m11Q5/Templates/OrderedList.java:149
#, java-format
Noeud[{0}]=Node[{0}]

#: m11Q4/Templates/Queue.java:133 m11Q5/Templates/OrderedList.java:150
#, java-format
Noeud[{0}]\ \:\ contenu\ \:\ {1},\ noeud\ pr\u00e9c\u00e9rent\ \:\ {2},\ noeud\ suivant\ \:\ {3}\n=Node[{0}] \: content \: {1}, preceding node \: {2}, next node \: {3}\n

#: m11Q4/src/Tests.java:53 m11Q4/src/Tests.java:54
#, java-format
Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=When the queue is empty, and we add a node to your queue, ''{0}'' is null whereas it should refer a new node.\n

#: m11Q4/src/Tests.java:55
#, java-format
Quand\ la\ queue\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=When the queue is empty, and we add a node to your queue, ''{0}'' and ''{1}'' do not refer to the same node.\n

#: m11Q4/src/Tests.java:56
Quand\ la\ queue\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ queue,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=When the queue is empty, and you add a node to your queue, this node does not contain the right element.\n

#: m11Q4/src/Tests.java:76
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ queue\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ queue\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ queue\ attendue\ est\ \:\n{1}\nVotre\ queue\ est\ \:\n{2}=You have not properly updated the queue when adding a node in the structure. The queue before the operation ajoute() is\:\n{0}\nThe expected queue is\:\n{1}\nYour queue is\:\n{2}

#: m11Q5/Templates/OrderedList.java:130 m11Q6/Templates/Liste.java:129
Liste\ vide\n=Empty list\n

#: m11Q5/Templates/OrderedList.java:142 m11Q6/Templates/Liste.java:137
Attention\ \:\ votre\ liste\ est\ mal\ form\u00e9e.\ Parcourir\ votre\ liste\ provoque\ une\ boucle\ infinie\u2026\n=Be careful\: your list is badly formed. Go through your list causes an infinite loop \u2026\n

#: m11Q5/Templates/OrderedList.java:144
#, java-format
Min\ \:\ Noeud[{0}]\n=Min \: Node[{0}]\n

#: m11Q5/Templates/OrderedList.java:145
#, java-format
Max\ \:\ Noeud[{0}]\n=Max \: Node[{0}]\n

#: m11Q5/src/Tests.java:53 m11Q5/src/Tests.java:54
#, java-format
Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ vaut\ null\ alors\ qu''il\ devrait\ r\u00e9f\u00e9rer\ un\ nouveau\ noeud.\n=When the list is empty, and we add a node to your list, ''{0}'' is null whereas it should refer to a new node.\n

#: m11Q5/src/Tests.java:55
#, java-format
Quand\ la\ liste\ est\ vide,\ et\ qu''on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ''{0}''\ et\ la\ ''{1}''\ ne\ r\u00e9f\u00e8rent\ pas\ le\ m\u00eame\ noeud.\n=When the list is empty, and we add a node to your list, ''{0}'' and ''{1}'' do not refer to the same node.\n

#: m11Q5/src/Tests.java:56
Quand\ la\ liste\ est\ vide,\ et\ qu'on\ ajoute\ un\ noeud\ \u00e0\ votre\ liste,\ ce\ noeud\ ne\ contient\ pas\ le\ bon\ \u00e9l\u00e9ment.\n=When the list is empty, and we add a node to your list, that node does not contain the correct item.\n

#: m11Q5/src/Tests.java:76
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ ajoutant\ un\ noeud\ dans\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ ajoute()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=You have not properly updated the list when adding a node in the structure. The list before the add() is\:\n{0}\nThe expected list is\:\n{1}\nYour list is\:\n{2}

#: m11Q5/src/Tests.java:102
Vous\ ne\ lancez\ pas\ une\ IllegalStateException\ quand\ on\ essaye\ de\ retirer\ un\ \u00e9l\u00e9ment\ alors\ que\ la\ liste\ est\ vide.\n=You do not throw an IllegalStateException when trying to remove an item while the list is empty.\n

#: m11Q5/src/Tests.java:119 m11Q5/src/Tests.java:120
#, java-format
Vous\ n''avez\ pas\ mis\ la\ variable\ ''{0}''\ \u00e0\ null\ quand\ la\ liste\ contient\ un\ seul\ \u00e9l\u00e9ment\ et\ qu''on\ le\ retire.\n=You did not set the variable ''{0}'' to null when the list contains a single item and is removed.\n

#: m11Q5/src/Tests.java:157
#, java-format
Vous\ n''avez\ pas\ bien\ mis\ \u00e0\ jour\ la\ liste\ en\ retirant\ un\ noeud\ de\ la\ structure.\ La\ liste\ avant\ l''op\u00e9ration\ retire()\ est\ \:\n{0}\nLa\ liste\ attendue\ est\ \:\n{1}\nVotre\ liste\ est\ \:\n{2}=You have not properly updated the list by removing a node from the structure. The list before the operation retire() is\:\n{0}\nThe expected list is\:\n{1}\nYour list is\:\n{2}

#: m11Q5/src/Tests.java:166 m11Q6/src/Tests.java:134
Cette\ erreur\ est\ survenue\ quand\ la\ liste\ est\ \:\n=This error occurred when your list is\:\n

#: m11Q6/Templates/Liste.java:139
#, java-format
T\u00eate\ \:\ Noeud[{0}]\n=Head\: Node[{0}]\n

#: m11Q6/src/Tests.java:81
Vous\ devez\ retourner\ 0\ quand\ la\ liste\ est\ vide.\n=You have to return 0 when the list is empty.\n

#: m11Q6/src/Tests.java:116
Votre\ m\u00e9thode\ a\ modifi\u00e9\ la\ liste.\ C'est\ inacceptable.\n=Your method has changed the list. This is unacceptable.\n

#: m11Q6/src/Tests.java:117
#, java-format
{0}("{1}")\ a\ retourn\u00e9\ {2}\ avec\ la\ liste\ \:\n{3}={0}("{1}") returns {2} with the list\:\n{3}

#: m11Q6/src/Tests.java:126
#, java-format
Vous\ retournez\ {0}\ alors\ qu''il\ faut\ retourner\ {1}\ lors\ de\ l''appel\ de\ {2}("{3}")\ sur\ la\ liste\ \:\n{4}=You returned {0} while you have to return {1} when calling {2}("{3}") on the list\:\n{4}

#: m11Q6/src/Tests.java:129
#, java-format
Votre\ m\u00e9thode\ {0}("{1}")\ ne\ retire\ pas\ correctement\ les\ \u00e9l\u00e9ments.\nLa\ liste\ est\ \:\n{2}\nVotre\ liste\ modifi\u00e9e\ est\ \:\n{3}\nLa\ liste\ attendue\ est\ \:\n{4}=Your method {0}("{1}") does not remove the elements correctly.\nThe list is\:\n{2}\nYour modified list is\:\n{3}\nThe expected list is\:\n{4}

#: mX1Q19/src/Tests.java:33
#, java-format
{1}\ en\ valeur\ absolue\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} in absolute value gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:34
#, java-format
{1}\ arrondi\ au\ dessus\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded above gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:35
#, java-format
{1}\ arrondi\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded gives {2}. However, your code calculates {3}.\n

#: mX1Q19/src/Tests.java:36
#, java-format
{1}\ arrondi\ en\ dessous\ donne\ {2}.\ Cependant,\ votre\ code\ calcule\ {3}.\n={1} rounded below gives {2}. However, your code computes {3}.\n

#: m01Q12/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.max,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m01Q13/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.min,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m01Q5/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ l'op\u00e9rateur\ xor\ (^)\ de\ java,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m02Q1/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ le\ modulo\ de\ java,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m02dem3/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ Math.pow,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: m04Q10/custom_translatable.py:29 m04Q9/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ une\ m\u00e9thode\ de\ parsing\ d\u00e9j\u00e0\ impl\u00e9ment\u00e9e,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04Q6/custom_translatable.py:29 m04Q8/custom_translatable.py:29
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ contains()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04Q8/custom_translatable.py:33
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ la\ m\u00e9thode\ indexOf()\ de\ la\ classe\ String,\ m\u00eame\ en\ commentaires.=It is forbidden to use the contains() method of the String class, even in comments

#: m04dem3/custom_translatable.py:29
!Vous\ n'avez\ pas\ besoin\ de\ l'instruction\ return\ dans\ cet\ exercice\ \!\ Observez\ la\ signature\ de\ votre\ m\u00e9thode.=

#: m04dem4/custom_translatable.py:29
!Vous\ n'utilisez\ pas\ la\ m\u00e9thode\ Character.toUpperCase().=

#: m04dem4/custom_translatable.py:36
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ autre\ chose\ que\ Character.toUpperCase(),\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#: utilities/examples/custom_translatable.py:31
#, fuzzy
!Il\ est\ interdit\ d'utiliser\ ?????,\ m\u00eame\ en\ commentaires.=It is forbidden to use the Math.min() method, even in comments

#. name
#: course.yaml
[CS1-Java]\ Introduction\ \u00e0\ la\ programmation\ avec\ Java=[CS1-Java] Introduction to programming using Java

#. author
#: 105_java/task.yaml 106_java/task.yaml 108_java/task.yaml 111_java/task.yaml
#: 112_java/task.yaml 85_java/task.yaml 88_java/task.yaml m06_bf/task.yaml
!Virginie\ Van\ den\ Schrieck=

#. context
#: 105_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ les\ champs\ ci-dessous\ conform\u00e9ment\ \u00e0\ l'\u00e9nonc\u00e9\ de\ la\ phase\ de\ r\u00e9alisation\ de\ la\ mission\ 7.\n\ \ \ \ </p>\n\n=

#. name
#: 105_java/task.yaml
!Mission\ 7\ \:\ Phase\ de\ r\u00e9alisation=

#. name, ArticleReparation, header
#: 105_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ ArticleReparation\n\ \ \ \ </p>Classe\ ArticleReparation.java,\ \u00e9tendant\ Article\n\n=

#. name, Piece, header
#: 105_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ Piece\n\ \ \ \ </p>Classe\ Piece.java,\ \u00e9tendant\ Article\ \:\n\n=

#. name, ArticlePiece, header
#: 105_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ ArticlePiece\n\ \ \ \ </p>Classe\ ArticlePiece.java,\ \u00e9tendant\ Article\ \:\n\n=

#. name, Facture, header
#: 105_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ Facture,\ avec\ les\ modifications\ et\ les\ m\u00e9thodes\ suppl\u00e9mentaires\ demand\u00e9es\n\ \ \ \ </p>Classe\ Facture.java\ \:\n\n=

#. context
#: 106_java/task.yaml
#, python-format
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ On\ vous\ demande\ d'\u00e9crire\ deux\ classes,\ Temps\ et\ Chanson.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ La\ classe\ Temps\ repr\u00e9sente\ un\ temps\ d\u00e9compos\u00e9\ en\ heures,\ minutes\ et\ secondes.\ Elle\ doit\ poss\u00e9der\ les\ m\u00e9thodes\ suivantes\ \:\n\ \ \ \ </p>\n\ \ \ \ <ul>\n\ \ \ \ \ \ <li>public\ Temps(int\ h,\ int\ m,\ int\ s),\ avec\ m\ et\ s\ compris\ entre\ 0\ et\ 59)\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ int\ toSecondes(),\ qui\ renvoie\ le\ nombre\ total\ de\ secondes\ pour\ ce\ temps.\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ int\ delta(Temps\ t),\ qui\ retourne\ la\ diff\u00e9rence\ entre\ ce\ temps-ci\ et\ t,\ en\ secondes\ (positif\ si\ ce\ temps-ci\ est\ plus\ grand).\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ boolean\ apres(Temps\ t)\ \:\ renvoie\ true\ si\ ce\ temps-ci\ est\ plus\ grand\ que\ t.\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ void\ ajouter(Temps\ t)\ \:\ ajoute\ t\ \u00e0\ ce\ temps-ci.\ Corrige\ de\ mani\u00e8re\ \u00e0\ ce\ que\ les\ minutes\ et\ les\ secondes\ soient\ dans\ l\u2019intervalle\ [0\ .\ .\ .\ 59],\ en\ reportant\ au\ besoin\ les\ valeurs\ hors\ limites\ sur\ les\ unit\u00e9s\ sup\u00e9rieures\ (60\ secondes\ \=\ 1\ minute,\ 60\ minutes\ \=\ 1\ heure).\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ String\ toString()\ \:\ retourne\ ce\ temps\ sous\ la\ forme\ de\ texte\ \u201cheures\ \:minutes\ \:secondes\u201d.\ Astuce\ \:\ la\ m\u00e9thode\ String.format("%02d\:%02d\:%02d",\ heures,\ minutes,\ secondes)\ retourne\ le\ String\ d\u00e9sir\u00e9\ avec\ les\ nombres\ en\ deux\ chiffres\ en\ ajoutant\ les\ z\u00e9ros\ n\u00e9cessaires.\n\ \ \ \ \ \ </li>\n\ \ \ \ </ul>\n\ \ \ \ <p>\n\ \ \ \ \ \ La\ classe\ Chanson,\ quant\ \u00e0\ elle,\ repr\u00e9sente\ une\ chanson\ caract\u00e9ris\u00e9e\ par\ un\ titre\ (String),\ un\ auteur\ (String),\ et\ une\ dur\u00e9e\ (Temps).\ Ses\ m\u00e9thodes\ sont\ les\ suivantes\ \:\n\ \ \ \ </p>\n\ \ \ \ <ul>\n\ \ \ \ \ \ <li>public\ Chanson(String\ t,\ String\ a,\ Temps\ d);\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ String\ getTitre()\ \:\ renvoie\ le\ titre\ de\ la\ chanson\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ String\ getAuteur()\ \:\ retourne\ l'auteur\ de\ cette\ chanson\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ Temps\ getDuree()\ \:\ retourne\ la\ dur\u00e9e\ de\ cette\ chanson\n\ \ \ \ \ \ </li>\n\ \ \ \ \ \ <li>public\ String\ toString()\ \:\ retourne\ un\ String\ d\u00e9criant\ cette\ chanson\ sous\ le\ format\ TITRE\ -\ AUTEUR\ -\ DUREE\n\ \ \ \ \ \ </li>\n\ \ \ \ </ul>\n\n=

#. name
#: 106_java/task.yaml
!Mission\ 6\ \:\ Phase\ de\ r\u00e9alisation=

#. name, temps, header
#: 106_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ Temps\n\ \ \ \ </p>public\ class\ Temps\n\n=

#. name, chanson, header
#: 106_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ Chanson\n\ \ \ \ </p>public\ class\ Chanson\n\n=

#. context
#: 108_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ les\ champs\ ci-dessous\ conform\u00e9ment\ \u00e0\ l'\u00e9nonc\u00e9\ de\ la\ phase\ de\ r\u00e9alisation\ de\ la\ mission\ 9.\n\ \ \ \ </p>\n\n=

#. name
#: 108_java/task.yaml
!Mission\ 9\ \:\ Phase\ de\ r\u00e9alisation=

#. name, word, header
#: 108_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ votre\ classe\ Word\n\ \ \ \ </p>Word.java\ \:\n\n=

#. name, dictionary, header
#: 108_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ votre\ classe\ Dictionary\n\ \ \ \ </p>Dictionary.java\ \:\n\n=

#. name, dico, header
#: 108_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ votre\ classe\ Dico\n\ \ \ \ </p>Dico.java\ \:\n\n=

#. context
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ les\ champs\ ci-dessous\ conform\u00e9ment\ \u00e0\ l'\u00e9nonc\u00e9\ de\ la\ phase\ de\ r\u00e9alisation\ de\ la\ mission\ 3.\n\ \ \ \ </p>\n\n=

#. name
#: 111_java/task.yaml
!NON\ Mission\ 3\ \:\ Phase\ de\ r\u00e9alisation=

#. name, average, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ m\u00e9thode\ average\n\ \ \ \ </p>public\ static\ double\ average(double\ a,\ double\ b,\ double\ c)\n\n=

#. name, minimum, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ m\u00e9thode\ minimum\n\ \ \ \ </p>public\ static\ double\ minimum(double\ a,\ double\ b,\ double\ c)\n\n=

#. name, maximum, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ m\u00e9thode\ maximum\n\ \ \ \ </p>public\ static\ double\ maximum(double\ a,\ double\ b,\ double\ c)\n\n=

#. name, median, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ m\u00e9thode\ median\n\ \ \ \ </p>public\ static\ double\ median(double\ a,\ double\ b,\ double\ c)\n\n=

#. name, sublime, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ m\u00e9thode\ sublime\n\ \ \ \ </p>public\ static\ boolean\ sublime(int\ n)\n\n=

#. name, sub_help, header
#: 111_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Si\ vous\ souhaitez\ ajouter\ des\ m\u00e9thodes\ r\u00e9solvant\ des\ sous-probl\u00e8mes,\ \u00e9crivez-les\ ici\n\ \ \ \ </p>\n\n=

#. context
#: 112_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ la\ classe\ BioInfo\ conform\u00e9ment\ \u00e0\ l'\u00e9nonc\u00e9\ de\ la\ phase\ de\ r\u00e9alisation\ de\ la\ mission\ 4.\n\ \ \ \ </p>\n\n=

#. name
#: 112_java/task.yaml
!DELETE\ Mission\ 4\ \:\ Phase\ de\ r\u00e9alisation=

#. name, bioinfo, header
#: 112_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Ecrivez\ ici\ le\ code\ de\ la\ classe\ BioInfo\n\ \ \ \ </p>Classe\ BioInfo.java\ \:\n\n=

#. author
#: 14_java/task.yaml m07_bf/task.yaml
!S\u00e9bastien\ Comb\u00e9fis=

#. context
#: 14_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ ici\ le\ corps\ de\ la\ classe\ <code>Stack</code>\ qui\ doit\ impl\u00e9menter\ l'interface\ <code>StackIF.java</code>.\ Vous\ devez\ mettre\ un\ constructeur\ qui\ ne\ prend\ aucun\ param\u00e8tre.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Pour\ rappel,\ voici\ l'interface\ <code>StackIF</code>\ \:\n\ \ \ \ </p>\n\ \ \ \ <pre\ class\="code">\n\ \ \ \ public\ interface\ StackIF\n\ \ \ \ {\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ c\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ L'\u00e9tat\ c\ a\ \u00e9t\u00e9\ ajout\u00e9\ au\ sommet\ de\ cette\ pile\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ void\ push\ (State\ c);\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ La\ valeur\ renvoy\u00e9e\ contient\ l'\u00e9tat\ se\ trouvant\ au\ sommet\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ de\ cette\ pile.\ Cet\ \u00e9tat\ est\ par\ ailleurs\ retir\u00e9\ de\ cette\ pile.\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Si\ cette\ pile\ est\ vide,\ g\u00e9n\u00e8re\ une\ EmptyStackException.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ State\ pop()\ throws\ EmptyStackException;\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ La\ valeur\ renvoy\u00e9e\ contient\ le\ nombre\ d'\u00e9l\u00e9ments\ de\ cette\ pile.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ int\ size();\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ La\ valeur\ renvoy\u00e9e\ contient\ true\ si\ cette\ pile\ est\ vide,\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ false\ sinon.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ boolean\ isEmpty();\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ 0\ &lt;\=\ n\ &lt;\ size()\n\ \ \ \ \ \ \ \ *\ @post\ La\ valeur\ renvoy\u00e9e\ contient\ le\ n-i\u00e8me\ \u00e9l\u00e9ment\ de\ cette\ pile,\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ l'\u00e9l\u00e9ment\ au\ sommet\ \u00e9tant\ celui\ d'indice\ 0.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ State\ peek\ (int\ n);\n\ \ \ \ }\n\ \ \ \ </pre>\n\n=

#. name
#: 14_java/task.yaml
!Mission\ 11\:\ Structures\ chain\u00e9es=

#. name, q1, header
#: 14_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ le\ corps\ de\ la\ classe\ suivante\ (vous\ ne\ devez\ pas\ mettre\ les\ accolades\ de\ la\ classe).\n\ \ \ \ </p>public\ class\ Stack\ implements\ StackIF\n\n=

#. context
#: 85_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ On\ souhaite\ compter\ le\ nombre\ d'entiers\ positifs\ compris\ entre\ deux\ bornes\ a\ et\ b,\ non\ incluses.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Vous\ devez\ d\u00e9finir\ la\ m\u00e9thode\ <code>countPosIntBetween</code>\ qui\ compte\ le\ nombre\ d'entiers\ compris\ entre\ les\ deux\ param\u00e8tres\ entiers\ a\ et\ b,\ non\ inclus.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Par\ exemple,\ le\ nombre\ d'entiers\ positifs\ compris\ entre\ -1\ et\ 2,\ bornes\ non\ incluses,\ sera\ \u00e9gal\ \u00e0\ 2.\n\ \ \ \ </p>\n\n=

#. name
#: 85_java/task.yaml
!Mission\ 3\:\ Exercice\ compl\u00e9mentaire\ 1=

#. name, q1, header
#: 85_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ <code>countPosIntBetween</code>\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n\ \ \ \ </p>public\ static\ int\ countPosIntBetween\ (int\ a,\ int\ b)\n\n=

#. author
#: 87_java/task.yaml
!Virginie\ Van\ den\ Schreick=

#. context
#: 87_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ Un\ palindrome\ est\ un\ mot\ dont\ l\u2019ordre\ des\ caract\u00e8res\ reste\ le\ m\u00eame\ qu\u2019on\ le\ lise\ de\ gauche\ \u00e0\ droite\ ou\ de\ droite\ \u00e0\ gauche,\ comme\ radar\ ou\ kayak.\ Votre\ objectif\ dans\ cet\ exercice\ est\ de\ trouver\ le\ plus\ long\ palindrome\ contenu\ dans\ une\ cha\u00eene\ de\ caract\u00e8res,\ et\ d'en\ renvoyer\ la\ longueur.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ D\u00e9tecter\ le\ plus\ long\ palindrome\ dans\ une\ cha\u00eene\ de\ caract\u00e8res\ est\ un\ probl\u00e8me\ compliqu\u00e9.\ En\ informatique,\ lorsqu'on\ est\ face\ \u00e0\ un\ probl\u00e8me\ compliqu\u00e9,\ la\ meilleure\ approche\ pour\ le\ r\u00e9soudre\ est\ de\ le\ d\u00e9couper\ en\ petits\ probl\u00e8mes\ plus\ simples.\ Il\ suffit\ ensuite\ d'\u00e9crire\ une\ m\u00e9thode\ pour\ r\u00e9soudre\ chaque\ sous-probl\u00e8me,\ et\ de\ combiner\ ces\ m\u00e9thodes\ pour\ r\u00e9soudre\ le\ probl\u00e8me\ compliqu\u00e9.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Pour\ rechercher\ le\ plus\ long\ palindrome,\ une\ piste\ est\ d'abord\ d'\u00e9crire\ une\ m\u00e9thode\ permettant\ d'extraire\ d'une\ cha\u00eene\ de\ caract\u00e8res\ de\ longueur\ n\ les\ sous-cha\u00eenes\ de\ longueur\ n-1,\ n-2,\ etc.\ Notez\ que\ la\ classe\ String\ contient\ des\ m\u00e9thodes\ qui\ pourraient\ vous\ aider\ pour\ cela.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Vous\ devez\ donc\ \u00e9crire\ une\ m\u00e9thode\ dont\ la\ sp\u00e9cification\ est\ la\ suivante\ \:\n\ \ \ \ </p>\n\ \ \ \ <pre\ class\="code">\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\ s\ \!\=\ null\n\ \ \ \ \ *\n\ \ \ \ \ *\ @post\ retourne\ la\ longueur\ du\ plus\ long\ palindrome\ trouv\u00e9\ dans\ s.\n\ \ \ \ \ */\n\ \ \ \ <b>public\ static\ int</b>\ longueurPlusLongPalindrome(String\ s);\n\ \ \ \ </pre>\n\ \ \ \ <p>\n\ \ \ \ \ \ \u00c0\ titre\ d\u2019exemple,\ le\ code\ ci-dessous\ \:\n\ \ \ \ </p>\n\ \ \ \ <pre\ class\="code">\n\ \ \ \ System.out.println\ (longueurPluslongPalindrome\ ("KAYAKAK"));\n\ \ \ \ System.out.println\ (longueurPluslongPalindrome\ ("AVABCD"));\n\n\ \ \ \ </pre>\n\ \ \ \ <p>\n\ \ \ \ \ \ Affiche\ les\ valeurs\ 5\ et\ 3.\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Pour\ r\u00e9soudre\ ce\ probl\u00e8me,\ pensez\ \u00e0\ la\ d\u00e9couper\ en\ sous-probl\u00e8mes\ et\ n\u2019h\u00e9sitez\ pas\ \u00e0\ utiliser\ une\ ou\ plusieurs\ m\u00e9thodes\ priv\u00e9es\ suppl\u00e9mentaires.\n\ \ \ \ </p>\n\n=

#. name
#: 87_java/task.yaml
!Mission\ 4\ \:\ Recherche\ du\ plus\ long\ palindrome=

#. name, q1, header
#: 87_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ <code>count</code>\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n\ \ \ \ </p>public\ static\ int\ longueurPlusLongPalindrome\ (String\ s)\n\n=

#. name, subproblems, header
#: 87_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ D\u00e9clarez\ ici\ les\ m\u00e9thodes\ priv\u00e9es\ que\ vous\ souhaitez\ utiliser\ pour\ d\u00e9composer\ le\ probl\u00e8me\ en\ sous-probl\u00e8mes.\ Attention,\ veillez\ \u00e0\ n'utiliser\ que\ des\ m\u00e9thodes\ de\ classe\ (<code>static</code>).\n\ \ \ \ </p>\n\n=

#. context
#: 88_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p>\n\ \ \ \ \ \ On\ souhaite\ compter\ le\ nombre\ d'entiers\ distincts\ parmi\ une\ s\u00e9rie\ de\ cinq\ entiers\n\ \ \ \ </p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Vous\ devez\ d\u00e9finir\ la\ m\u00e9thode\ <code>countDistinctInt</code>\ qui\ compte\ le\ nombre\ d'entiers\ uniques\ parmi\ les\ cinq\ param\u00e8tres\ a,\ b,\ c,\ d\ et\ e\n\ \ \ \ </p>\n\n=

#. name
#: 88_java/task.yaml
!Mission\ 3\ \:\ Exercice\ compl\u00e9mentaire\ 2=

#. name, q1, header
#: 88_java/task.yaml
!..\ raw\:\:\ html\n\n\ \ \ \ <p\ class\='lead'></p>\n\ \ \ \ <p>\n\ \ \ \ \ \ Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ <code>countDistinctInt</code>\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n\ \ \ \ </p>public\ static\ int\ countDistinctInt\ (int\ a,\ int\ b,\ int\ c,\ int\ d,\ int\ e)\n\n=

#. author
#: m01Q10/task.yaml m01Q12/task.yaml m01Q13/task.yaml m01Q14/task.yaml
#: m01Q15/task.yaml m01Q16/task.yaml m01Q17/task.yaml m03Q3/task.yaml
#: m03Q5/task.yaml m03Q6/task.yaml m03Q7/task.yaml m03dem4/task.yaml
!Ludovic\ Taffin,\ Olivier\ Martin=

#. context
#: m01Q10/task.yaml
!``a``,\ ``b``\ et\ ``c``\ sont\ des\ variables\ contenant\ un\ entier.\ Ecrivez\ le\ code\ permettant\ de\ placer\ la\ valeur\ ``true``\ dans\ la\ variabe\ bool\u00e9enne\ ``ordonne``\ si\ ``a\ <\ b\ <\ c``\ et\ ``false``\ sinon.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ boolean\ ordonne;\ //\ la\ variable\ \u00e0\ changer\ (true/false)\n\ \ \ \ int\ a;\n\ \ \ \ int\ b;\n\ \ \ \ int\ c;=

#. name
#: m01Q10/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Ordonne=Assignment 1 \: Additional question \: Sorted

#. name, q1, name
#: m01Q10/task.yaml
!Les\ valeurs\ sont-elles\ ordonn\u00e9es\ ?=

#. author
#: m01Q11/task.yaml
!Ludovic\ Taffin,\ Naitali\ Brandon=

#. context
#: m01Q11/task.yaml
!Les\ variables\ ``a``,\ ``b``\ et\ ``c``\ contiennent\ des\ nombres\ r\u00e9els.\ Placez\ dans\ la\ variable\ ``moyenne``\ la\ moyenne\ arithm\u00e9tique\ entre\ ces\ trois\ nombres.\ Si\ vous\ avez\ un\ doute\ sur\ la\ d\u00e9finition\ de\ cette\ moyenne,\ consultez\ `sa\ page\ sur\ wikip\u00e9dia\ <https\://fr.wikipedia.org/wiki/Moyenne_arithm%C3%A9tique>`_\n\n..\ code-block\:\:\ java\n\n\n\ \ \ \ double\ moyenne;\ //\ le\ r\u00e9sultat\ de\ la\ moyenne\n\ \ \ \ double\ a;\n\ \ \ \ double\ b;\n\ \ \ \ double\ c;=

#. name
#: m01Q11/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Moyenne=Assignment 1 \: Additional question \: Mean value

#. name, q1, name
#: m01Q11/task.yaml
!Calcul\ de\ moyenne\ de\ 3\ nombres=

#. context
#: m01Q12/task.yaml
!Les\ variables\ ``a``,\ ``b``\ et\ ``c``\ contiennent\ un\ entier.\ Ecrivez\ le\ code\ Java\ permettant\ de\ stocker\ dans\ la\ variable\ ``maximum``\ le\ plus\ grand\ de\ ces\ trois\ nombres.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ a;\n\ \ \ \ int\ b;\n\ \ \ \ int\ c;\n\ \ \ \ int\ maximum;\ //\ le\ plus\ grand\ parmi\ a,\ b,\ c=

#. name
#: m01Q12/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Maximum=Assignment 1 \: Additional question \: Maximum value

#. name, q1, name
#: m01Q12/task.yaml
#, fuzzy
!Calcul\ le\ nombre\ le\ plus\ grand=Your code does not display the largest number.\n

#. context
#: m01Q13/task.yaml
!Les\ variables\ ``a``,\ ``b``,\ ``c``\ et\ ``d``\ contiennent\ chacune\ un\ nombre\ entier.\ Ecrivez\ le\ code\ permettant\ de\ placer\ dans\ la\ variable\ ``min``\ le\ minimum\ entre\ ces\ quatre\ nombres.\n\n..\ code-block\:\:\ java\n\n\n\ \ \ \ int\ a;\n\ \ \ \ int\ b;\n\ \ \ \ int\ c;\n\ \ \ \ int\ d;\n\ \ \ \ int\ min;\ //\ le\ plus\ petit\ parmi\ a,\ b,\ c,\ d=

#. name
#: m01Q13/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Minimum=Assignment 1 \: Additional question \: Minimum value

#. name, q1, name
#. name, q6, name
#: m01Q13/task.yaml m01_qcm/task.yaml
!Calcul\ du\ minimum=

#. context
#: m01Q14/task.yaml
!Les\ variables\ ``a``,``b``\ et\ ``c``\ contiennent\ des\ entiers.\ Placez\ dans\ la\ variable\ ``count``\ le\ nombre\ d'entiers\ distincts.\n\nPar\ exemple,\ si\ ``a``\ vaut\ ``3``,\ ``b``\ vaut\ ``5``\ et\ ``c``\ vaut\ ``3``,\ alors\ ``count``\ contiendra\ la\ valeur\ ``2``.\ Lorsque\ toutes\ les\ variables\ contiennent\ la\ m\u00eame\ valeur,\ ``count``\ doit\ valoir\ ``1``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ count;\ //\ le\ nombre\ d'entiers\ diff\u00e9rents\n\ \ \ \ int\ a;\n\ \ \ \ int\ b;\n\ \ \ \ int\ c;=

#. name
#: m01Q14/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Compteur\ de\ diff\u00e9rence=Assignment 1 \: Additional question \: Distinct values

#. name, q1, name
#: m01Q14/task.yaml
!Calcul\ le\ nombre\ d'entiers\ diff\u00e9rents=

#. context
#: m01Q15/task.yaml
!Connaissant\ une\ date\ (``jour``/``mois``)\ de\ l'ann\u00e9e\ 2016,\ placez\ dans\ la\ variable\ ``saison``\ le\ nom\ de\ la\ saison\ correspondante.\ Pour\ rappel,\ en\ 2016\ les\ saisons\ officielles\ commen\u00e7aient\ aux\ dates\ suivantes\ \:\n\n-\ le\ printemps\ le\ dimanche\ 20\ mars\ 2016\n-\ l\u2019\u00e9t\u00e9\ le\ lundi\ 20\ juin\ 2016\n-\ l\u2019automne\ le\ jeudi\ 22\ septembre\ 2016\n-\ l\u2019hiver\ le\ mercredi\ 21\ d\u00e9cembre\ 2016\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ jour;\ //\ le\ jour\n\ \ \ \ int\ mois;\ //\ le\ mois\n\ \ \ \ String\ saison;\ //\ le\ nom\ de\ la\ saison\ (automne,\ hiver,\ printemps,\ \u00e9t\u00e9)=

#. name
#: m01Q15/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ S\u00e9lecteur\ de\ saison=Assignment 1 \: Additional question \: Seasons

#. name, q1, name
#: m01Q15/task.yaml
!Calcul\ de\ la\ saison\ d'une\ date\ donn\u00e9e=

#. context
#: m01Q16/task.yaml
!Dans\ un\ programme\ g\u00e9rant\ une\ horloge,\ vous\ devez\ calculer\ le\ nombre\ de\ secondes\ qui\ se\ sont\ \u00e9coul\u00e9es\ depuis\ minuit.\ Placer\ le\ r\u00e9sultat\ de\ votre\ calcul\ dans\ la\ variable\ ``total``.\n\nExemple\ \:\ 22h14m12s\ \=\ 80052s\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ heure;\ //\ le\ nombre\ d'heures\n\ \ \ \ int\ minute;\ //\ le\ nombre\ de\ minutes\n\ \ \ \ int\ seconde;\ //\ le\ nombre\ de\ secondes\n\ \ \ \ int\ total\ \=\ 0;\ //\ le\ nombre\ de\ secondes\ depuis\ minuit=

#. name
#: m01Q16/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Nombre\ de\ secondes\ depuis\ minuit=Assignment 1 \: Additional question \: Elapsed seconds since midnight

#. name, q1, name
#: m01Q16/task.yaml
!Calcul\ du\ nombre\ de\ secondes\ depuis\ minuit=

#. context
#: m01Q17/task.yaml
!Ecrivez\ un\ programme\ qui\ place\ la\ valeur\ ``true``\ dans\ la\ variable\ ``resultat``\ si\ ``annee``\ correspond\ \u00e0\ une\ ann\u00e9e\ bissextile\ et\ ``false``\ sinon.\n\nPour\ rappel,\ une\ ann\u00e9e\ sera\ `bissextile\ <https\://fr.wikipedia.org/wiki/Ann\u00e9e_bissextile>`_\ \:\n\ -\ si\ l'ann\u00e9e\ est\ divisible\ par\ 4\ et\ non\ divisible\ par\ 100,\ ou\n\ -\ si\ l'ann\u00e9e\ est\ divisible\ par\ 400.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ annee;\ //\ l'ann\u00e9e\ \u00e0\ v\u00e9rifier\n\ \ \ \ boolean\ resultat;=

#. name
#: m01Q17/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Ann\u00e9e\ bissextile=Assignment 1 \: Additional question \: Bissextile year

#. name, q1, name
#: m01Q17/task.yaml
!D\u00e9terminer\ si\ une\ ann\u00e9e\ est\ bissextile=

#. author
#: m01Q18/task.yaml m01Q20/task.yaml m01Q9/task.yaml m02Q7/task.yaml
#: m03Q2/task.yaml m05Q12/task.yaml mX1Q19/task.yaml mX3Q8/task.yaml
#: mX3Q9/task.yaml
!Ludovic\ Taffin=

#. context
#: m01Q18/task.yaml
!Cr\u00e9er\ un\ programme\ permettant\ de\ d\u00e9terminer\ le\ si\u00e8cle\ d'une\ ann\u00e9e.\ Placez\ le\ r\u00e9sultat\ de\ votre\ calcul\ dans\ la\ variable\ ``siecle``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ annee;\ \ //\ l'ann\u00e9e\ \u00e0\ v\u00e9rifier\n\ \ \ \ int\ siecle;\ //\ le\ si\u00e8cle\ de\ l'ann\u00e9e=

#. name
#: m01Q18/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Si\u00e8cle=Assignment 1 \: Additional question \: Century

#. name, q1, name
#: m01Q18/task.yaml
!D\u00e9terminer\ le\ si\u00e8cle\ d'une\ ann\u00e9e=

#. author
#: m01Q2/task.yaml m01Q8/task.yaml
!Fran\u00e7ois\ MICHEL\ &\ Ludovic\ TAFFIN\ &\ Olivier\ Martin=

#. context
#: m01Q2/task.yaml
!La\ police\ vous\ engage\ pour\ d\u00e9velopper\ un\ programme\ permettant\ de\ calculer\ l'amende\ qu'un\ conducteur\ de\ voiture\ devra\ payer\ en\ cas\ d'infraction.\ La\ loi\ stipule\ que\ le\ conducteur\ devra\ payer\ 5\ euros\ par\ km/h\ au-dessus\ de\ la\ vitesse\ maximale\ autoris\u00e9e,\ avec\ un\ minimum\ de\ 12.5\u20ac.\n\nPour\ tout\ d\u00e9passement\ de\ plus\ de\ 10\ km/h,\ l\\'amende\ est\ doubl\u00e9e\ \!\n\nVotre\ programme\ re\u00e7oit\ la\ vitesse\ maximale\ autoris\u00e9e\ et\ la\ vitesse\ r\u00e9elle\ de\ la\ voiture.\nIl\ calcule\ l'\u00e9ventuelle\ amende.\n\n*Exemple*\ \:\n\n-\ Si\ la\ vitesse\ maximum\ est\ de\ 50km/h\ et\ que\ le\ v\u00e9hicule\ roule\ \u00e0\ 62km/h,\ l'amende\ sera\ de\ 12*5*2\=120\u20ac.\n\n-\ Si\ la\ vitesse\ maximum\ est\ de\ 50km/h\ et\ que\ le\ v\u00e9hicule\ roule\ \u00e0\ 56km/h,\ l'amende\ sera\ de\ 6*5\=30\u20ac.\n\n-\ Si\ la\ vitesse\ maximum\ est\ de\ 50km/h\ et\ que\ le\ v\u00e9hicule\ roule\ \u00e0\ 51km/h,\ l'amende\ sera\ de\ 12.5\u20ac.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ double\ vitesseMaximale\ \=\ //\ valeur\ r\u00e9elle\ positive\n\ \ \ \ double\ vitesseVehicule\ \=\ //\ valeur\ r\u00e9elle\ positive\n\ \ \ \ double\ amende\ \=\ 0;\ //\ modifi\u00e9\ par\ votre\ programme\ et\ renvoie\ la\ valeur\ de\ l'amende\n\n=

#. name
#: m01Q2/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Calcul\ d'amende=Assignment 1 \: Additional question \: Speeding fine

#. name, q1, name
#: m01Q2/task.yaml
!Syst\u00e8me\ d'amende=

#. name, q1, header
#: m01Q2/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ l'amende\ \:=

#. context
#: m01Q20/task.yaml
!La\ variable\ ``carac``\ \ contient\ un\ caract\u00e8re\ (chiffre\ ou\ lettre\ minuscule).\ Ecrivez\ le\ code\ Java\ qui\ place\ dans\ la\ variable\ ``retour``,\ la\ cha\u00eene\ de\ caract\u00e8res\ \:\n\n-\ ``chiffre``\ si\ ``carac``\ contient\ un\ chiffre\n-\ ``voyelle``\ si\ ``carac``\ contient\ une\ voyelle\n-\ ``consonne``\ sinon\n\n..\ code-block\:\:\ java\n\n\ \ \ \ char\ carac;\ //\ le\ caract\u00e8re\ \u00e0\ v\u00e9rifier\n\ \ \ \ String\ retour;\ //\ chiffre,\ voyelle\ ou\ consonne=

#. name
#: m01Q20/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Caract\u00e8re=Assignment 1 \: Additional question \: Character

#. name, q1, name
#: m01Q20/task.yaml
!D\u00e9terminer\ si\ un\ caract\u00e8re\ est\ un\ chiffre,\ une\ voyelle,\ une\ consonne=

#. author
#: m01Q3/task.yaml m01Q4/task.yaml m01Q6/task.yaml
!Fran\u00e7ois\ MICHEL\ &\ Ludovic\ TAFFIN\ &\ Olivier\ MARTIN=

#. context
#: m01Q3/task.yaml
!L\\'`indice\ de\ Qu\u00e9telet\ <https\://fr.wikipedia.org/wiki/Indice_de_masse_corporelle>`_,\ utilis\u00e9\ par\ les\ di\u00e9t\u00e9ticiens,\ est\ r\u00e9v\u00e9lateur\ de\ l\\'\u00e9tat\ d'\u2019une\ personne.\n\nUne\ personne\ normale\ devrait\ avoir\ un\ indice\ compris\ entre\ 20\ et\ 25.\ En\ dessous\ de\ 20,\ elle\ est\ consid\u00e9r\u00e9e\ comme\ mince,\ au\ dessus\ de\ 25,\ elle\ a\ un\ embonpoint.\nAu-del\u00e0\ de\ 30,\ elle\ est\ ob\u00e8se\!\n\nCet\ indice\ est\ calcul\u00e9\ comme\ \u00e9tant\ le\ rapport\ entre\ le\ poids\ d'une\ personne,\ exprim\u00e9\ en\ kg\ et\ le\ carr\u00e9\ de\ sa\ taille,\ exprim\u00e9\ en\ m\u00e8tre.\n\nCompl\u00e9tez\ le\ programme\ ci-dessous\ pour\ calculer\ l'indice\ de\ Qu\u00e9telet\ d'un\ personne\ et\ stocker\ dans\ la\ cha\u00eene\ de\ caract\u00e8res\ ``etat``\ la\ valeur\ ``mince``\ pour\ une\ personne\ ayant\ un\ indice\ strictement\ inf\u00e9rieur\ \u00e0\ 20,\ ``normal``\ pour\ une\ personne\ dont\ l'indice\ est\ compris\ entre\ 20\ et\ 25,\ ``embonpoint``\ si\ l'indice\ est\ strictement\ sup\u00e9rieur\ \u00e0\ 25\ et\ inf\u00e9rieur\ ou\ \u00e9gal\ \u00e0\ 30\ et\ ``ob\u00e8se``\ lorsqu'il\ est\ strictement\ sup\u00e9rieur\ \u00e0\ 30\ ...\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ double\ taille;\ //\ taille\ d'une\ personne\ en\ m\n\ \ \ \ int\ poids;\ //\ poids\ d'une\ personne\ en\ kg\n\ \ \ \ String\ etat;\ //\ \u00e9tat\ de\ la\ personne\ (mince,\ normal,\ embonpoint,\ ob\u00e8se)\n\n=

#. name
#: m01Q3/task.yaml
Mission\ 1\:\ Question\ suppl\u00e9mentaire\ \:\ Indice\ de\ Qu\u00e9telet=Assignment 1\: Additional question\: Quetelet index

#. name, q1, name
#: m01Q3/task.yaml
!Indice\ de\ Qu\u00e9telet=

#. name, q1, header
#: m01Q3/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ mettre\ dans\ la\ variable\ ``\u00e9tat``\ l\\'\u00e9tat\ d'une\ personne\ sur\ base\ de\ son\ indice\ de\ Qu\u00e9telet\ \:=

#. context
#: m01Q4/task.yaml
!Une\ autoroute\ \u00e0\ p\u00e9age\ est\ divis\u00e9e\ en\ sections.\ Chaque\ section\ est\ identifi\u00e9e\ par\ un\ entier.\ La\ premi\u00e8re\ section\ a\ le\ num\u00e9ro\ 1,\ le\ suivante\ le\ 2,\ ...\ Les\ v\u00e9hicules\ doivent\ **entrer\ en\ d\u00e9but\ de\ section**\ et\ **sortir\ et\ fin\ de\ section**.\n\nLe\ prix\ \u00e0\ payer\ pour\ un\ v\u00e9hicule\ d\u00e9pend\ du\ nombre\ de\ sections\ parcourues\ \:\ la\ premi\u00e8re\ section\ co\u00fbte\ 1\ euro\ et\ les\ suivantes\ co\u00fbtent\ 50\ centimes.\n\n\u00c9crivez\ un\ programme\ qui\ re\u00e7oit\ la\ section\ d\\'entr\u00e9e\ et\ la\ section\ de\ sortie\ d\\'une\ voiture.\ Il\ place\ ensuite\ dans\ la\ variable\ ``prix``\ le\ montant\ du\ payage.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ sectionEntree\ \=\ //\ le\ point\ d'entr\u00e9e\n\ \ \ \ int\ sectionSortie\ \=\ //\ le\ point\ de\ sortie\n\ \ \ \ double\ prix\ \=\ 0;\ //\ le\ prix\ \u00e0\ payer\n\nExemples\ \:\n\n-\ Si\ ``sectionEntree``\ vaut\ 3\ et\ ``sectionSortie``\ vaut\ 5,\ la\ voiture\ a\ parcouru\ 3\ sections\ (les\ section\ 3,\ 4\ et\ 5),\ donc\ le\ prix\ est\ 2.0\u20ac\ (1\u20ac\ +\ 0.5\u20ac\ +\ 0.5\u20ac).\n\n-\ Si\ ``sectionEntree``\ vaut\ 2\ et\ ``sectionSortie``\ vaut\ 2,\ la\ voiture\ a\ parcouru\ 1\ section\ (la\ section\ 2),\ donc\ le\ prix\ est\ 1\u20ac.=

#. name
#: m01Q4/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Calcul\ de\ prix=Assignment 1 \: Additional question \: Price computation

#. name, q1, name
#: m01Q4/task.yaml
!Autoroute\ \u00e0\ p\u00e9age=

#. name, q1, header
#: m01Q4/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ le\ prix\ \u00e0\ payer\ \:=

#. author
#: m01Q5/task.yaml mX2Q2/task.yaml
!Lucas\ Ody\ &\ Tom\ Rousseaux=

#. context
#: m01Q5/task.yaml
!Le\ `OU\ exclusif\ <https\://fr.wikipedia.org/wiki/Fonction_OU_exclusif>`_\ (XOR\ en\ anglais)\ est\ un\ op\u00e9rateur\ logique\ \u00e0\ l'instar\ du\ "et"\ et\ du\ "ou".\ Il\ vous\ est\ demand\u00e9\ d'impl\u00e9menter\ ce\ XOR,\ sachant\ que,\ pour\ ``a``\ et\ ``b``\ deux\ bool\u00e9ens,\ le\ r\u00e9sultat\ de\ ``a\ XOR\ b``\ est\ ``true``\ si\ un\ et\ un\ seul\ des\ bool\u00e9ens\ est\ ``true``,\ et\ ``false``\ sinon.\n\nPour\ cette\ question,\ il\ est\ conseill\u00e9\ d'utiliser\ les\ instructions\ conditionelles\ et\ les\ expressions\ ``&&``,\ ``||``\ et\ la\ n\u00e9gation\ logique\ ``\!``.\n\nPour\ rappel,\ les\ expressions\ bool\u00e9ennes\ sont\ d\u00e9crites\ dans\ la\ section\ |jn2.5|_\ du\ livre\ et\ l\\'instruction\ conditionelle\ dans\ la\ section\ `3.1\ \:\ Blocks,\ Loops,\ and\ Branches\ <http\://math.hws.edu/javanotes/c3/s1.html>`_\n\n..\ _jn2.5\ \:\ http\://math.hws.edu/javanotes/c2/s5.html\n..\ |jn2.5|\ replace\:\:\ `2.5\ \:\ Details\ of\ Expressions`\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ boolean\ a;\n\ \ \ \ \ boolean\ b;\n\ \ \ \ \ boolean\ xor;\ //\ placer\ dans\ cette\ variable\ votre\ r\u00e9sultat\n=

#. name
#: m01Q5/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ OU\ exclusif=Assignment 1 \: Addition question \: Exclusive OR

#. context
#: m01Q6/task.yaml
!\u00c9crivez\ un\ programme\ qui\ permet\ de\ jouer\ au\ jeu\ du\ `fizzbuzz\ <https\://en.wikipedia.org/wiki/Fizz_buzz>`_\n\nVous\ recevez\ un\ nombre\ (stock\u00e9\ dans\ la\ variable\ ``i``).\n\nNous\ allons\ ici\ impl\u00e9menter\ une\ version\ simplifi\u00e9e\ du\ jeu.\ Pour\ l'entier\ ``i``,\ le\ jeu\ consiste\ en\ \:\n\n-\ On\ stocke\ ``fizz``\ dans\ la\ variable\ ``temp``\ si\ le\ nombre\ est\ divisible\ par\ 3.\n-\ On\ stocke\ ``buzz``\ dans\ la\ variable\ ``temp``\ si\ le\ nombre\ est\ divisible\ par\ 5.\n-\ On\ stocke\ ``fizzbuzz``\ dans\ la\ variable\ ``temp``\ si\ le\ nombre\ est\ divisible\ par\ 3\ et\ par\ 5.\n-\ On\ stocke\ ``non``\ dans\ la\ variable\ ``temp``\ s'il\ n'est\ divisible\ ni\ par\ 3\ ni\ par\ 5.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ i\ \=\ //\ le\ nombre\ \u00e0\ v\u00e9rifier\ (i\ >\=\ 1)\n\ \ \ \ String\ temp\ \=\ ""\ //\ fizz,\ buzz,\ fizzbuzz,\ non\n\n=

#. name
#: m01Q6/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Fizzbuzz=Assignment 1 \: Additional question \: Fizzbuzz

#. name, q1, name
#: m01Q6/task.yaml
!Fizzbuzz=

#. name, q1, header
#: m01Q6/task.yaml
!\u00c9crivez\ le\ programme\ pour\ jouer\ au\ Fizzbuzz=

#. author
#: m01Q7/task.yaml
!Fran\u00e7ois\ MICHEL\ &\ Ludovic\ TAFFIN=

#. context
#: m01Q7/task.yaml
!On\ vous\ demande\ d\\'\u00e9crire\ un\ programme\ permettant\ de\ calculer\ la\ somme\ des\ entiers\ pairs\ entre\ 1\ et\ ``n``\ (inclus).\n\n*Exemple*\ \:\ \ pour\ ``n\=5``\ votre\ programme\ retourner\ 6\ (2+4)\n\nPour\ vous\ aider\ dans\ cette\ t\u00e2che,\ il\ vous\ est\ possible\ d'utiliser\ le\ symbole\ ``%``\ qui\ calcule\ un\ modulo.\n\nVotre\ code\ utilisera\ la\ variable\ ``n``\ et\ placera\ son\ r\u00e9sultat\ dans\ la\ variable\ ``sum``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\ \=\ //\ n\ peut\ prendre\ n'importe\ quelle\ valeur\ sup\u00e9rieure\ \u00e0\ z\u00e9ro\n\ \ \ \ int\ sum\ \=\ 0;\ //\ sum\ est\ la\ variable\ dans\ laquelle\ vous\ devez\ \u00e9crire\ le\ r\u00e9sultat\ final\n\n=

#. name
#: m01Q7/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Somme\ d'entiers\ pairs=Assignment 1 \: Additional question \: Sum of even integers

#. name, q1, name
#: m01Q7/task.yaml
!Somme\ des\ entiers\ pairs\ entre\ 1\ et\ n=

#. name, q1, header
#: m01Q7/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ la\ somme\ des\ entiers\ pairs\ entre\ 0\ et\ n\ \:=

#. context
#: m01Q8/task.yaml
!Consid\u00e9rons\ un\ programme\ utilisant\ trois\ variables\ enti\u00e8res\ \:\ ``int\ a``,\ ``int\ b``,\ ``int\ c``.\n\nComment\ feriez-vous,\ en\ utilisant\ uniquement\ des\ instructions\ conditionelles\ (``if\ (...)\ {...}\ else\ {...}``\ pour\ calculer\ la\ `m\u00e9diane\ <https\://fr.wikipedia.org/wiki/M\u00e9diane_(statistiques)>`_\ de\ ces\ trois\ valeurs.\n\nPour\ rappel,\ la\ m\u00e9diane\ est\ la\ valeur\ qui\ est\ telle\ qu\u2019il\ y\ a\ exactement\ une\ valeurs\ inf\u00e9rieure\ \u00e0\ elle\ et\ une\ valeur\ sup\u00e9rieure\ \u00e0\ elle.\ Les\ instructions\ conditionelles\ sont\ d\u00e9crites\ dans\ la\ section\ `3.1\ \ \ <http\://math.hws.edu/javanotes/c3/s1.html>`_\ du\ livre.\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ a,\ int\ b,\ int\ c;\ //\ Les\ valeurs\ enti\u00e8res\ \u00e0\ comparer\n\ \ \ \ int\ mediane;\ //\ La\ m\u00e9diane\ \u00e0\ d\u00e9terminer\n\n=

#. name
#: m01Q8/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ M\u00e9diane=Assignment 1 \: Additional question \: Median

#. name, q1, name
#: m01Q8/task.yaml m03Q4/task.yaml
!Trouver\ la\ m\u00e9diane\ parmi\ 3\ nombres=

#. name, q1, header
#: m01Q8/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ la\ m\u00e9diane\ \:=

#. context
#: m01Q9/task.yaml
!Mettre\ la\ variable\ ``in``\ \u00e0\ la\ valeur\ ``true``\ si\ ``x``\ se\ trouve\ dans\ l\u2019intervalle\ ferm\u00e9\ \:math\:`[a,b]`\ et\ ``false``\ sinon.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ boolean\ in;\ //\ r\u00e9sultat\ de\ votre\ calcul\ \u00e0\ placer\ ici\n\ \ \ \ int\ x;\ //\ la\ valeur\ \u00e0\ v\u00e9rifier\n\ \ \ \ int\ a;\ //\ borne\ inf\u00e9rieure\ de\ l'intervalle\n\ \ \ \ int\ b;\ //\ borne\ sup\u00e9rieure\ de\ l'intervalle=

#. name
#: m01Q9/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ IN/OUT=Assignment 1 \: Additional question \: IN/OUT

#. name, q1, name
#: m01Q9/task.yaml
!D\u00e9finir\ si\ x\ est\ dans\ ou\ en\ dehors\ de\ l'intervalle.=

#. author
#: m01_bf/task.yaml m02_bf/task.yaml m04_bf/task.yaml
!S\u00e9bastien\ Comb\u00e9fis,\ Olivier\ Martin=

#. context
#: m01_bf/task.yaml
!La\ `suite\ de\ Syracuse\ <https\://fr.wikipedia.org/wiki/Conjecture_de_Syracuse>`_\ est\ une\ suite\ de\ naturels,\ d\u00e9finie\ de\ la\ mani\u00e8re\ suivante.\ Le\ premier\ naturel\ de\ la\ suite\ est\ n'importe\ quel\ naturel\ non-nul,\ que\ nous\ noterons\ \:math\:`s_0`.\ On\ peut\ ensuite\ calculer\ les\ \u00e9l\u00e9ments\ suivants\ de\ la\ suite\ en\ appliquant\ la\ formule\ suivante\ \:\n\n..\ math\:\:\n\n\ \ \ u_{n+1}\=\ \\dfrac{u_n}{2}\ \\mbox{\ si\ }\ u_n\ \\mbox{\ est\ pair,}\n\n\ \ \ u_{n+1}\=\ 3u_n\ +\ 1\ \ \\mbox{\ si\ }\ u_n\ \\mbox{\ est\ impair.}\n\n\nPar\ exemple,\ en\ partant\ de\ 11,\ on\ obtient\ \:\ 11\ 34\ 17\ 52\ 26\ 13\ 40\ 20\ 10\ 5\ 16\ 8\ 4\ 2\ 1\ 4\ 2\u2026\n\nRemarquez\ qu'une\ fois\ que\ le\ nombre\ 1\ est\ atteint,\ la\ suite\ 1\ 4\ 2\ 1\ 4\ 2\u2026\ se\ r\u00e9p\u00e8te\ ind\u00e9finiment.\ La\ conjecture\ de\ Collatz\ est\ l'hypoth\u00e8se\ math\u00e9matique\ selon\ laquelle\ toutes\ les\ suites\ de\ Syracuse\ atteignent\ toujours\ 1,\ peu\ importe\ le\ naturel\ \:math\:`s_0`\ choisi.\ Il\ s'agit\ actuellement\ d\u2019un\ conjecture,\ c\u2019est-\u00e0-dire\ qu\u2019aucune\ preuve\ math\u00e9matique\ n\u2019a\ pu\ \u00eatre\ \u00e9labor\u00e9e.\ Tous\ les\ tests\ effectu\u00e9s\ actuellement\ n'ont\ n\u00e9anmoins\ pas\ permis\ de\ trouver\ un\ \:math\:`s_0`\ tel\ que\ la\ suite\ de\ Syracuse\ en\ d\u00e9coulant\ n'atteigne\ pas\ 1.\n\nAfin\ d'aider\ les\ math\u00e9maticiens\ \u00e0\ \u00e9ventuellement\ trouver\ un\ contre-exemple,\ \u00e9crivez\ un\ programme\ Java\ qui\ permet\ de\ calculer\ la\ suite\ de\ Syracuse\ pour\ n\u2019importe\ quel\ naturel\ non-nul\ \:math\:`s_0`.\ Le\ programme\ s'arr\u00eate\ bien\ entendu\ lorsque\ le\ naturel\ 1\ est\ atteint.\n\nVous\ devez\ afficher\ chaque\ \u00e9l\u00e9ment\ de\ la\ suite\ sur\ la\ sortie\ standard,\ avec\ ``System.out.println()``.\ La\ valeur\ de\ d\u00e9part\ vous\ est\ d\u00e9j\u00e0\ fournie\ et\ se\ trouve\ dans\ une\ variable\ de\ type\ ``int``\ nomm\u00e9e\ ``s0``.=

#. name
#: m01_bf/task.yaml
Mission\ 1\ \:\ Question\ de\ Bilan\ Final=Assignment 1 \: Conclusion

#. name, q1, header
#: m01_bf/task.yaml
!\u00c9crivez\ ici\ directement\ le\ code\ \u00e0\ placer\ dans\ la\ m\u00e9thode\ ``main``.\ Vous\ ne\ devez\ pas\ d\u00e9clarer,\ ni\ initialiser\ la\ variable\ ``s0``\n\n=

#. author
#: m01_qcm/task.yaml m02_qcm/task.yaml m03_qcm/task.yaml m04_qcm/task.yaml
#: m05_qcm/task.yaml m06_qcm/task.yaml m07_qcm/task.yaml m08_qcm/task.yaml
#: m09_qcm/task.yaml m10_qcm/task.yaml m11_qcm/task.yaml rev_qcm/task.yaml
!Olivier\ BONAVENTURE=

#. context
#: m01_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 1\ \:\ Mise\ en\ Route\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\nCes\ questions\ ont\ pour\ objectif\ de\ vous\ permettre\ de\ tester\ vous-m\u00eame\ votre\ compr\u00e9hension\ de\ la\ mati\u00e8re\ couverte\ par\ cette\ mission\ de\ mise\ en\ route.\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\ \:\n\n\n\ -\ |jn1|_\n\n\ \ \ -\ |jn1.1|_\n\ \ \ -\ |jn1.2|_\n\ \ \ -\ |jn1.3|_\n\ \ \ -\ |jn1.4|_\n\ \ \ -\ |jn1.5|_\n\ \ \ -\ |jn1.7|_\n\n\ -\ |jn2|_\n\n\ \ \ -\ |jn2.1|_\n\ \ \ -\ |jn2.2|_\n\ \ \ -\ |jn2.3|_\ (sauf\ |jn2.3.3|_)\n\ \ \ -\ |jn2.5|_\ (sauf\ |jn2.5.7|_)\n\ \ \ -\ |jn2.6|_\ (sauf\ |jn2.6.3|_)\n\n\ -\ |jn3|_\n\n\ \ \ -\ |jn3.1|_\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn1\:\ http\://math.hws.edu/javanotes/c1/index.html\n..\ |jn1|\ replace\:\:\ `1\ \:\ Overview\:\ The\ Mental\ Landscape`\n\n..\ _jn1.1\:\ http\://math.hws.edu/javanotes/c1/s1.html\n..\ |jn1.1|\ replace\:\:\ `1.1\ \:\ The\ Fetch\ and\ Execute\ Cycle\:\ Machine\ Language`\n\n..\ _jn1.2\:\ http\://math.hws.edu/javanotes/c1/s2.html\n..\ |jn1.2|\ replace\:\:\ `1.2\ \:\ Asynchronous\ Events\:\ Polling\ Loops\ and\ Interrupts`\n\n..\ _jn1.3\:\ http\://math.hws.edu/javanotes/c1/s3.html\n..\ |jn1.3|\ replace\:\:\ `1.3\ \:\ The\ Java\ Virtual\ Machine`\n\n..\ _jn1.4\:\ http\://math.hws.edu/javanotes/c1/s4.html\n..\ |jn1.4|\ replace\:\:\ `1.4\ \:\ Fundamental\ Building\ Blocks\ of\ Programs`\n\n..\ _jn1.5\:\ http\://math.hws.edu/javanotes/c1/s5.html\n..\ |jn1.5|\ replace\:\:\ `1.5\ \:\ Objects\ and\ Object-oriented\ Programming`\n\n..\ _jn1.7\:\ http\://math.hws.edu/javanotes/c1/s7.html\n..\ |jn1.7|\ replace\:\:\ `1.7\ \:\ The\ Internet\ and\ Beyond`\n\n..\ _jn2\ \:\ http\://math.hws.edu/javanotes/c2/index.html\n..\ |jn2|\ replace\:\:\ `2\ \:\ Programming\ in\ the\ Small\ I\:\ Names\ and\ Things`\n\n..\ _jn2.1\:\ http\://math.hws.edu/javanotes/c2/s1.html\n..\ |jn2.1|\ replace\:\:\ `2.1\ \:\ The\ Basic\ Java\ Application`\n\n..\ _jn2.2\:\ http\://math.hws.edu/javanotes/c2/s2.html\n..\ |jn2.2|\ replace\:\:\ `2.2\ \:\ Variables\ and\ the\ Primitive\ Types`\n\n..\ _jn2.3\:\ http\://math.hws.edu/javanotes/c2/s3.html\n..\ |jn2.3|\ replace\:\:\ `2.3\ \:\ Strings,\ Objects,\ Enums,\ and\ Subroutines`\n\n..\ _jn2.3.3\:\ http\://math.hws.edu/javanotes/c2/s3.html\#basics.3.3\n..\ |jn2.3.3|\ replace\:\:\ `2.3.3\ \:\ Introduction\ to\ Enums`\n\n..\ _jn2.5\ \:\ http\://math.hws.edu/javanotes/c2/s5.html\n..\ |jn2.5|\ replace\:\:\ `2.5\ \:\ Details\ of\ Expressions`\n\n..\ _jn2.5.7\:\ http\://math.hws.edu/javanotes/c2/s5.html\#basics.5.7\n..\ |jn2.5.7|\ replace\:\:\ `2.5.7\ \:\ Type\ Conversion\ of\ Strings`\n\n..\ _jn2.6\:\ http\://math.hws.edu/javanotes/c2/s6.html\n..\ |jn2.6|\ replace\:\:\ `2.6\ \:\ Programming\ Environments`\n\n..\ _jn2.6.3\:\ http\://math.hws.edu/javanotes/c2/s6.html\#basics.6.3\n..\ |jn2.6.3|\ replace\:\:\ `2.6.3\ \:\ IDEs\ and\ Eclipse`\n\n..\ _jn3\ \:\ http\://math.hws.edu/javanotes/c3/index.html\n..\ |jn3|\ replace\:\:\ `3\ \:\ Programming\ in\ the\ Small\ II\:\ Control`\n\n..\ _jn3.1\:\ http\://math.hws.edu/javanotes/c3/s1.html\n..\ |jn3.1|\ replace\:\:\ `3.1\ \:\ Blocks,\ Loops,\ and\ Branches`\n=

#. name
#: m01_qcm/task.yaml
Mission\ 1\:\ QCM=Assignment 1\: MCQ

#. name, q1, name
#. name, q2, name
#: m01_qcm/task.yaml
!Initialisation\ de\ variables=

#. name, q1, header
#: m01_qcm/task.yaml
!\nParmi\ les\ fragments\ de\ code\ Java\ suivants,\ quels\ sont\ ceux\ qui\ correspondent\ \u00e0\ des\ initialisations\ correctes\ de\ variables\ enti\u00e8res\ ?\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ a\=12;\n\ \ \ int\ b\=42352;\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var1\=-12;\n\ \ \ int\ var2\=42352;\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var1\=-12;\n\ \ \ int\ var2\=-var1;\n=

#. name, q1, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ une\ variable\ est\ initialis\u00e9e\ en\ utilisant\ une\ constante\ ou\ une\ expression\ qui\ s'\u00e9value\ avec\ le\ type\ de\ la\ variable.\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var_1\=-12100;\n\ \ \ int\ var_2\=42352;\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var\=1;\n\ \ \ int\ ma\ variable\=2;\n=

#. name, q1, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ un\ nom\ de\ variable\ ne\ peut\ jamais\ contenir\ d'espace.\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var\=1.2;\n\ \ \ int\ d\=2;\n=

#. name, q1, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ l'expression\ ``1.2``\ est\ un\ nombre\ r\u00e9el\ et\ non\ un\ nombre\ entier.\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ var1\='1';\n\ \ \ int\ var2\=2;\n=

#. name, q1, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ l'expression\ ``\\`1\\```\ correspond\ au\ caract\u00e8re\ ``1``.\ Ce\ n'est\ donc\ pas\ un\ nombre\ entier.\n=

#. name, q1, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ a\=123456789123456789123456789;\n\ \ \ int\ b\=2;\n=

#. name, q1, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ les\ entiers\ ne\ peuvent\ repr\u00e9senter\ que\ les\ nombres\ entre\ ``-2147483648``\ et\ ``2147483647``.\ Le\ nombre\ ``123456789123456789123456789``\ est\ trop\ grand.\ Il\ ne\ peut\ \u00eatre\ repr\u00e9sent\u00e9\ que\ sous\ la\ forme\ d'un\ ``long``.\n=

#. name, q10, name
#. name, q11, name
#: m01_qcm/task.yaml
!Boucles\ while=

#. name, q10, header
#: m01_qcm/task.yaml
!\nLequel\ des\ fragments\ de\ code\ Java\ ci-dessous\ permet\ de\ calculer\ la\ somme\ des\ \:math\:`n`\ premiers\ entiers\ positifs\ ?\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=0;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count\ <n)\ {\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=n;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count>0)\ {\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=0;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count\ <n)\ {\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, feedback
#: m01_qcm/task.yaml
!\nCette\ boucle\ ne\ se\ termine\ pas.\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ \u00e0\ initialiser\ correctement\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(\ n>1\ )\ {\n\ \ \ \ \ \ sum\=sum+n;\n\ \ \ \ \ \ n\=n-1;\n\ \ \ }\n=

#. name, q10, feedback
#: m01_qcm/task.yaml
!\nQuelle\ est\ la\ somme\ calcul\u00e9e\ par\ cette\ boucle\ ``while``\ ?\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ \u00e0\ initialiser\ correctement\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(\ sum\=sum+n\ )\ {\n\ \ \ \ \ \ n\=n-1;\n\ \ \ }\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, feedback
#: m01_qcm/task.yaml
!\nL'expression\ qui\ sert\ de\ garde\ \u00e0\ une\ boucle\ ``while``\ doit\ \u00eatre\ une\ expression\ bool\u00e9enne.\ ``sum\=sum+n``\ n'est\ pas\ une\ expression\ bool\u00e9enne\ et\ ce\ programme\ n'est\ pas\ syntaxiquement\ valide.\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=n;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count>0)\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, feedback
#: m01_qcm/task.yaml
!\nCe\ programme\ illustre\ une\ subtilit\u00e9\ de\ l'utilisation\ des\ blocs\ avec\ le\ langage\ Java.\ Sans\ accolades,\ la\ boucle\ ``while``\ porte\ uniquement\ sur\ l'instruction\ qui\ la\ suit.\ Ce\ code\ est\ donc\ \u00e9quivalent\ au\ code\ ci-dessous\ \:\n\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=n;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count>0)\ {\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ }\n\ \ \ count\=count-1;\n\nDans\ ce\ fragment\ de\ code,\ la\ variable\ ``count``\ n'est\ pas\ d\u00e9cr\u00e9ment\u00e9e\ dans\ le\ corps\ de\ la\ boucle\ et\ celle-ci\ ne\ se\ termine\ done\ jamais.\ Pour\ \u00e9viter\ ce\ genre\ de\ probl\u00e8mes,\ il\ est\ pr\u00e9f\u00e9rable\ de\ *toujours*\ utiliser\ des\ accolades\ pour\ d\u00e9limiter\ le\ bloc\ d'une\ boucle\ ``while``.\n=

#. name, q10, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=0;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count<n)\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ \ \ \ count\=count+1;\n\ \ \ //\ la\ variable\ sum\ contient\ la\ somme\ des\n\ \ \ //\ n\ premiers\ entiers\ positifs\n=

#. name, q10, feedback
#: m01_qcm/task.yaml
!\nCe\ programme\ illustre\ une\ subtilit\u00e9\ de\ l'utilisation\ des\ blocs\ avec\ le\ langage\ Java.\ Sans\ accolades,\ la\ boucle\ ``while``\ porte\ uniquement\ sur\ l'instruction\ qui\ la\ suit.\ Ce\ code\ est\ donc\ \u00e9quivalent\ au\ code\ ci-dessous\ \:\n\n..\ code\:\:\ java\n\n\ \ \ int\ n\=...;\ \ //\ >0\ \u00e0\ initialiser\ correctement\n\ \ \ int\ count\=0;\n\ \ \ int\ sum\=0;\ //\ la\ somme\n\ \ \ while(count<n)\ {\n\ \ \ \ \ \ sum\=sum+count;\n\ \ \ }\n\ \ \ count\=count+1;\n\nDans\ ce\ fragment\ de\ code,\ la\ variable\ ``count``\ n'est\ pas\ incr\u00e9ment\u00e9e\ dans\ le\ corps\ de\ la\ boucle\ et\ celle-ci\ ne\ se\ termine\ done\ jamais.\ Pour\ \u00e9viter\ ce\ genre\ de\ probl\u00e8mes,\ il\ est\ pr\u00e9f\u00e9rable\ de\ *toujours*\ utiliser\ des\ accolades\ pour\ d\u00e9limiter\ le\ bloc\ d'une\ boucle\ ``while``.\n=

#. name, q11, header
#: m01_qcm/task.yaml
!\nLes\ boucles\ ``while``\ sont\ utiles\ lorsque\ l'on\ doit\ r\u00e9p\u00e9ter\ des\ op\u00e9rations\ similaires\ \u00e0\ de\ multiples\ reprises.\ En\ arithm\u00e9tique,\ la\ factorielle\ d'un\ entier\ positif\ (``n``)\ et\ sup\u00e9rieur\ \u00e0\ ``1``\ est\ d\u00e9finie\ comme\ \u00e9tant\ le\ produit\ de\ tous\ les\ entiers\ inf\u00e9rieurs\ ou\ \u00e9gaux\ \u00e0\ ``n``.\ La\ factorielle\ de\ ``n``\ se\ note\ \:math\:`n\!`.\ Ainsi\ \:math\:`4\!\=24`.\ Parmi\ les\ boucles\ ``while``\ ci-dessous,\ laquelle\ permet\ de\ calculer\ correctement\ \:math\:`n\!`\ ?\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=1;\ \ //\ factorielle\n\ \ \ int\ count\=n;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count>1)\ {\n\ \ \ \ \ \ fact\=fact*count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=1;\ \ //\ factorielle\n\ \ \ int\ count\=1;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count<\=n)\ {\n\ \ \ \ \ \ fact\=fact*count;\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=0;\ \ //\ factorielle\n\ \ \ int\ count\=n;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count>1)\ {\n\ \ \ \ \ \ fact\=fact*count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n=

#. name, q11, feedback
#: m01_qcm/task.yaml
!\nQuel\ est\ le\ r\u00e9sultat\ de\ \:math\:`0\ \\times\ n`?\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=1;\ \ //\ factorielle\n\ \ \ int\ count\=1;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count>1)\ {\n\ \ \ \ \ \ fact\=fact*count;\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n=

#. name, q11, feedback
#: m01_qcm/task.yaml
!\nCette\ boucle\ ne\ s'arr\u00eate\ jamais.\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=1;\ \ //\ factorielle\n\ \ \ int\ count\=n;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count>1)\ {\n\ \ \ \ \ \ fact\=count;\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n=

#. name, q11, feedback
#: m01_qcm/task.yaml
!\nCette\ boucle\ ne\ fait\ que\ placer\ la\ valeur\ ``count``\ dans\ ``fact``\ \u00e0\ chaque\ it\u00e9ration.\n=

#. name, q11, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ long\ n\=17;\n\ \ \ long\ fact\=1;\ \ //\ factorielle\n\ \ \ int\ count\=1;\ \ //\ compteur\ pour\ la\ boucle\n\ \ \ while(count<\=n)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ \ \ \ fact\=fact*count;\n\ \ \ }\n=

#. name, q11, feedback
#: m01_qcm/task.yaml
!\nCette\ boucle\ ne\ calcule\ pas\ la\ factorielle\ demand\u00e9e.\ Que\ calcule-t-elle\ ?\n=

#. name, q2, header
#: m01_qcm/task.yaml
!\nParmi\ les\ fragments\ de\ programmes\ Java\ ci-dessous,\ quels\ sont\ ceux\ qui\ respectent\ la\ syntaxe\ du\ langage\ ?\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ double\ d\=2.0;\n\ \ \ char\ c\='3';\n\ \ \ boolean\ b\=false;\n\ \ \ long\ l\=-1;\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=0;\n\ \ \ double\ d\=3.2e-1;\n\ \ \ char\ c\='9';\n\ \ \ boolean\ b\=true;\n\ \ \ long\ l\=-1;\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=0.9;\n\ \ \ double\ d\=3.2e-1;\n\ \ \ char\ c\='0';\n\ \ \ boolean\ b\=false;\n\ \ \ long\ l\=-1234;\n=

#. name, q2, feedback
#: m01_qcm/task.yaml
!\nLe\ type\ ``int``\ ne\ peut\ \u00eatre\ utilis\u00e9\ que\ pour\ stocker\ des\ nombres\ entiers.\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=-12345;\n\ \ \ double\ d\=3;\n\ \ \ char\ c\='12';\n\ \ \ boolean\ b\=true;\n\ \ \ long\ l\=678;\n=

#. name, q2, feedback
#: m01_qcm/task.yaml
!\nLe\ type\ ``char``\ ne\ peut\ \u00eatre\ utilis\u00e9\ que\ pour\ stocker\ un\ (et\ un\ seul)\ caract\u00e8re.\ ``'12'``\ n'est\ pas\ un\ caract\u00e8re\ valide.\ ``char\ c\='2';``\ serait\ une\ d\u00e9claration\ valide.\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=-12345;\n\ \ \ double\ d\=3;\n\ \ \ char\ c\="9";\n\ \ \ boolean\ b\=true;\n\ \ \ long\ l\=678;\n=

#. name, q2, feedback
#: m01_qcm/task.yaml
!\nLe\ type\ ``char``\ ne\ peut\ \u00eatre\ utilis\u00e9\ que\ pour\ stocker\ un\ (et\ un\ seul)\ caract\u00e8re.\ En\ java,\ une\ expression\ entre\ guillemets\ comme\ ``"9"``\ est\ une\ *cha\u00eene\ de\ caract\u00e8res*\ (un\ ``String``)\ \ et\ non\ un\ caract\u00e8re.\ ``char\ c\='9';``\ (notez\ l'utilisation\ des\ apostrophes\ au\ lieu\ des\ guillemets)\ serait\ une\ d\u00e9claration\ valide.\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=2/3;\n\ \ \ double\ d\='8';\n\ \ \ char\ c\='a';\n\ \ \ boolean\ b\=false;\n\ \ \ long\ l\=-1;\n=

#. name, q2, feedback
#: m01_qcm/task.yaml
!\nLe\ type\ ``double``\ ne\ peut\ \u00eatre\ utilis\u00e9\ que\ pour\ stocker\ un\ nombre\ r\u00e9el.\ ``'8'``\ est\ le\ caract\u00e8re\ qui\ correspond\ au\ chiffre\ huit\ et\ non\ un\ nombre\ r\u00e9el.\ Cette\ initialisation\ n'est\ donc\ pas\ valide.\ Notez\ que\ la\ ligne\ ``int\ i\=2/3;``\ est\ tout\ \u00e0\ fait\ valide.\ L'initialisation\ d'une\ variable\ peut\ \u00eatre\ faite\ en\ utilisant\ n'importe\ quelle\ expression\ qui\ retourne\ une\ variable\ de\ ce\ type.\ Cependant,\ comme\ ``i``\ est\ une\ variable\ de\ type\ ``int``,\ sa\ valeur\ sera\ ``0``\ puisque\ la\ division\ ``2/3``\ est\ une\ division\ enti\u00e8re.\n=

#. name, q2, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=7;\n\ \ \ double\ d\=-2.34;\n\ \ \ char\ c\='z';\n\ \ \ boolean\ b\=0;\n\ \ \ long\ l\=-1;\n=

#. name, q2, feedback
#: m01_qcm/task.yaml
!\nLe\ type\ ``boolean``\ ne\ peut\ \u00eatre\ utilis\u00e9\ que\ pour\ stocker\ une\ valeur\ bool\u00e9enne\ contrairement\ \u00e0\ d'autres\ langages\ tels\ que\ C.\ Il\ peut\ s'agir\ de\ ``true``,\ ``false``\ ou\ n'importe\ quelle\ expression\ qui\ donne\ une\ valeur\ bool\u00e9enne.\ Ainsi,\ l'expression\ ``i\=\=9``\ est\ une\ expression\ bool\u00e9enne\ qui\ a\ la\ valeur\ ``false``.\ Cette\ expression\ aurait\ pu\ aussi\ \u00eatre\ utilis\u00e9e\ pour\ initialiser\ la\ variable\ bool\u00e9enne\ ``b``.\n=

#. name, q3, name
#: m01_qcm/task.yaml
!Les\ commentaires=

#. name, q3, header
#: m01_qcm/task.yaml
!\nAfin\ de\ faciliter\ la\ compr\u00e9hension\ des\ programmes\ \u00e9crits\ dans\ un\ langage\ de\ programmation\ tel\ que\ Java,\ il\ est\ important\ de\ bien\ le\ documenter\ en\ utilisant\ des\ commentaires.\ Parmi\ les\ fragments\ de\ code\ Java\ ci-dessous,\ lequel\ est\ syntaxiquement\ correct\ ?\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ /***********************\n\ \ \ *\ Mon\ programme\n\ \ \ *\n\ \ \ ***********************/\n\ \ \ int\ count\=7;\ //\ compteur\n\ \ \ int\ n\=0;\n\ \ \ //\ test\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ /***********************\n\ \ \ *\ Mon\ programme\n\ \ \ *\n\ \ \ ***********************/\n\ \ \ int\ count\=7;\ //\ compteur\n\ \ \ int\ n\=0;\n\ \ \ //\ double\ d;\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, feedback
#: m01_qcm/task.yaml
!\nUn\ ligne\ de\ commentaire\ est\ une\ ligne\ ignor\u00e9e\ par\ le\ compilateur\ Java.\ Certains\ programmeurs\ mettent\ en\ commentaire\ des\ lignes\ inutiles\ comme\ ci-dessus.\ Cela\ peut\ \u00eatre\ utile\ durant\ l'\u00e9criture\ de\ programmes,\ mais\ \u00e9vitez\ de\ rendre\ un\ programme\ finalis\u00e9\ avec\ des\ lignes\ de\ code\ en\ commentaires.\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ //\n\ \ //\ Mon\ programme\n\ \ //\n\ \ //\n\ \ \ int\ count\=7;\ /*\ compteur\ */\n\ \ \ int\ n\=0;\n\ \ \ //\ test\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, feedback
#: m01_qcm/task.yaml
!\n\nCe\ fragment\ de\ code\ est\ correct,\ mais\ en\ g\u00e9n\u00e9ral\ on\ pr\u00e9f\u00e8re\ utiliser\ ``//``\ et\ non\ ``/*\ ...\ */``\ \ pour\ un\ commentaire\ sur\ une\ ligne.\ Inversement,\ on\ pr\u00e9f\u00e8re\ utiliser\ ``/*\ ...\ */``\ pour\ un\ commentaire\ qui\ prend\ plusieurs\ lignes\ et\ non\ mettre\ ``//``\ au\ d\u00e9but\ de\ chaque\ ligne\ de\ commentaire.\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ /***********************\n\ \ \ *\ Mon\ programme\n\ \ \ *\n\ \ \ ***********************/\n\ \ \ int\ count\=7;\ //\ compteur\n\ \ \ int\ n\=0;\n\ \ \ /*\ test\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ la\ ligne\ ``/*\ test``\ marque\ le\ d\u00e9but\ d'un\ commentaire\ sur\ plusieurs\ lignes.\ Ce\ commentaire\ doit\ se\ terminer\ avec\ ``*/``,\ ce\ qui\ n'est\ pas\ le\ cas\ dans\ le\ code\ ci-dessus.\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ /***********************\n\ \ \ *\ Mon\ programme\n\ \ \ *\n\ \ \ ***********************\n\ \ \ int\ count\=7;\ //\ compteur\n\ \ \ int\ n\=0;\n\ \ \ //\ test\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ la\ premi\u00e8re\ ligne\ marque\ le\ d\u00e9but\ d'un\ commentaire\ sur\ plusieurs\ lignes.\ Ce\ commentaire\ doit\ normalement\ se\ terminer\ par\ ``*/``.\ Ce\ n'est\ pas\ le\ cas\ de\ l'exemple\ ci-dessus\ et\ le\ compilateur\ Java\ va\ consid\u00e9rer\ l'enti\u00e8ret\u00e9\ du\ programme\ comme\ \u00e9tant\ un\ commentaire.\n=

#. name, q3, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ /***********************\n\ \ \ *\ Mon\ programme\n\ \ \ *\n\ \ \ ***********************\n\ \ \ int\ count\=7;\ /\ compteur\n\ \ \ int\ n\=0;\n\ \ \ /\ /\ test\n\ \ \ if(count>3)\ {\n\ \ \ \ \ \ n\=count;\n\ \ \ }\n=

#. name, q3, feedback
#: m01_qcm/task.yaml
!\nUn\ commentaire\ doit\ d\u00e9buter\ par\ ``//``\ (deux\ fois\ caract\u00e8re\ ``/``).\ Si\ vous\ utilisez\ un\ seul\ caract\u00e8re\ ``/``\ ou\ deux\ caract\u00e8res\ ``/\ /``\ s\u00e9par\u00e9s\ par\ un\ espace,\ le\ compilateur\ Java\ ne\ consid\u00e8re\ par\ qu'il\ s'agit\ d'un\ marqueur\ valide\ de\ commentaire.\n=

#. name, q4, name
#: m01_qcm/task.yaml
!Syntaxe\ de\ Java=

#. name, q4, header
#: m01_qcm/task.yaml
!\n\nUn\ langage\ de\ programmation\ tel\ que\ Java\ utilise\ une\ syntaxe\ bien\ pr\u00e9cise.\ Il\ est\ important\ que\ vous\ sachiez\ reconna\u00eetre\ rapidement\ des\ erreurs\ de\ syntaxe\ dans\ un\ programme\ Java\ pour\ \u00e9viter\ de\ les\ commettre\ vous-m\u00eame.\ Les\ programmes\ ci-dessous\ ont\ \u00e9t\u00e9\ \u00e9crits\ par\ des\ \u00e9tudiants\ pour\ afficher\ le\ message\ ``Hello,\ world\!``\ \u00e0\ l'\u00e9cran.\ Chaque\ programme\ est\ stock\u00e9\ dans\ le\ fichier\ ``Hello.java``.\ Un\ seul\ de\ ces\ programmes\ est\ acceptable\ par\ le\ compilateur\ Java.\ Lequel\ ?\n=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ Hello\ {\n\n\ \ \ \ public\ static\ void\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.println("Hello,\ world\!");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ Hello\ {\n\n\ \ \ \ public\ static\ void\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.print("Hello,");\n\ \ \ \ \ \ System.out.println("world\!");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m01_qcm/task.yaml
!Ce\ code\ est\ correct.\ Il\ utilise\ deux\ instructions\ pour\ afficher\ le\ messages.=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ Monprog\ {\n\n\ \ \ \ public\ static\ void\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.println("Hello,\ world\!");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ le\ fichier\ ``Hello.java``\ doit\ toujours\ contenir\ une\ classe\ dont\ le\ nom\ est\ ``Hello``.\n=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ hello\ {\n\n\ \ \ \ public\ static\ void\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.println("Hello,\ world\!");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ le\ fichier\ ``Hello.java``\ doit\ toujours\ contenir\ une\ classe\ dont\ le\ nom\ est\ ``Hello``.\ Les\ noms\ de\ classe\ commencent\ toujours\ par\ une\ majuscule.\n=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ Hello\ {\n\n\ \ \ \ public\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.println("Hello,\ world\!");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ la\ m\u00e9thode\ qui\ est\ ex\u00e9cut\u00e9e\ par\ d\u00e9faut\ dans\ une\ classe\ Java\ a\ toujours\ comme\ signature\ ``public\ main\ (String[]\ args)``.\n=

#. name, q4, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ public\ class\ Hello\ {\n\n\ \ \ \ public\ main\ (String[]\ args)\ {\n\ \ \ \ \ \ System.out.println("Hello,\ world\!")\n\ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m01_qcm/task.yaml
!\nEn\ Java,\ la\ ligne\ ``System.out.println("Hello,\ world\!")``\ doit\ n\u00e9cessairement\ se\ terminer\ par\ un\ ``;``\n=

#. name, q5, name
#: m01_qcm/task.yaml
!Echange\ du\ contenu\ de\ variables=

#. name, q5, header
#: m01_qcm/task.yaml
!\nDans\ un\ langage\ de\ programmation\ comme\ Java,\ il\ est\ souvent\ n\u00e9cessaire\ d'\u00e9changer\ le\ contenu\ de\ deux\ variables.\ Consid\u00e9rons\ le\ programme\ ci-dessous\ dans\ lequel\ deux\ variables\ sont\ initialis\u00e9es\ \:\n\n..\ code\:\:\ java\n\n\ \ \ int\ a\=1401;\n\ \ \ int\ b\=1101;\n\nParmi\ les\ fragments\ de\ Java\ ci-dessous,\ lequel\ permet\ de\ correctement\ \u00e9changer\ le\ contenu\ de\ la\ variable\ ``a``\ avec\ le\ contenu\ de\ la\ variable\ ``b``\ ?\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ a\=b;\n=

#. name, q5, feedback
#: m01_qcm/task.yaml
!\nCette\ instruction\ place\ dans\ la\ variable\ ``a``\ le\ contenu\ de\ la\ variable\ ``b``\ mais\ pas\ l'inverse.\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n\n..\ code\:\:\ java\n\n\ \ \ b\=\=a;\n=

#. name, q5, feedback
#: m01_qcm/task.yaml
!\nCe\ n'est\ pas\ une\ instruction\ valide\ en\ langage\ Java.\ Ne\ confondez-pas\ ``\=\=``\ et\ ``\=``.\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n\n..\ code\:\:\ java\n\n\ \ \ b\=a;\n=

#. name, q5, feedback
#: m01_qcm/task.yaml
!\nCette\ instruction\ place\ dans\ la\ variable\ ``b``\ le\ contenu\ de\ la\ variable\ ``a``\ mais\ pas\ l'inverse.\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\n\ \ \ \ int\ c;\ //\ variable\ d'\u00e9change\n\ \ \ \ c\=b;\n\ \ \ \ a\=c;\n\ \ \ \ b\=a;\n=

#. name, q5, feedback
#: m01_qcm/task.yaml
!\nEx\u00e9cutez\ pas\ \u00e0\ pas\ cette\ suite\ d'instructions.\ Que\ contiennent\ les\ variables\ ``a``\ et\ ``b``\ \u00e0\ la\ fin\ de\ cette\ ex\u00e9cution\ ?\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n\n..\ code\:\:\ java\n\n\ \ \ int\ c;\ //\ variable\ d'\u00e9change\n\ \ \ c\=a;\n\ \ \ a\=b;\n\ \ \ b\=c;\n=

#. name, q5, text
#: m01_qcm/task.yaml
!\n\n..\ code\:\:\ java\n\n\ \ \ \ int\ c;\ //\ variable\ d'\u00e9change\n\ \ \ \ c\=b;\n\ \ \ \ b\=a;\n\ \ \ \ a\=c;\n=

#. name, q6, header
#: m01_qcm/task.yaml
!\nConsid\u00e9rons\ un\ programme\ Java\ qui\ manipule\ deux\ variables\ \:\ ``a``\ et\ ``b``.\ Parmi\ les\ fragments\ de\ code\ ci-dessous,\ lequel\ place\ correctement\ dans\ la\ variable\ ``min``\ le\ minimum\ entre\ les\ contenus\ de\ ``a``\ et\ ``b``\ ?\n\n..\ code\:\:\ java\n\n\ \ \ double\ a;\n\ \ \ double\ b;\n\ \ \ double\ min;\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a>b)\n\ \ \ {\n\ \ \ \ \ min\=b;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ min\=a;\n\ \ \ }\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a<b)\n\ \ \ {\n\ \ \ \ \ min\=a;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ min\=b;\n\ \ \ }\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a<\=b)\n\ \ \ {\n\ \ \ \ \ min\=a;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ min\=b;\n\ \ \ }\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a<\=b)\n\ \ \ {\n\ \ \ \ \ double\ min;\n\ min\=a;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ double\ min;\n\ \ \ \ \ min\=b;\n\ \ \ }\n=

#. name, q6, feedback
#: m01_qcm/task.yaml
!\nCe\ code\ ne\ fonctionne\ pas\ et\ le\ probl\u00e8me\ est\ assez\ subtil.\ En\ red\u00e9finissant\ la\ variable\ ``min``\ \u00e0\ l'int\u00e9rieur\ de\ chaque\ bloc,\ on\ d\u00e9finit\ une\ variable\ qui\ est\ consid\u00e9r\u00e9e\ par\ le\ compilateur\ comme\ \u00e9tant\ diff\u00e9rente\ de\ la\ variable\ min\ qui\ a\ \u00e9t\u00e9\ d\u00e9finie\ avec\ les\ variables\ ``a``\ et\ ``b``.\ La\ nouvelle\ variable\ ``min``\ est\ mise\ \u00e0\ jour\ \u00e0\ l'int\u00e9rieur\ du\ bloc\ mais\ n'est\ pas\ accessible\ en\ dehors\ de\ ce\ bloc.\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a\!\=b)\n\ \ \ {\n\ min\=a;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ min\=b;\n\ \ \ }\n=

#. name, q6, feedback
#: m01_qcm/task.yaml
!\nNe\ confondez\ pas\ ``\!\=``\ et\ ``<\=``\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a>b)\n\ \ \ {\n\ min\=a;\n\ \ \ }\n\ \ \ else\n\ \ \ {\n\ \ \ \ \ min\=b;\n\ \ \ }\n=

#. name, q6, feedback
#: m01_qcm/task.yaml
!\nCe\ programme\ place\ la\ valeur\ maximale\ dans\ la\ variable\ ``min``.\n=

#. name, q6, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(a<b)\n\ \ \ {\n\ min\=a;\n\ \ \ }\n=

#. name, q6, feedback
#: m01_qcm/task.yaml
!\nLorsque\ la\ valeur\ de\ la\ variable\ ``a``\ est\ sup\u00e9rieure\ ou\ \u00e9gale\ \u00e0\ la\ valeur\ de\ la\ variable\ ``b``,\ la\ variable\ ``min``\ n'est\ pas\ initialis\u00e9e.\n=

#. name, q7, name
#: m01_qcm/task.yaml
!Valeur\ absolue=

#. name, q7, header
#: m01_qcm/task.yaml
!\nSi\ ``x``\ est\ une\ variable\ de\ type\ ``double``,\ lequel\ de\ ces\ fragments\ de\ code\ place\ dans\ la\ variable\ ``abs``\ la\ valeur\ absolue\ de\ ``x``?\n=

#. name, q7, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ abs;\n\ \ \ if(\ x<0\ )\ {\n\ \ \ \ \ abs\=-x;\n\ \ \ }\n\ \ \ else\ {\n\ \ \ \ \ abs\=x;\n\ \ \ }\n=

#. name, q7, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ abs\=x;\n\ \ \ if(\ x<\=0\ )\ {\n\ \ \ \ \ abs\=-x;\n\ \ \ }\n=

#. name, q7, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ abs\=x;\n\ \ \ if(\ x>\=0\ )\ {\n\ \ \ \ \ abs\=x;\n\ \ \ }\n\ \ \ else\ {\n\ \ \ \ \ abs\=-x;\n\ \ \ }\n=

#. name, q7, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ abs\=x;\n\ \ \ if(\ x>\=0\ )\ {\n\ \ \ \ \ abs\=x;\n\ \ \ }\n=

#. name, q7, feedback
#: m01_qcm/task.yaml
!\nCe\ fragment\ de\ code\ place\ toujours\ la\ valeur\ ``x``\ dans\ la\ variable\ ``abs``.\n=

#. name, q7, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ abs;\n\ \ \ if(x\!\=0)\ {\n\ \ \ \ \ \ abs\=x;\n\ \ \ }\n\ \ \ else\ {\n\ \ \ \ \ \ abs\=-x;\n\ \ \ }\n=

#. name, q7, feedback
#: m01_qcm/task.yaml
!\nNe\ confondez\ pas\ ``\!\=``\ et\ ``>\=``.\n=

#. name, q8, name
#: m01_qcm/task.yaml
!Intervalles=

#. name, q8, header
#: m01_qcm/task.yaml
!\nEn\ math\u00e9matiques,\ on\ d\u00e9finit\ des\ intervalles,\ ferm\u00e9s,\ ouverts\ et\ semi-ouverts.\ L'intervalle\ semi-ouvert\ \:math\:`[3,7[`\ comprend\ l'ensemble\ des\ nombres\ r\u00e9els\ qui\ sont\ sup\u00e9rieurs\ ou\ \u00e9gaux\ \u00e0\ `3`\ et\ strictement\ inf\u00e9rieurs\ \u00e0\ 7.\ Sachant\ que\ ``a``,\ ``b``\ et\ ``x``\ sont\ des\ variables\ de\ type\ ``double``,\ lequel\ des\ fragments\ de\ code\ suivants\ affiche\ ``vrai``\ sur\ sa\ sortie\ standard\ si\ et\ seulement\ si\ ``x``\ appartient\ \u00e0\ l'intervalle\ \:math\:`[a,b[`\ ?\ On\ supposera\ pour\ cette\ question\ que\ la\ valeur\ stock\u00e9e\ dans\ la\ variable\ ``a``\ est\ strictement\ inf\u00e9rieure\ \u00e0\ celle\ stock\u00e9e\ dans\ la\ variable\ ``b``.\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(x>\=a)\ {\n\ \ \ \ \ if(x<b)\ {\n\ \ \ \ \ \ \ \ System.out.println("vrai");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(x<b)\ {\n\ \ \ \ \ if(x>\=a)\ {\n\ \ \ \ \ \ \ \ System.out.println("vrai");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(\ (x<b)\ &&\ (x>\=a)\ ){\n\ \ \ \ \ System.out.println("vrai");\n\ \ \ }\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(\ (x>\=a)\ &&\ (x<b)\ ){\n\ \ \ \ \ System.out.println("vrai");\n\ \ \ }\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(\ (a>\=x)\ &&\ (x<b)\ )\ {\n\ \ \ \ \ System.out.println("vrai");\n\ \ \ }\n=

#. name, q8, feedback
#: m01_qcm/task.yaml
!\nDans\ quels\ cas\ l'expression\ ``(\ (a>\=x)\ &&\ (x<b)\ )``\ est-elle\ vraie\ ?\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(\ (a<x)\ &&\ (x<b)\ )\ {\n\ \ \ \ \ System.out.println("vrai");\n\ \ \ }\n=

#. name, q8, feedback
#: m01_qcm/task.yaml
!\nL'expression\ ``(\ (a<x)\ &&\ (x<b)\ )``\ est-elle\ vraie\ lorsque\ ``x\=\=a``\ ?\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(\ (a<\=x)\ ||\ (x<b)\ )\ {\n\ \ \ \ \ System.out.println("vrai");\n\ \ \ }\n=

#. name, q8, feedback
#: m01_qcm/task.yaml
!\nNe\ confondez\ pas\ la\ conjonction\ (`et`)\ logique\ repr\u00e9sent\u00e9\ par\ ``&&``\ en\ Java\ et\ la\ disjonction\ (`ou`)\ logique\ repr\u00e9sent\u00e9e\ en\ Java\ par\ ``||``.\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(x<a)\ {\n\ \ \ \ \ if(x<b)\ {\n\ \ \ \ \ \ \ \ System.out.println("vrai");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q8, feedback
#: m01_qcm/task.yaml
!\nAffiche-t-elle\ "vrai"\ lorsque\ ``x\=\=a``?\n=

#. name, q8, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ if(x<\=b)\ {\n\ \ \ \ \ if(x>\=a)\ {\n\ \ \ \ \ \ \ \ System.out.println("vrai");\n\ \ \ \ }\n\ \ \ }\n=

#. name, q8, feedback
#: m01_qcm/task.yaml
!\nQu'affiche\ ce\ fragment\ de\ code\ lorsque\ ``x\=\=b``\ ?\n=

#. name, q9, name
#: m01_qcm/task.yaml
!Op\u00e9rations\ arithm\u00e9tiques=

#. name, q9, header
#: m01_qcm/task.yaml
!\nUn\ seul\ des\ fragments\ de\ programmes\ ci-dessous\ affiche\ "ok"\ \u00e0\ l'\u00e9cran\ ?\ Pouvez-vous\ trouver\ lequel\ ?\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=2;\n\ \ \ int\ j\=3;\n\ \ \ int\ k\=i/j;\n\ \ \ if(k\=\=0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ a\=2;\n\ \ \ double\ b\=3;\n\ \ \ double\ c\=a/b;\n\ \ \ if(c\!\=0.0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=6;\n\ \ \ int\ j\=7;\n\ \ \ int\ k\=i/j;\n\ \ \ if(k\!\=0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ les\ variables\ sont\ de\ type\ ``int``.\ En\ arithm\u00e9tique\ enti\u00e8re,\ la\ division\ ``6/7``\ donne\ comme\ r\u00e9sultat\ ``0``\ avec\ un\ reste\ de\ ``6``.\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ a\=1;\n\ \ \ double\ b\=3;\n\ \ \ double\ c\=a/b;\n\ \ \ if(c\=\=0.0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ les\ variables\ ``a``\ et\ ``b``\ sont\ de\ type\ ``double``.\ Elles\ permettent\ donc\ de\ stocker\ un\ nombre\ r\u00e9el.\ Le\ r\u00e9sultat\ de\ ``a/b``\ est\ ``0.33333``\ qui\ est\ diff\u00e9rent\ de\ ``0.0``.\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ int\ i\=8;\n\ \ \ int\ j\=7;\n\ \ \ int\ k\=i/j;\n\ \ \ if(k\=\=0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ les\ variables\ sont\ de\ type\ ``int``.\ En\ arithm\u00e9tique\ enti\u00e8re,\ la\ division\ ``8/7``\ donne\ comme\ r\u00e9sultat\ ``1``\ avec\ un\ reste\ de\ ``1``.\n=

#. name, q9, text
#: m01_qcm/task.yaml
!\n..\ code\:\:\ java\n\n\ \ \ double\ a\=6.0;\n\ \ \ double\ b\=7.0;\n\ \ \ double\ c\=a/b;\n\ \ \ if(c\=\=0.0)\ {\n\ \ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q9, feedback
#: m01_qcm/task.yaml
!\nDans\ ce\ fragment\ de\ code,\ les\ variables\ ``a``\ et\ ``b``\ sont\ de\ type\ ``double``.\ Elles\ permettent\ donc\ de\ stocker\ un\ nombre\ r\u00e9el.\ Le\ r\u00e9sultat\ de\ ``a/b``\ est\ diff\u00e9rent\ de\ ``0.0``.\n=

#. author
#: m01real/task.yaml m02dem1/task.yaml m02real/task.yaml m03real1/task.yaml
#: m04dem5/task.yaml m04real/task.yaml m05real/task.yaml m06dem1/task.yaml
#: m06dem2/task.yaml m06dem3/task.yaml m06dem4/task.yaml m06real/task.yaml
#: m08dem1/task.yaml m08dem2/task.yaml m08real/task.yaml m09dem1/task.yaml
#: m09dem2/task.yaml m10real/task.yaml m12_examj2011q1_online/task.yaml
#: m12_examj2011q3_online/task.yaml m12_examj2011q5_online/task.yaml
#: m12_examj2011q7_online/task.yaml m1real/task.yaml mX12_examj2011q1/task.yaml
#: mX12_examj2011q3/task.yaml mX12_examj2011q5/task.yaml
#: mX12_examj2011q7/task.yaml
!Fran\u00e7ois\ MICHEL=

#. context
#: m01real/task.yaml m1real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 1.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ MiseEnRoute.java\n-\ README.txt=

#. name
#: m01real/task.yaml m1real/task.yaml
Mission\ 1\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=Assignment 1\: Achievement \: Submission

#. name, q1, name
#: m01real/task.yaml m1real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 1=

#. name, q1, header
#: m01real/task.yaml m02real/task.yaml m04real/task.yaml m05real/task.yaml
#: m06real/task.yaml m07real/task.yaml m08real/task.yaml m09real/task.yaml
#: m11real/task.yaml m1real/task.yaml
!Soumettez\ ici\ l'archive\ zip\ ou\ faites-le\ directement\ via\ BlueJ.=

#. author
#: m02Q1/task.yaml m02Q10/task.yaml m02Q8/task.yaml m02Q9/task.yaml
!Ludovic\ Taffin,\ Brandon\ Naitali=

#. context
#: m02Q1/task.yaml
!Calculez\ le\ reste\ de\ la\ division\ enti\u00e8re\ entre\ ``a``\ et\ ``b``\ en\ utilisant\ uniquement\ une\ boucle\ ``for``\ et\ des\ soustractions.\ On\ supposera\ ``a>0``\ et\ ``b>0``.\n\nExemple\ \:\ Le\ reste\ de\ la\ division\ enti\u00e8re\ de\ 5\ par\ 3\ vaut\ 2\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ a;\ //a\ un\ entier\ strictement\ positif\n\ \ \ \ int\ b;\ //b\ un\ entier\ strictement\ positif\n\ \ \ \ int\ reste;\ //\ le\ reste\ de\ la\ division\ enti\u00e8re.=

#. name
#: m02Q1/task.yaml
!Mission\ 2\ \:\ Exercice\ suppl\u00e9mentaire\ \:\ Calculer\ le\ reste\ d'une\ division\ enti\u00e8re=

#. name, q1, name
#: m02Q1/task.yaml
!Calculer\ le\ reste\ d'une\ division\ enti\u00e8re=

#. context
#: m02Q10/task.yaml
!Calculer\ le\ *nombre*\ de\ diviseurs\ distincts\ d'un\ entier\ strictement\ positif.\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ a;\ //\ l'entier\ a\n\ \ \ \ int\ resultat\ \=\ 0;\n=

#. name
#: m02Q10/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Calcul\ du\ nombre\ diviseurs\ distincts=

#. name, q1, name
#: m02Q10/task.yaml
!Donner\ le\ code\ permettant\ de\ calculer\ le\ nombre\ de\ diviseurs\ distincts\ pour\ a.=

#. author
#: m02Q3/task.yaml m02Q4/task.yaml m02Q5/task.yaml m02Q6/task.yaml
#: m04Q10/task.yaml m04Q11/task.yaml m04Q7/task.yaml m10Q2/task.yaml
#: m10Q4/task.yaml
!Ludovic\ TAFFIN,\ Brandon\ NAITALI=

#. context
#: m02Q3/task.yaml
!En\ utilisant\ des\ boucle(s)\ ``for``,\ \u00e9crivez\ le\ code\ permettant\ d'afficher\ un\ triangle\ rectangle\ isoc\u00e8le\ dont\ la\ longueur\ du\ c\u00f4t\u00e9\ vous\ est\ fourni\u00e9.\n\nPour\ rappel,\ ``System.out.print('0')``\ permet\ d'afficher\ le\ caract\u00e8re\ ``0``\ \u00e0\ l'\u00e9cran\ et\ ``System.out.println()``\ permet\ d'aller\ \u00e0\ la\ ligne.\n\nA\ titre\ d'exemple,\ voici\ un\ triangle\ dont\ le\ c\u00f4t\u00e9\ est\ de\ ``4``\ \:\n\n..\ code-block\:\:\ console\n\n\ \ \ 0\n\ \ \ 00\n\ \ \ 000\n\ \ \ 0000\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ cote\ \=\ //\ la\ longueur\ du\ cote=

#. name
#: m02Q3/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Dessin\ d'un\ triangle=

#. name, q1, name
#: m02Q3/task.yaml
!Triangle=

#. name, q1, header
#: m02Q3/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ dessiner\ un\ triangle=

#. context
#: m02Q4/task.yaml
!Dessiner\ la\ lettre\ H\ en\ utilisant\ de\ l'ASCII-art\ avec\ le\ caract\u00e8re\ ``*``.\ Votre\ programme\ re\u00e7oit\ comme\ entr\u00e9e\ la\ hauteur\ de\ la\ lettre\ \u00e0\ dessiner\ (suppos\u00e9e\ impaire)\ et\ sa\ largeur.\ N'affichez\ pas\ d'espaces\ inutiles\ \u00e0\ droite\ de\ votre\ lettre.\n\nA\ titre\ d'exemple,\ si\ ``hauteur``\ vaut\ 5\ et\ ``largeur``\ 3,\ vous\ devez\ afficher.\n\n..\ code-block\:\:\ console\n\n\ \ \ *\ *\n\ \ \ *\ *\n\ \ \ ***\n\ \ \ *\ *\n\ \ \ *\ *\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ hauteur;\ //\ la\ hauteur\ du\ H\n\ \ \ \ int\ largeur;\ //\ la\ largeur\ du\ H\n\n=

#. name
#: m02Q4/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Dessin\ de\ H=

#. name, q1, name
#: m02Q4/task.yaml
!Lettre\ H=

#. name, q1, header
#: m02Q4/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ dessiner\ la\ lettre\ H=

#. context
#: m02Q5/task.yaml
!En\ utilisant\ le\ caract\u00e8re\ ``*``,\ dessinez\ une\ lettre\ ``X``\ dont\ on\ vous\ donne\ la\ hauteur\ (suppos\u00e9e\ impaire).\ N'affichez\ pas\ d'espaces\ inutiles\ \u00e0\ droite\ de\ votre\ lettre.\n\nExemple\ avec\ une\ hauteur\ de\ 5,\ avec\ "-"\ symbolisant\ un\ espace\ \:\n\n..\ code-block\:\:\ console\n\n\ \ \ \ *---*\n\ \ \ \ -*-*\n\ \ \ \ --*\n\ \ \ \ -*-*\n\ \ \ \ *---*\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ hauteur;\ //\ la\ hauteur\ du\ X\n\nNB\:\ M\u00eame\ un\ retour\ \u00e0\ la\ ligne\ est\ un\ caract\u00e8re\ de\ trop\!\n=

#. name
#: m02Q5/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Dessin\ de\ X=

#. name, q1, name
#: m02Q5/task.yaml
!Lettre\ X=

#. name, q1, header
#: m02Q5/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ dessiner\ la\ lettre\ X=

#. context
#: m02Q6/task.yaml
!Dessinez\ la\ lettre\ S\ en\ utilisant\ le\ caract\u00e8re\ ``*``\ lorsque\ l'on\ vous\ donne\ la\ ``hauteur``.\nLa\ largeur\ du\ S\ sera\ toujours\ de\ 3\ caract\u00e8res.\ Les\ espaces\ ne\ sont\ n\u00e9c\u00e9ssaires\ que\ s'il\ y\ a\ une\ \u00e9toile\ apr\u00e8s.\n\n\n\nExemple\ avec\ une\ hauteur\ de\ 5,\ avec\ "-"\ symbolisant\ un\ espace\:\n\n..\ code-block\:\:\ console\n\n\ \ \ \ ***\n\ \ \ \ *\n\ \ \ \ ***\n\ \ \ \ --*\n\ \ \ \ ***\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ hauteur;\ //\ la\ hauteur\ du\ S=

#. name
#: m02Q6/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Dessin\ de\ S=

#. name, q1, name
#: m02Q6/task.yaml
!Lettre\ S=

#. name, q1, header
#: m02Q6/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ dessiner\ la\ lettre\ S=

#. context
#: m02Q7/task.yaml
!Vous\ avez\ aujourd'hui\ ``base``\ \u20ac\ sur\ votre\ livret\ d'\u00e9pargne.\ Si\ vous\ le\ laissez\ ``x``\ ann\u00e9es\ \u00e0\ un\ taux\ d'int\u00e9r\u00eat\ suppos\u00e9\ fixe\ de\ ``y``\ pourcents,\ quel\ sera\ le\ solde\ de\ votre\ livret\ apr\u00e8s\ ces\ ``x``\ ann\u00e9es\ ?\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ x;\ //\ le\ nombre\ d'ann\u00e9es\n\ \ \ \ double\ y;\ //\ le\ pourcentage\n\ \ \ \ double\ base;\ //\ l'argent\ sur\ le\ compte\ sans\ les\ int\u00e9r\u00eats\n\ \ \ \ double\ resultat;\ //\ le\ resultat\ du\ calcul\n=

#. name
#: m02Q7/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Calcul\ d'int\u00e9r\u00eats=

#. name, q1, name
#: m02Q7/task.yaml
!Donner\ le\ code\ permettant\ de\ calculer\ les\ int\u00e9r\u00eats\ sur\ X\ ann\u00e9es.=

#. context
#: m02Q8/task.yaml
!En\ math\u00e9matiques,\ la\ factorielle\ d'un\ entier\ ``x``,\ not\u00e9e\ \:math\:`x\!`\ strictement\ positif\ est\ le\ produit\ des\ entiers\ strictement\ positifs\ inf\u00e9rieurs\ ou\ \u00e9gaux\ \u00e0\ ``x``.\ Calculer\ la\ factorielle\ d'un\ entier\ et\ stocker\ la\ valeur\ dans\ la\ variable\ ``resultat``.\n\nExemple\ \:\ \:math\:`5\!\ \=\ 5\u00d74\u00d73\u00d72\u00d71\ \=\ 120`\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ x;\ //\ l'entier\n\ \ \ \ int\ resultat\ \=\ 0;\n\nTip\ \:\ faites\ attention\ \u00e0\ la\ valeur\ de\ la\ variable\ resultat\ \!\n=

#. name
#: m02Q8/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Calcul\ de\ factorielle=

#. name, q1, name
#: m02Q8/task.yaml
!Donner\ le\ code\ permettant\ de\ calculer\ la\ factorielle.=

#. context
#: m02Q9/task.yaml
!``a``\ et\ ``b``\ sont\ deux\ entiers\ tels\ que\ \:math\:`a<b`.\ Calculez\ la\ somme\ des\ entiers\ se\ trouvant\ dans\ l'intervalle\ ferm\u00e9\ \:math\:`[a,b]`\ \ en\ utilisant\ une\ boucle\ ``for``.\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ a;\ //\ l'entier\ a\n\ \ \ \ int\ b;\ //\ l'entier\ b\n\ \ \ \ int\ resultat\ \=\ 0;\n=

#. name
#: m02Q9/task.yaml
!Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Somme\ des\ entiers\ entre\ a\ et\ b=

#. name, q1, name
#: m02Q9/task.yaml
!Donner\ le\ code\ permettant\ de\ calculer\ la\ somme\ des\ entiers\ entre\ a\ et\ b.=

#. context
#: m02_bf/task.yaml
!Soit\ un\ naturel\ non-nul\ \:math\:`x`,\ le\ naturel\ non-nul\ \:math\:`d`\ est\ un\ **diviseur\ propre**\ de\ \:math\:`x`\ s'il\ est\ compris\ entre\ \:math\:`x`\ (exclus)\ et\ qu'il\ divise\ \:math\:`x`.\n\nCe\ qui\ va\ nous\ int\u00e9resser\ dans\ le\ cadre\ de\ cette\ question\ de\ bilan\ final,\ c'est\ le\ nombre\ de\ diviseurs\ propres.\ Vous\ devez\ \u00e9crire\ un\ programme\ qui\ va,\ \u00e9tant\ donn\u00e9\ un\ naturel\ non-nul\ ``n``,\ afficher\ \u00e0\ l'\u00e9cran\ le\ nombre\ de\ diviseurs\ propres\ que\ poss\u00e8de\ chacun\ des\ naturels\ compris\ entre\ \:math\:`1`\ et\ \:math\:`n`\ (tous\ les\ deux\ inclus).\n\nPar\ exemple,\ si\ la\ variable\ ``n``\ vaut\ \:math\:`7`,\ votre\ programme\ doit\ afficher\ sur\ la\ sortie\ standard,\ gr\u00e2ce\ \u00e0\ ``System.out.println()``,\ ceci\ \:\n\n..\ code-block\:\:\ console\n\n\ \ \ \ 1\:0\n\ \ \ \ 2\:1\n\ \ \ \ 3\:1\n\ \ \ \ 4\:2\n\ \ \ \ 5\:1\n\ \ \ \ 6\:3\n\ \ \ \ 7\:1\n\nVotre\ programme\ doit\ afficher\ son\ r\u00e9sultat\ exactement\ comme\ pr\u00e9sent\u00e9\ dans\ l'exemple\ ci-dessus.\ Vous\ ne\ devez\ pas\ d\u00e9clarer,\ ni\ initialiser\ la\ variable\ de\ type\ ``int``\ nomm\u00e9e\ ``n``,\ elle\ vous\ sera\ fournie.=

#. name
#: m02_bf/task.yaml
!Mission\ 2\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, header
#: m02_bf/task.yaml
!\u00c9crivez\ ici\ directement\ le\ code\ de\ la\ m\u00e9thode\ ``main``.\ Vous\ ne\ devez\ pas\ d\u00e9clarer,\ ni\ initialiser\ la\ variable\ ``n``.=

#. context
#: m02_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 2.\ Les\ bases\ de\ Java\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\nCette\ mission\ a\ pour\ objectif\ de\ renforcer\ vos\ connaissances\ des\ concepts\ de\ base\ de\ la\ programmation\ en\ Java.\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\ \:\n\n\n\ -\ |jn2|_\n\n\ \ \ \ \ -\ |jn2.4|_\ (sauf\ |jn2.4.2|_,\ |jn2.4.4|_,\ |jn2.4.5|_,\ et\ |jn2.4.6|_).\n\n\ -\ |jn3|_\n\n\ \ \ \ \ -\ |jn3.2|_\n\ \ \ \ \ -\ |jn3.3|_\ (sauf\ |jn3.3.3|_)\n\ \ \ \ \ -\ |jn3.4|_\ (sauf\ |jn3.4.4|_)\n\ \ \ \ \ -\ |jn3.5|_\n\n\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn2\ \:\ http\://math.hws.edu/javanotes/c2/index.html\n..\ |jn2|\ replace\:\:\ `2\ \:\ Programming\ in\ the\ Small\ I\:\ Names\ and\ Things`\n\n..\ _jn2.4\:\ http\://math.hws.edu/javanotes/c2/s4.html\n..\ |jn2.4|\ replace\:\:\ `2.4\ \:\ Text\ Input\ and\ Output`\n\n..\ _jn2.4.2\:\ http\://math.hws.edu/javanotes/c2/s4.html\#basics.4.2\n..\ |jn2.4.2|\ replace\:\:\ `2.4.2\ \:\ Text\ Output`\n\n..\ _jn2.4.4\ \:\ http\://math.hws.edu/javanotes/c2/s4.html\#basics.4.4\n..\ |jn2.4.4|\ replace\:\:\ `2.4.4\ \:\ Formatted\ Output`\n\n..\ _jn2.4.5\ \:\ http\://math.hws.edu/javanotes/c2/s4.html\#basics.4.5\n..\ |jn2.4.5|\ replace\:\:\ `2.4.5\ \:\ Introduction\ to\ File\ I/O`\n\n..\ _jn2.4.6\ \:\ http\://math.hws.edu/javanotes/c2/s4.html\#basics.4.6\n..\ |jn2.4.6|\ replace\:\:\ `2.4.6\ \:\ Using\ Scanner\ for\ Input`\n\n..\ _jn3\ \:\ http\://math.hws.edu/javanotes/c3/index.html\n..\ |jn3|\ replace\:\:\ `3\ \:\ Programming\ in\ the\ Small\ II\:\ Control`\n\n..\ _jn3.2\ \:\ http\://math.hws.edu/javanotes/c3/s2.html\n..\ |jn3.2|\ replace\:\:\ `3.2\ \:\ Algorithm\ Development`\n\n..\ _jn3.3\ \:\ http\://math.hws.edu/javanotes/c3/s3.html\n..\ |jn3.3|\ replace\:\:\ `3.3\ \:\ The\ while\ and\ do..while\ Statements`\n\n..\ _jn3.3.3\ \:\ http\://math.hws.edu/javanotes/c3/s3.html\#control.3.3\n..\ |jn3.3.3|\ replace\:\:\ `3.3.3\ \:\ break\ and\ continue`\n\n..\ _jn3.4\ \:\ http\://math.hws.edu/javanotes/c3/s4.html\n..\ |jn3.4|\ replace\:\:\ `3.4\ \:\ The\ for\ Statement`\n\n..\ _jn3.4.4\ \:\ http\://math.hws.edu/javanotes/c3/s4.html\#control.4.4\n..\ |jn3.4.4|\ replace\:\:\ `3.4.4\ \:\ Enums\ and\ for-each\ Loops`\n\n..\ _jn3.5\ \:\ http\://math.hws.edu/javanotes/c3/s5.html\n..\ |jn3.5|\ replace\:\:\ `3.5\ \:\ The\ if\ Statement`\n=

#. name
#: m02_qcm/task.yaml
!Mission\ 2\:\ QCM=

#. name, q1, name
#: m02_qcm/task.yaml
!Types\ de\ donn\u00e9es\ primitifs=

#. name, q1, header
#: m02_qcm/task.yaml
!\nJava\ supporte\ diff\u00e9rents\ types\ de\ donn\u00e9es\ primitifs\ \:\ ``byte``,\ ``int``,\ ``short``,\ ``long``,\ ``float``,\ ``double``,\ ``char``\ et\ ``boolean``.\ Dans\ le\ cadre\ du\ cours,\ nous\ n'utiliserons\ pas\ les\ types\ ``byte``\ et\ ``short``.\ Dans\ un\ programme\ Java,\ vous\ devez\ stocker\ les\ informations\ suivantes\ \:\n\n\ -\ le\ nombre\ d'\u00e9tudiants\ en\ premi\u00e8re\ ann\u00e9e\ (variable\ ``etudiants``)\n\ -\ le\ budget\ de\ l'\u00e9tat\ am\u00e9ricain\ en\ dollars\ (variable\ ``budget``)\n\ -\ le\ nombre\ \:math\:`\\pi`\ (variable\ ``pi``)\n\ -\ une\ mesure\ de\ temp\u00e9rature\ (variable\ ``temp``)\n\ -\ la\ pr\u00e9sence\ d'un\ \u00e9tudiant\ dans\ un\ local\ (variable\ ``present``)\n\ -\ un\ caract\u00e8re\ tap\u00e9\ sur\ un\ clavier\ (variable\ ``caractere``)\n\nParmi\ les\ d\u00e9clarations\ de\ variables\ suivantes,\ quelle\ est\ celle\ qu'il\ est\ pr\u00e9f\u00e9rable\nd'utiliser\ pour\ ces\ donn\u00e9es\ ?\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ etudiants;\n\ \ \ float\ budget;\n\ \ \ double\ pi;\n\ \ \ double\ temp;\n\ \ \ boolean\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ etudiants;\n\ \ \ double\ budget;\n\ \ \ double\ pi;\n\ \ \ float\ temp;\n\ \ \ boolean\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ double\ etudiants;\n\ \ \ double\ budget;\n\ \ \ double\ pi;\n\ \ \ double\ temp;\n\ \ \ boolean\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, feedback
#: m02_qcm/task.yaml
!\nY-a-t-il\ des\ fractions\ d'\u00e9tudiants\ en\ premi\u00e8re\ ann\u00e9e\ ?\ Si\ non,\ pourquoi\ repr\u00e9senter\ ce\ nombre\ en\ utilisant\ un\ r\u00e9el\ et\ non\ un\ entier\ ?\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ etudiants;\n\ \ \ double\ budget;\n\ \ \ double\ pi;\n\ \ \ float\ temp;\n\ \ \ int\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, feedback
#: m02_qcm/task.yaml
!\nLa\ pr\u00e9sence\ d'un\ \u00e9tudiant\ est\ typiquement\ une\ donn\u00e9e\ dont\ la\ valeur\ peut\ \u00eatre\ vraie\ ou\ fausse.\ C'est\ dans\ ce\ cas\ que\ l'on\ utilise\ un\ ``boolean``\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ etudiants;\n\ \ \ long\ budget;\n\ \ \ double\ pi;\n\ \ \ float\ temp;\n\ \ \ boolean\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, feedback
#: m02_qcm/task.yaml
!\nLes\ am\u00e9ricains\ utilisent\ des\ dollars\ et\ des\ cents.\ Vous\ devez\ donc\ pouvoir\ repr\u00e9senter\ un\ budget\ de\ 3.45$,\ ce\ que\ le\ type\ ``long``\ ne\ permet\ pas.\n=

#. name, q1, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ etudiants;\n\ \ \ int\ budget;\n\ \ \ double\ pi;\n\ \ \ float\ temp;\n\ \ \ boolean\ present;\n\ \ \ char\ caractere;\n=

#. name, q1, feedback
#: m02_qcm/task.yaml
!\nLes\ am\u00e9ricains\ utilisent\ des\ dollars\ et\ des\ cents.\ Vous\ devez\ donc\ pouvoir\ repr\u00e9senter\ un\ budget\ de\ 3.45$,\ ce\ que\ le\ type\ ``int``\ ne\ permet\ pas.\ De\ plus,\ le\ type\ ``int``\ ne\ peut\ stocker\ que\ des\ nombres\ allant\ de\ ``-2147483648``\ et\ ``2147483647``,\ ce\ qui\ est\ insuffisant\ pour\ le\ budget\ (et\ le\ d\u00e9ficit)\ am\u00e9ricain.\n=

#. name, q10, name
#: m02_qcm/task.yaml
!Boucles\ for\ et\ while=

#. name, q10, header
#: m02_qcm/task.yaml
!\nJava\ supporte\ \u00e0\ la\ fois\ les\ boucles\ ``for``\ et\ les\ boucles\ ``while``.\ Souvent,\ on\ peut\ utiliser\ une\ boucle\ ``for``\ \u00e0\ la\ place\ d'une\ boucle\ ``while``\ et\ inversement.\ Consid\u00e9rons\ la\ boucle\ ``for``\ ci-dessous\ \:\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=0;\ i<n;\ i\=i+2)\ {\n\ \ \ \ \ \ \ //faire\ quelque\ chose\n\ \ \ \ }\n\nA\ laquelle\ des\ boucles\ ``while``\ ci-dessous\ cette\ boucle\ est-elle\ \u00e9quivalente\ ?\n=

#. name, q10, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=0;\n\ \ \ while(i<n)\ {\n\ \ \ \ //\ faire\ quelque\ chose\n\ \ \ \ i\=i+2;\n\ \ \ }\n=

#. name, q10, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i;\n\ \ \ i\=0;\n\ \ \ while(\ \!(i>\=n)\ )\ {\n\ \ \ \ //\ faire\ quelque\ chose\n\ \ \ \ i\=i+2;\n\ \ \ }\n=

#. name, q10, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=0;\n\ \ \ while(i<n)\ {\n\ \ \ \ i\=i+2;\n\ \ \ \ //\ faire\ quelque\ chose\n\ \ \ }\n=

#. name, q10, feedback
#: m02_qcm/task.yaml
!\nNotez\ que\ dans\ ce\ cas,\ premi\u00e8re\ it\u00e9ration\ de\ la\ boucle\ se\ fait\ avec\ ``2``\ comme\ valeur\ pour\ la\ variable\ ``i``.\n=

#. name, q10, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=0;\n\ \ \ while(i\!\=n)\ {\n\ \ \ \ i\=i+2;\n\ \ \ \ //\ faire\ quelque\ chose\n\ \ \ }\n=

#. name, q10, feedback
#: m02_qcm/task.yaml
!\nQue\ se\ passe-t-il\ si\ la\ variable\ ``n``\ est\ impaire\ ?\n=

#. name, q10, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i;\n\ \ \ i\=0;\n\ \ \ while(\ \!(i>\=n)\ )\ {\n\ \ \ \ i\=i+2;\n\ \ \ \ //\ faire\ quelque\ chose\n\ \ \ }\n=

#. name, q11, name
#: m02_qcm/task.yaml
!Boucles\ imbriqu\u00e9es=

#. name, q11, header
#: m02_qcm/task.yaml
!\nLaquelle\ des\ boucles\ ci-dessous\ permet\ d'afficher\ \u00e0\ l'\u00e9cran\ un\ rectangle\ \ compos\u00e9\ de\ ``l``\ lignes\ contenant\ chacune\ ``c``\ caract\u00e8res\ ?\ Par\ exemple,\ le\ rectangle\ ci-dessous\ est\ un\ rectangle\ de\ 3x7\n\n..\ code-block\:\:\ java\n\n\ XXXXXXX\n\ XXXXXXX\n\ XXXXXXX\n\n\nOn\ supposera\ pour\ r\u00e9pondre\ \u00e0\ cette\ question\ que\ les\ variables\ ``l``\ et\ ``c``\ ont\ \u00e9t\u00e9\ correctement\ initialis\u00e9es.\n=

#. name, q11, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ char\ s\='X';\n\ \ \ for(int\ i\=1;i<\=(l*c);i++)\ {\n\ \ \ \ \ \ System.out.print(s);\n\ \ \ \ \ \ int\ reste\=i%c;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println();\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q11, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ char\ s\='X';\n\ \ \ for(int\ i\=0\:i<l;i\=i+1)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<c;j\=j+1)\ {\n\ \ \ \ \ \ \ \ \ System.out.print(s);\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q11, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ char\ s\='X';\n\ \ \ for(int\ i\=0\:i<c;i\=i+1)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<l;j\=j+1)\ {\n\ \ \ \ \ \ \ \ \ System.out.print(s);\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q11, feedback
#: m02_qcm/task.yaml
!\nDans\ quel\ ordre\ les\ caract\u00e8res\ ``X``\ sont-ils\ affich\u00e9s\ ?\ Le\ rectangle\ a-t-il\ bien\ ``l``\ lignes\ et\ ``c``\ colonnes\ ?\n=

#. name, q11, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ char\ c\='X';\n\ \ \ for(int\ i\=0\:i<l;i\=i+1)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<c;i\=i+1)\ {\n\ \ \ \ \ \ \ \ \ System.out.print(c);\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q11, feedback
#: m02_qcm/task.yaml
!\nCe\ programme\ affiche-t-il\ vraiment\ un\ rectangle\ ?\n=

#. name, q12, name
#: m02_qcm/task.yaml
!Calcul\ de\ la\ somme\ des\ diviseurs\ premiers\ d'un\ nombre=

#. name, q12, header
#: m02_qcm/task.yaml
!\nEn\ arithm\u00e9tique,\ certaines\ propri\u00e9t\u00e9s\ sur\ les\ nombres\ entiers\ d\u00e9pendent\ de\ la\ somme\ des\ diviseurs\ entiers\ de\ ce\ nombre.\ Ainsi,\ un\ nombre\ \:math\:`n`\ est\ dit\ `parfait\ <http\://fr.wikipedia.org/wiki/Nombre_parfait>`_\ si\ \:math\:`\\sigma(n)\=2n`\ o\u00f9\ \:math\:`\\sigma(n)`\ est\ la\ somme\ des\ diviseurs\ de\ ce\ nombre.\ Lequel\ des\ fragments\ de\ programmes\ ci-dessous\ place\ dans\ la\ variable\ ``sum``\ la\ somme\ des\ diviseurs\ de\ ``n``\ ?\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=n+1;\n\ \ \ for(int\ i\=2;i<n;i\=i+1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=sum+i;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=sum+i;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=n;i>\=1;i\=i-1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=sum+i;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=2;i<n;i\=i+1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=sum+i;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, feedback
#: m02_qcm/task.yaml
!\nAttention\ \u00e0\ l'initialisation\ de\ la\ variable\ ``sum``.\ ``1``\ et\ ``n``\ sont\ toujours\ diviseurs\ entiers\ de\ ``n``.\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=sum+reste;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, feedback
#: m02_qcm/task.yaml
!\nCe\ fragment\ de\ programme\ modifie-il\ la\ valeur\ de\ ``sum``\ \ ?\n=

#. name, q12, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ sum\=sum+i;\n\ \ \ }\n=

#. name, q12, feedback
#: m02_qcm/task.yaml
!\nCe\ programme\ calcule\ la\ somme\ des\ entiers\ de\ ``1``\ \u00e0\ ``n``\ et\ non\ la\ somme\ des\ diviseurs\ entiers\ de\ ``n``.\n=

#. name, q12, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ sum\=0;\n\ \ \ for(int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ \ sum\=reste;\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q12, feedback
#: m02_qcm/task.yaml
!\nCe\ programme\ calcule\ en\ fait\ le\ plus\ grand\ diviseur\ de\ ``n``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q2, name
#: m02_qcm/task.yaml
!Vocabulaire=

#. name, q2, header
#: m02_qcm/task.yaml
!\nConsid\u00e9rons\ le\ fragment\ de\ programme\ ci-dessous.\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ i;\ \ //\ ligne\ 1\n\ \ \ \ int\ j;\ \ //\ ligne\ 2\n\ \ \ \ i\=12;\ \ \ //\ ligne\ 3\n\ \ \ \ j\=i;\ \ \ \ //\ ligne\ 4\n\ \ \ \ double\ k\=0.0;\ //\ ligne\ 5\n\ \ \ \ if(\ i\=\=j\ )\ {\ \ //\ ligne\ 6\n\ \ \ \ \ \ \ k\=k+1.0;\ \ \ //\ ligne\ 7\n\ \ \ \ }\ \ \ \ \ \ \ \ \ \ \ \ \ //\ ligne\ 8\n\ \ \ \ else\ {\ \ \ \ \ \ \ \ //\ ligne\ 9\n\ \ \ \ \ \ \ k\=k-2.0;\ \ \ //\ ligne\ 10\n\ \ \ \ }\ \ \ \ \ \ \ \ \ \ \ \ \ //\ ligne\ 11\n\nLesquelles\ des\ affirmations\ ci-dessous\ utilisent\ une\ terminologie\ correcte\ ?\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``j``\ est\ une\ variable\ de\ type\ ``int``\ (enti\u00e8re)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``3``\ contient\ une\ affectation\ d'une\ valeur\ \u00e0\ une\ variable\n\ La\ ligne\ ``6``\ est\ une\ instruction\ conditionnelle\n\ ``i\=\=j``\ est\ une\ expression\ qui\ a\ une\ valeur\ bool\u00e9enne\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``k``\ est\ une\ variable\ de\ type\ ``double``\ (r\u00e9el)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``4``\ contient\ une\ affectation\ de\ la\ valeur\ d'une\ expression\ (``i``)\ \u00e0\ une\ variable\n\ La\ ligne\ ``6``\ est\ une\ instruction\ conditionnelle\n\ ``k+1.0``\ est\ une\ expression\ qui\ a\ une\ valeur\ r\u00e9elle\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``j``\ est\ une\ variable\ de\ type\ ``double``\ (r\u00e9elle)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``5``\ contient\ une\ affectation\ d'une\ valeur\ \u00e0\ une\ variable\n\ La\ ligne\ ``6``\ est\ une\ instruction\ conditionnelle\n\ ``i\=\=j``\ est\ une\ expression\ qui\ a\ une\ valeur\ bool\u00e9enne\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``k``\ est\ une\ variable\ de\ type\ ``double``\ (r\u00e9el)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``4``\ contient\ une\ affectation\ de\ la\ valeur\ d'une\ expression\ (``i``)\ \u00e0\ une\ variable\n\ La\ ligne\ ``6``\ est\ une\ instruction\ conditionnelle\n\ ``k+1.0``\ est\ une\ expression\ qui\ a\ une\ valeur\ bool\u00e9enne\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``j``\ est\ une\ variable\ de\ type\ ``int``\ (enti\u00e8re)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``6``\ est\ une\ instruction\ conditionnelle\n\ ``i\=\=j``\ est\ une\ expression\ qui\ a\ une\ valeur\ enti\u00e8re\n=

#. name, q2, text
#: m02_qcm/task.yaml
!``k``\ est\ une\ variable\ de\ type\ ``double``\ (r\u00e9el)\n\ La\ ligne\ ``1``\ contient\ une\ d\u00e9claration\ de\ variable\n\ La\ ligne\ ``4``\ contient\ une\ affectation\ de\ la\ valeur\ d'une\ expression\ (``i``)\ \u00e0\ une\ variable\n\ La\ ligne\ ``6``\ est\ une\ boucle\n\ ``k+1.0``\ est\ une\ expression\ qui\ a\ une\ valeur\ r\u00e9elle\n=

#. name, q3, name
#: m02_qcm/task.yaml
!Instructions\ conditionnelles=

#. name, q3, header
#: m02_qcm/task.yaml
!\nLes\ instructions\ conditionnelles\ peuvent\ parfois\ comporter\ des\ conditions\ plus\ compliqu\u00e9es\ dans\ lesquelles\ des\ conditions\ simples\ sont\ combin\u00e9es\ en\ utilisant\ la\ n\u00e9gation\ (``\!``),\ la\ conjonction\ (``&&``)\ ou\ la\ disjonction\ logique\ (``||``).\ Parmi\ les\ instructions\ conditionnelles\ suivantes,\ quelle\ est\ celle\ dont\ la\ condition\ est\ v\u00e9rifi\u00e9e\ lorsque\ la\ valeur\ de\ la\ variable\ ``x``\ se\ trouve\ dans\ l'intervalle\ \:math\:`[min,max[`\ ?\ On\ supposera\ que\ \:math\:`min<max`.\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x>\=min)\ &&\ (x<max)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x<max)\ &&\ (x>\=min)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ \!(x<min)\ &&\ \!(x>\=max)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\!\ (\ (x<min)\ &&\ (x>\=max)\ )\ ){\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x>\=min)\ ||\ (x<max)\ )\ {\ \ \ }\n=

#. name, q3, feedback
#: m02_qcm/task.yaml
!\nNe\ confondez\ pas\ la\ conjonction\ logique\ (``&&``)\ \ et\ la\ disjonction\ logique\ (``||``).\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x<max)\ ||\ (x>\=min)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ \!(x<min)\ ||\ \!(x>\=max)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\!\ (\ (x<min)\ ||\ (x>\=max)\ )\ ){\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x<min)\ &&\ (x<max)\ )\ {\ \ \ }\n=

#. name, q3, feedback
#: m02_qcm/task.yaml
!\nSachant\ que\ \:math\:`min<max`,\ cette\ condition\ est\ \u00e9quivalente\ \u00e0\ une\ condition\ plus\ simple.\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ (x>max)\ ||\ (x>\=min)\ )\ {\ \ \ }\n=

#. name, q3, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if(\ \!\ (\ (x>min)\ &&\ (x<\=max)\ )\ )\ {\ \ \ }\n=

#. name, q3, feedback
#: m02_qcm/task.yaml
!\nNe\ confondez\ pas\ la\ conjonction\ logique\ (``&&``)\ \ et\ la\ disjonction\ logique\ (``||``).\ Cette\ condition\ ne\ peut\ jamais\ \u00eatre\ vraie\ si\ \:math\:`min<max`\n=

#. name, q4, name
#: m02_qcm/task.yaml
!Instructions\ conditionnelles\ imbriqu\u00e9es=

#. name, q4, header
#: m02_qcm/task.yaml
!\nDans\ un\ programme\ Java,\ il\ est\ parfois\ n\u00e9cessaire\ d'avoir\ une\ instruction\ conditionnelle\ qui\ contient\ elle-m\u00eame\ une\ ou\ plusieurs\ autres\ instructions\ conditionnelles.\ Laquelle\ des\ instructions\ conditionnelles\ suivantes\ affiche-t-elle\ le\ message\ ``ok``\ \u00e0\ l'\u00e9cran\ lorsque\ la\ valeur\ de\ la\ variable\ de\ type\ ``double``\ ``x``\ est\ comprise\ entre\ ``2.0``\ et\ ``5.0``\ ?\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x>\=2.0)\ {\n\ \ \ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ if\ (x>\=2.0)\ {\n\ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x<2.0)\ {\n\ \ \ \ //\ vide\n\ \ \ }\ else\ {\n\ \ \ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m02_qcm/task.yaml
!\nCe\ code\ est\ correct,\ mais\ il\ n'est\ pas\ tr\u00e8s\ lisible.\ Mieux\ vaut\ \u00e9viter\ ce\ genre\ de\ code.\ Il\ est\ pr\u00e9f\u00e9rable\ d'\u00e9crire\ plut\u00f4t.\n\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x>\=2.0)\ {\n\ \ \ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x>\=2.0)\ {\n\ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q4, feedback
#: m02_qcm/task.yaml
!\nCe\ code\ est\ incomplet.\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ System.out.println("ok");\n\ \ \ }\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ if\ (x<2.0)\ {\n\ \ \ \ \ \ \ \ if\ (x<\=5.0)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ }\n=

#. name, q4, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ if\ (x>\=2.0)\ {\n\ \ \ \ \ \ \ \ if\ (x>5.0)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.println("ok");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ }\n=

#. name, q5, name
#. name, q6, name
#. name, q7, name
#: m02_qcm/task.yaml
!Boucles\ for=

#. name, q5, header
#: m02_qcm/task.yaml
!\nLes\ boucles\ ``for``\ sont\ tr\u00e8s\ fr\u00e9quemment\ utilis\u00e9es\ dans\ des\ programmes\ Java.\ Vous\ devez\ pouvoir\ utiliser\ facilement\ de\ telles\ boucles\ dans\ vos\ programmes.\ Parmi\ les\ boucles\ ``for``\ ci-dessous,\ quelle\ est\ celle\ qui\ affiche\ cinq\ fois\ le\ caract\u00e8re\ ``*``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=0;\ i<5;\ i\=i+1)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=5;\ i>0;\ i\=i-1)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(double\ i\=0.0;\ i<1.0;\ i\=i+0.2)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=10;\ i<\=50;\ i\=i+10)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=0;\ i<\=5;\ i\=i+1)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, feedback
#: m02_qcm/task.yaml
!\nCette\ boucle\ ``for``\ commence\ \u00e0\ la\ valeur\ ``0``\ et\ se\ termine\ \u00e0\ la\ valeur\ ``5``.\ Elle\ affiche\ donc\ six\ fois\ le\ caract\u00e8re\ ``\\*``.\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=0;\ i\=\=5;\ i\=i+1)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, feedback
#: m02_qcm/task.yaml
!\nCette\ boucle\ ``for``\ ne\ s'ex\u00e9cute\ jamais.\ La\ condition\ ``i\=\=5``\ n'est\ pas\ v\u00e9rifi\u00e9e\ au\ d\u00e9but\ de\ la\ boucle.\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=5;\ i>\=0;\ i\=i-1)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, feedback
#: m02_qcm/task.yaml
!\nCette\ boucle\ ``for``\ commence\ \u00e0\ la\ valeur\ ``5``\ et\ se\ termine\ \u00e0\ la\ valeur\ ``0``.\ Elle\ affiche\ donc\ six\ fois\ le\ caract\u00e8re\ ``\\*``.\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(double\ i\=0.0;\ i<1.0;\ i\=i-0.2)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, feedback
#: m02_qcm/task.yaml
!\nCette\ boucle\ ne\ se\ termine\ jamais.\n=

#. name, q5, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=0;\ i<\=50;\ i\=i+10)\ {\n\ \ \ \ \ \ System.out.print("*");\n\ \ }\n\ \ System.out.println();\n=

#. name, q5, feedback
#: m02_qcm/task.yaml
!\nCette\ boucle\ commence\ \u00e0\ la\ valeur\ ``0``\ et\ se\ termine\ \u00e0\ la\ valeur\n=

#. name, q6, header
#: m02_qcm/task.yaml
!\nLaquelle\ des\ boucles\ ``for``\ ci-dessous\ affiche\ correctement\ tous\ les\ diviseurs\ entiers\ du\ nombre\ ``n``\ (suppos\u00e9\ strictement\ positif)\ ?\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=1;\ i<\=n;\ i\=i+1)\ {\n\ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ int\ reste;\n\ \ for(int\ i\=n;\ i>\=1;\ i\=i-1)\ {\n\ \ \ \ \ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\n\ \ System.out.println(1);\n\ \ System.out.println(n);\n\ \ for(int\ i\=2;\ i<n;\ i\=i+1)\ {\n\ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=1;\ i<\=n;\ i\=i+1)\ {\n\ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, feedback
#: m02_qcm/task.yaml
!\nLa\ variable\ ``reste``\ est\ de\ type\ ``int``.\ Elle\ ne\ peut\ donc\ pas\ \u00eatre\ utilis\u00e9e\ comme\ condition\ dans\ un\ ``if``.\n=

#. name, q6, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ for(int\ i\=1;\ i<\=n;\ i\=i+1)\ {\n\ \ \ \ \ int\ reste\=n/i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, feedback
#: m02_qcm/task.yaml
!\nNe\ confondez\ pas\ le\ reste\ de\ la\ division\ enti\u00e8re\ (symbole\ ``%``)\ avec\ la\ division\ enti\u00e8re\ elle-m\u00eame\ (symbole\ ``/``)\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ int\ reste;\n\ \ for(int\ i\=n;\ i>1;\ i\=i-1)\ {\n\ \ \ \ \ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, feedback
#: m02_qcm/task.yaml
!\nUn\ nombre\ entier\ est\ toujours\ divisible\ par\ 1.\n=

#. name, q6, text
#: m02_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\n\ \ System.out.println(1);\n\ \ System.out.println(n);\n\ \ for(int\ i\=1;\ i<n;\ i\=i+1)\ {\n\ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ \ }\n\ \ }\n=

#. name, q6, feedback
#: m02_qcm/task.yaml
!\nCe\ programme\ affiche\ deux\ fois\ la\ valeur\ ``1``.\n=

#. name, q7, header
#: m02_qcm/task.yaml
!\nLaquelle\ des\ boucles\ ``for``\ ci-dessous\ affiche\ correctement\ les\ carr\u00e9s\ des\ n\ premiers\ entiers\ positifs\ ?\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=n;i++)\ {\n\ \ \ \ \ \ System.out.println(i*i);\n\ \ \ }\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ int\ carre\=i*i;\n\ \ \ \ \ \ System.out.println(carre);\n\ \ \ }\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=n;i++)\ {\n\ \ \ \ \ \ System.out.println(n*n);\n\ \ \ }\n=

#. name, q7, feedback
#: m02_qcm/task.yaml
!\nQu'affiche\ ce\ programme\ ?\ La\ valeur\ de\ ``n``\ change-t-elle\ durant\ son\ ex\u00e9cution\ ?\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<n;i\=i+1)\ {\n\ \ \ \ \ \ int\ carre\=i*i;\n\ \ \ \ \ \ System.out.println(carre);\n\ \ \ }\n=

#. name, q7, feedback
#: m02_qcm/task.yaml
!\nCombien\ de\ nombres\ sont-il\ affich\u00e9s\ si\ la\ boucle\ d\u00e9marre\ \u00e0\ ``1``\ et\ se\ termine\ \u00e0\ ``n``\ ?\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=n;n++)\ {\n\ \ \ \ \ \ System.out.println(i*i);\n\ \ \ }\n=

#. name, q7, feedback
#: m02_qcm/task.yaml
!\nQu'affiche\ ce\ programme\ ?\ La\ boucle\ se\ termine-t-elle\ ?\n=

#. name, q7, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;\ i<\=n*n;i++)\ {\n\ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q7, feedback
#: m02_qcm/task.yaml
!\nCombien\ de\ nombres\ sont\ affich\u00e9s\ par\ ce\ fragment\ de\ programme.\ S'agit-il\ bien\ des\ carr\u00e9s\ des\ ``n``\ premiers\ entiers\ ?\n=

#. name, q8, name
#. name, q9, name
#: m02_qcm/task.yaml
!Boucles\ for\ imbriqu\u00e9es=

#. name, q8, header
#: m02_qcm/task.yaml
!\nSachant\ que\ ``System.out.print("X");``\ affiche\ le\ caract\u00e8re\ ``X``\ \u00e0\ l'\u00e9cran\ et\ que\ ``System.out.println()``\ force\ un\ retour\ \u00e0\ la\ ligne\ \u00e0\ l'\u00e9cran,\ laquelle\ des\ boucles\ ci-dessous\ affiche-t-elle\ le\ carr\u00e9\ de\ 4x4\ ci-dessous\n\n..\ code-block\:\:\ java\n\n\ \ XXXX\n\ \ XXXX\n\ \ XXXX\n\ \ XXXX\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<16;i++)\ {\n\ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ int\ d\=i%4;\n\ \ \ \ \ \ if(d\=\=0)\ {\n\ \ \ \ \ \ \ \ \ System.out.println();\n\ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<4;i++)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<4;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=4;i++)\ {\n\ \ \ \ \ \ for(int\ j\=1;j<\=4;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<16;i++)\ {\n\ \ \ \ \ \ System.out.print("X");\n\ \ \ }\n=

#. name, q8, feedback
#: m02_qcm/task.yaml
!\nCe\ fragment\ de\ programme\ affiche\ 16\ caract\u00e8res\ sur\ la\ m\u00eame\ ligne,\ ce\ n'est\ pas\ ce\ qui\ est\ demand\u00e9.\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<\=4;i++)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<\=4;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q8, feedback
#: m02_qcm/task.yaml
!\nCe\ fragment\ de\ programme\ affiche\ 5\ caract\u00e8res\ par\ ligne\ et\ 5\ lignes.\ V\u00e9rifiez\ les\ bornes\ de\ la\ boucle\ ``for``.\n=

#. name, q8, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<4;i++)\ {\n\ \ \ \ \ \ for(int\ j\=1;j<4;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q8, feedback
#: m02_qcm/task.yaml
!\nCe\ fragment\ de\ programme\ affiche\ 3\ caract\u00e8res\ par\ ligne\ et\ 3\ lignes.\ V\u00e9rifiez\ les\ bornes\ de\ la\ boucle\ ``for``.\n=

#. name, q9, header
#: m02_qcm/task.yaml
!\nIl\ est\ souvent\ n\u00e9cessaire\ dans\ des\ programmes\ informatiques\ de\ construire\ des\ boucles\ imbriqu\u00e9es,\ c'est-\u00e0-dire\ des\ boucles\ qui\ contiennent\ elles-m\u00eame\ d'autres\ boucles.\ Laquelle\ des\ boucles\ ci-dessous\ affiche-t-elle\ \u00e0\ l'\u00e9cran\ le\ texte\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ X\n\ \ XX\n\ \ XXX\n\ \ XXXX\n\ \ XXXXX\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=5;i++)\ {\n\ \ \ \ \ \ for(int\ j\=1;j<\=i;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<5;i++)\ {\n\ \ \ \ \ \ for(int\ j\=0;j<\=i;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<5;i++)\ {\n\ \ \ \ \ \ for(int\ j\=1;j<\=(i+1);j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=5;i++)\ {\n\ \ \ \ \ \ for(int\ j\=1;j<\=i;i++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q9, feedback
#: m02_qcm/task.yaml
!\nQuelle\ est\ la\ variable\ incr\u00e9ment\u00e9e\ dans\ la\ boucle\ imbriqu\u00e9e\ ?\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=5;i>0;i\=i-1)\ {\n\ \ \ \ \ \ for(int\ j\=y;j>\=i;j\=j-1)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q9, feedback
#: m02_qcm/task.yaml
!\nCe\ fragment\ de\ programme\ affiche\ d'abord\ ``XXXXX``,\ ensuite\ ``XXXX``,\ ...\n=

#. name, q9, text
#: m02_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=1;i<\=5;i++)\ {\n\ \ \ \ \ \ for(int\ j\=i;j<\=5;j++)\ {\n\ \ \ \ \ \ \ \ \ System.out.print("X");\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. context
#: m02dem1/task.yaml
!Voici\ quelques\ questions\ QCM\ pour\ v\u00e9rifier\ votre\ compr\u00e9hension\ de\ la\ Mission\ 2\ du\ cours,\ apr\u00e8s\ lecture\ du\ livre\ de\ r\u00e9f\u00e9rence.=

#. name
#: m02dem1/task.yaml
!Mission\ 2\:\ Question\ de\ d\u00e9marrage\ 1\:\ Les\ bases=

#. name, q1, name
#. name, q2, name
#. name, q3, name
#. name, q4, name
#: m02dem1/task.yaml
!Choix\ multiple=

#. name, q1, header
#: m02dem1/task.yaml
!Quelle\ est\ la\ d\u00e9finition\ la\ plus\ appropri\u00e9e\ pour\ une\ variable\ ?=

#. name, q1, text
#. name, q2, text
#: m02dem1/task.yaml
!Une\ partie\ de\ la\ m\u00e9moire\ r\u00e9serv\u00e9e\ pour\ contenir\ des\ donn\u00e9es=

#. name, q1, text
#. name, q2, text
#: m02dem1/task.yaml
!Un\ morceau\ d'information\ qui\ peut\ \u00eatre\ manipul\u00e9\ par\ un\ programme=

#. name, q1, text
#: m02dem1/task.yaml
!Un\ ensemble\ de\ valeurs\ contigues\ dans\ la\ m\u00e9moire\ auxquelles\ on\ peut\ acc\u00e9der\ en\ fonction\ de\ leur\ position\ dans\ la\ m\u00e9moire=

#. name, q1, text
#. name, q2, text
#: m02dem1/task.yaml
!Une\ entit\u00e9\ abstraite\ qui\ poss\u00e8de\ un\ ensemble\ d'attributs\ et\ d'op\u00e9rations\ qui\ lui\ sont\ propres.=

#. name, q1, text
#: m02dem1/task.yaml
!Une\ liste\ d'entit\u00e9s\ qui\ disposent\ chacune\ de\ la\ r\u00e9f\u00e9rence\ vers\ l'entit\u00e9\ suivante\ de\ la\ liste=

#. name, q1, text
#: m02dem1/task.yaml
!Une\ chaine\ de\ caract\u00e8res,\ dans\ le\ code\ du\ programme,\ qui\ se\ situe\ devant\ le\ caract\u00e8re\ "\="=

#. name, q2, header
#: m02dem1/task.yaml
!Quelle\ est\ la\ d\u00e9finition\ la\ plus\ appropri\u00e9e\ pour\ une\ valeur\ ?=

#. name, q2, text
#: m02dem1/task.yaml
!Une\ suite\ d'instructions\ ex\u00e9cutables\ ou\ non\ par\ un\ programme=

#. name, q2, text
#: m02dem1/task.yaml
!Un\ entier\ ou\ un\ caract\u00e8re=

#. name, q3, header
#: m02dem1/task.yaml
!Selon\ vous,\ quelle\ portion\ de\ code\ correspond\ le\ mieux\ \u00e0\ une\ boucle\ en\ Java\ ?=

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a\ \=\ 1;\n\ \ \ \ int\ b\ \=\ 2;\n\ \ \ \ int\ c\ \=\ 3;\n\ \ \ \ a\ \=\ c;\n\ \ \ \ b\ \=\ a;\n\ \ \ \ c\ \=\ b;\n\ \ \ \ a\ \=\ c;\n\ \ \ \ //\ ...\n=

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a\ \=\ 1;\n\ \ \ \ while(a\ <\ 10){\n\ \ \ \ \ \ \ \ //\ do\ something\n\ \ \ \ \ \ \ \ a++;\n\ \ \ \ }=

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a\ \=\ 1;\n\ \ \ \ while(a\ <\ 10)\ do\ {\n\ \ \ \ \ \ \ \ //\ do\ something\n\ \ \ \ \ \ \ \ a++;\n\ \ \ \ }=

#. name, q3, feedback
#: m02dem1/task.yaml
!"while\ ...\ do"\ n'existe\ pas\ en\ Java.\ =

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\ \=\ 0\ ;\ i\ <\ 37\ ;\ i++){\n\ \ \ \ \ \ \ \ //\ do\ something\ iterative\n\ \ \ \ }=

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ bash\n\n\ \ \ \ for\ i\ in\ 1..15\n\ \ \ \ do\n\ \ \ \ \ \ \ \ \#\ do\ something\ in\ bash\n\ \ \ \ done\n=

#. name, q3, feedback
#: m02dem1/task.yaml
!Cette\ boucle\ n'est\ pas\ \u00e9crite\ en\ Java=

#. name, q3, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a\ \=\ 1;\n\ \ \ \ if(a\ <\ 10){\n\ \ \ \ \ \ \ \ //\ do\ something\ conditionnaly\n\ \ \ \ }\n\ \ \ \ else{\n\ \ \ \ \ \ \ \ //\ do\ something\ otherwise\n\ \ \ \ }=

#. name, q3, feedback
#: m02dem1/task.yaml
!Ce\ n'est\ pas\ une\ boucle\ mais\ un\ branchement\ ``if``=

#. name, q4, header
#: m02dem1/task.yaml
!Lequel\ de\ ces\ bouts\ de\ programmes\ ne\ va\ causer\ aucune\ erreur\ de\ compilation\ ?=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ pi\ \=\ 3.1415;\n\ \ \ \ int\ rayon\ \=\ 3;\n\ \ \ \ int\ perimetre\ \=\ 2*pi*r;\n\ \ \ \ //\ ...=

#. name, q4, feedback
#: m02dem1/task.yaml
!La\ variable\ pi\ est\ de\ type\ ``int``\ et\ ne\ peut\ contenir\ que\ des\ entiers.=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\ \=\ 0\ ;\ i\ <\ 10\ ;\ i++){\n\ \ \ \ \ \ \ \ //\ affiche\ i\ \u00e0\ l'\u00e9cran\n\ \ \ \ \ \ \ \ println(i);\n\ \ \ \ }=

#. name, q4, feedback
#: m02dem1/task.yaml
!Il\ faut\ utiliser\ ``System.out.println()``\ et\ non\ ``println()``=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\ \=\ 0\ ,\ i\ <\ 10\ ,\ i++){\n\ \ \ \ \ \ \ \ System.out.println(i);\n\ \ \ \ }=

#. name, q4, feedback
#: m02dem1/task.yaml
!Dans\ les\ parenth\u00e8ses\ du\ ``for``,\ il\ faut\ mettre\ des\ ";"\ et\ non\ des\ ",".=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ i\ \=\ 1\n\ \ \ \ while(i\ <\ 10){\n\ \ \ \ \ \ \ \ System.out.println(i)\n\ \ \ \ \ \ \ \ i++\n\ \ \ \ }=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a\ \=\ 1;\n\ \ \ \ int\ b\ \=\ 2;\n\ \ \ \ if\ (a\ -\ b\ <\ 0){\n\ \ \ \ \ \ \ \ System.out.println(-(a-b));\n\ \ \ \ }\n\ \ \ \ else{\n\ \ \ \ \ \ \ \ System.out.println(a-b);\n\ \ \ \ }=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\ \=\ 1\ ;\ i\ <\=\ 10\ ;\ i++){\n\ \ \ \ \ \ \ \ System.out.print(i);\n\ \ \ \ }=

#. name, q4, feedback
#: m02dem1/task.yaml
!Correct.\ System.out.print\ permet\ d'afficher\ sans\ mettre\ un\ retour\ \u00e0\ la\ ligne\ \u00e0\ la\ fin.=

#. name, q4, text
#: m02dem1/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ a;\n\ \ \ \ int\ b\ \=\ 2;\n\ \ \ \ if\ (a\ -\ b\ <\ 0){\n\ \ \ \ \ \ \ \ System.out.println(-(a-b));\n\ \ \ \ }\n\ \ \ \ else{\n\ \ \ \ \ \ \ \ System.out.println(a-b);\n\ \ \ \ }=

#. name, q4, feedback
#: m02dem1/task.yaml
!Ne\ compile\ pas\ car\ ``a``\ n'est\ pas\ initialis\u00e9e.=

#. author
#: m02dem2/task.yaml
!Fran\u00e7ois\ MICHEL,\ Cl\u00e9mentine\ MUNYABARENZI,\ Brandon\ NAITALI=

#. context
#: m02dem2/task.yaml
!Les\ boucles,\ notamment\ les\ boucles\ ``for``,\ sont\ un\ concept\ cl\u00e9\ en\ programmation.\ Pour\ vous\ entra\u00eener\ \u00e0\ l'utilisation\ de\ boucles\ ``for``,\ \u00e9crivez\ une\ boucle\ for\ qui\ permettra\ de\ calculer\ la\ somme\ des\ n\ premiers\ entier\ PAIRS\ sup\u00e9rieurs\ \u00e0\ z\u00e9ro,\ en\ fonction\ de\ la\ variable\ n,\ d\u00e9j\u00e0\ d\u00e9finie\ \u00e0\ une\ valeur\ sup\u00e9rieure\ ou\ \u00e9gale\ \u00e0\ z\u00e9ro.\ Le\ r\u00e9sultat\ final\ doit\ \u00eatre\ stock\u00e9\ dans\ la\ variable\ ``sum``\ \u00e0\ la\ fin\ de\ la\ boucle,\ elle\ aussi\ d\u00e9j\u00e0\ d\u00e9finie.\ Lorsque\ n\ est\ n\u00e9gatif,\ le\ r\u00e9sultat\ doit\ valoir\ z\u00e9ro.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\ \=\ //\ n\ peut\ prendre\ n'importe\ quelle\ valeur\n\ \ \ \ int\ sum\ \=\ 0;=

#. name
#: m02dem2/task.yaml
!Mission\ 2\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ Somme\ d'entiers=

#. name, q1, name
#: m02dem2/task.yaml
#, fuzzy
!Somme\ des\ n\ premiers\ entiers\ pairs=You do not write all the first n positive integers

#. name, q1, header
#: m02dem2/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ la\ somme\ des\ ``n``\ premiers\ entiers\ pairs=

#. author
#: m02dem3/task.yaml m02dem4/task.yaml m02dem5/task.yaml m04dem1/task.yaml
#: m04dem2/task.yaml m04dem3/task.yaml m04dem4/task.yaml m10dem1/task.yaml
#: m10dem2/task.yaml
!Fran\u00e7ois\ MICHEL,\ Brandon\ NAITALI=

#. context
#: m02dem3/task.yaml
!Les\ langages\ de\ programmation\ sont\ souvent\ utilis\u00e9s\ \u00e0\ des\ fins\ math\u00e9matiques\ et\ il\ est\ int\u00e9ressant\ de\ savoir\ impl\u00e9menter\ certaines\ fonctions\ math\u00e9matiques\ simples.\n\nDans\ cet\ exercice,\ il\ vous\ est\ demand\u00e9\ d'impl\u00e9menter\ \u00e0\ l'aide\ d'une\ boucle\ une\ portion\ de\ programme\ qui\ permet\ de\ calculer\ un\ entier\ ``a``\ \u00e9lev\u00e9\ \u00e0\ la\ puissance\ ``n``.\n\nNotez\ que\ ``n``\ est\ plus\ grand\ ou\ \u00e9gal\ \u00e0\ z\u00e9ro\ et\ vous\ ne\ devez\ donc\ pas\ g\u00e9rer\ le\ cas\ o\u00f9\ ``n``\ est\ n\u00e9gatif.\ Le\ r\u00e9sultat\ final\ doit\ \u00eatre\ stock\u00e9\ dans\ la\ variable\ ``valeur``,\ qui\ est\ d\u00e9j\u00e0\ initialis\u00e9e\ \u00e0\ 1\ pour\ vous.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\ \=\ //\ n\ est\ non-n\u00e9gatif\n\ \ \ \ int\ a\ \=\ //\ a\ peut\ prendre\ n'importe\ quelle\ valeur\n\ \ \ \ int\ valeur\ \=\ 1;\n\n=

#. name
#: m02dem3/task.yaml
!Mission\ 2\ \:\ Question\ de\ d\u00e9marrage\ 3\ \:\ Puissances=

#. name, q1, name
#: m02dem3/task.yaml
!Puissance\ d'un\ entier=

#. name, q1, header
#: m02dem3/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ l'entier\ ``a``\ \u00e9lev\u00e9\ \u00e0\ la\ puissance\ ``n``.=

#. context
#: m02dem4/task.yaml
!En\ programmation,\ il\ est\ souvent\ int\u00e9ressant\ de\ connaitre\ le\ reste\ de\ la\ divison\ euclidienne\ de\ deux\ nombres,\ notamment\ pour\ savoir\ si\ un\ nombre\ est\ pair\ ou\ non.\ En\ java,\ pour\ conna\u00eetre\ le\ reste\ d'une\ division,\ on\ utilise\ l'instruction\ "modulo"\ (se\ note\ "``%``"),\ ainsi\ ``5\ %\ 3``\ vaut\ ``2``.\ En\ sachant\ cela,\ utilisez\ une\ boucle\ ``for``\ pour\ d\u00e9terminer\ le\ plus\ grand\ diviseur\ entier\ de\ n\ (hormis\ lui-m\u00eame).\n\nPensez\ aux\ cas\ "border\ lines"\ \:\ quand\ ``n``\ vaut\ ``0``\ ou\ ``1``,\ on\ attend\ une\ r\u00e9ponse\ \u00e9gale\ \u00e0\ ``0``.\ La\ r\u00e9ponse\ finale\ doit-\u00eatre\ stock\u00e9e\ dans\ la\ variable\ ``biggest``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\ \=\ //\ n\ est\ plus\ grand\ ou\ \u00e9gal\ \u00e0\ 0\n\ \ \ \ int\ biggest\ \=\ 0;\n=

#. name
#: m02dem4/task.yaml
!Mission\ 2\ \:\ Question\ de\ d\u00e9marrage\ 4\ \:\ Plus\ grand\ diviseur=

#. name, q1, name
#: m02dem4/task.yaml
!Plus\ grand\ diviseur=

#. name, q1, header
#: m02dem4/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ permettant\ de\ calculer\ le\ plus\ grand\ diviseur\ entier\ de\ ``n``\ =

#. context
#: m02dem5/task.yaml
!Les\ nombres\ premiers\ sont\ un\ concept\ important\ en\ math\u00e9matiques.\ Un\ nombre\ premier\ est\ un\ nombre\ entier\ qui\ n'a\ pour\ diviseurs\ que\ 1\ et\ lui-m\u00eame.\ Notez\ que\ 0\ et\ 1\ ne\ sont\ pas\ des\ nombres\ premiers.\ En\ utilisant\ une\ boucle\ for,\ \u00e9crivez\ un\ petit\ bout\ de\ code\ permettant\ de\ v\u00e9rifier\ si\ le\ nombre\ n\ est\ premier\ ou\ non.\ Vous\ devez\ stocker\ votre\ r\u00e9ponse\ dans\ la\ variable\ bool\u00e9enne\ ``prime``\ une\ fois\ la\ boucle\ termin\u00e9e,\ d\u00e9j\u00e0\ initialis\u00e9e\ \u00e0\ ``true``\ pour\ vous.\ Une\ fois\ votre\ programme\ termin\u00e9,\ prime\ vaudra\ ``true``\ si\ n\ est\ premier,\ et\ ``false``\ si\ n\ n'est\ pas\ premier.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\ \=\ //\ n\ est\ plus\ grand\ ou\ \u00e9gal\ \u00e0\ z\u00e9ro\n\ \ \ \ boolean\ prime\ \=\ true;\n=

#. name
#: m02dem5/task.yaml
!Mission\ 2\ \:\ Question\ de\ d\u00e9marrage\ 5\ \:\ Nombres\ premiers=

#. name, q1, name
#: m02dem5/task.yaml
!Nombres\ premiers=

#. name, q1, header
#: m02dem5/task.yaml
!\u00c9crivez\ ici\ le\ bout\ de\ programme\ \:=

#. author
#: m02ec1/task.yaml
!Cl\u00e9mentine\ Munyabarenzi=

#. context
#: m02ec1/task.yaml
!Pouvez-vous\ pr\u00e9dire\ la\ sortie\ du\ code\ suivant\ en\ moins\ de\ 5\ secondes?\n\n..\ code-block\:\:\ java\n\n\ \ \ \ for(\ int\ i\ \=\ 0\ ;\ i\ <\ 5;\ i++)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ System.out.println("\u2217\u2217\u2217\u2217\u2217")\ ;\n\ \ \ \ }=

#. name
#: m02ec1/task.yaml
!Mission\ 2\ \:\ Exercice\ compl\u00e9mentaire\ 1\ \:\ Exercice\ rapide=

#. name, Question1, name
#: m02ec1/task.yaml
!choix\ multiple=

#. name, Question1, text
#: m02ec1/task.yaml
!\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217=

#. name, Question1, text
#: m02ec1/task.yaml
!\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217\n\n\u2217\u2217\u2217\u2217\u2217=

#. name, Question1, text
#: m02ec1/task.yaml
!\u2217\u2217\u2217\u2217\u2217=

#. context
#: m02real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 2.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ Equation.java\n-\ EquationSimple.java\n-\ TextIO.java\n-\ README.txt=

#. name
#: m02real/task.yaml
!Mission\ 2\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m02real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 2=

#. author
#: m03Q1/task.yaml m04Q1/task.yaml m04Q2/task.yaml m04Q3/task.yaml
#: m04Q4/task.yaml m04Q5/task.yaml m04Q6/task.yaml m04Q8/task.yaml
#: m04Q9/task.yaml m06Q1/task.yaml m06Q10/task.yaml m06Q11/task.yaml
#: m06Q2/task.yaml m06Q3/task.yaml m06Q4/task.yaml m06Q5/task.yaml
#: m06Q6/task.yaml m06Q7/task.yaml m06Q8/task.yaml m06Q9/task.yaml
#: m07Q1/task.yaml m07Q10/task.yaml m07Q11/task.yaml m07Q2/task.yaml
#: m07Q3/task.yaml m07Q4/task.yaml m07Q5/task.yaml m07Q6/task.yaml
#: m07Q7/task.yaml m07Q8/task.yaml m07Q9/task.yaml m08Q1/task.yaml
#: m08Q2/task.yaml m08Q3/task.yaml m08Q4/task.yaml m08Q5/task.yaml
#: m08Q6/task.yaml m08Q7/task.yaml m09Q1/task.yaml m09Q2/task.yaml
#: m09Q3/task.yaml m09Q4/task.yaml m09Q5/task.yaml m09Q6/task.yaml
#: m09Q7/task.yaml m10Q1/task.yaml m10Q3/task.yaml m10Q5/task.yaml
#: m10Q6/task.yaml m11Q5/task.yaml
!Ludovic\ TAFFIN=

#. context
#: m03Q1/task.yaml
!On\ vous\ demande\ d'\u00e9crire\ une\ m\u00e9thode\ permettant\ de\ dire\ si\ un\ nombre\ se\ trouve\ dans\ l'intervalle\ ferm\u00e9\ \:math\:`[a,b]`\ dont\ les\ sp\u00e9cifications\ sont\ les\ suivantes\:\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ a\ <\ b\n\ \ \ \ *\ @post\ retourne\ true\ si\ x\ est\ dans\ [a,b]\ false\ sinon\n\ \ \ \ */\n\n\nVotre\ m\u00e9thode\ devra\ s'appeler\ ``intervalle``\ et\ prendra\ comme\ premier\ argument\ ``a``,\ la\ borne\ inf\u00e9rieure\ de\ l'intervalle,\ comme\ deuxi\u00e8me\ argument,\ ``b``,\ la\ borne\ sup\u00e9rieure\ et\ comme\ dernier\ argument\ la\ valeur\ \u00e0\ tester.\ Ces\ trois\ arguments\ sont\ des\ entiers.\n\n\n=

#. name
#: m03Q1/task.yaml
!Mission\ 3\ \:\ \ Q*\ intervalle\ ferm\u00e9=

#. name, q1, name
#: m03Q1/task.yaml
!M\u00e9thode\ intervalle=

#. name, q1, header
#: m03Q1/task.yaml
!\u00c9crivez\ ici\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ intervalle.=

#. context
#: m03Q2/task.yaml
!On\ vous\ demande\ d'\u00e9crire\ la\ m\u00e9thode\ ``surface``\ qui\ permet\ de\ calculer\ la\ surface\ d'un\ rectangle.\ On\ supposera\ que\ la\ ``longueur``\ et\ la\ ``largeur``\ qui\ sont\ pass\u00e9es\ en\ arguments\ sont\ des\ entiers\ positifs.\n\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ largeur\ >\ 0,\ longueur\ >\ 0\n\ \ \ \ *\ @post\ retourne\ la\ surface\ du\ rectangle\ dont\ les\n\ \ \ \ *\ \ \ \ \ \ \ largeur\ et\ longueur\ sont\ donn\u00e9es.\n\ \ \ \ */\n=

#. name
#: m03Q2/task.yaml
!Mission\ 3\ \:\ Q*\ Calculer\ la\ surface\ d'un\ rectangle=

#. name, q1, name
#: m03Q2/task.yaml
!Surface=

#. context
#: m03Q3/task.yaml
!Ecrivez\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ ``max``\ qui\ prend\ comme\ \ param\u00e8tres\ les\ entiers\ ``a``,\ ``b``\ ,\ ``c``\ qui\ retourne\ le\ maximum\ de\ 3\ nombres\ et\ dont\ la\ sp\u00e9cification\ est\:\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\n\ \ \ \ *\ @post\ retourne\ le\ maximum\ entre\ les\ entiers\ a,\ b\ et\ c\n\ \ \ \ */\n\nVous\ pouvez\ r\u00e9utiliser\ votre\ code\ de\ la\ question\ suppl\u00e9mentaire\ maximum\ de\ la\ mission\ 1.=

#. name
#: m03Q3/task.yaml
!Mission\ 3\ \:\ \ Q*\ \ Maximum=

#. name, q1, name
#: m03Q3/task.yaml
!Ecrivez\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ max.=

#. author
#: m03Q4/task.yaml m05Q10/task.yaml m05Q11/task.yaml m05Q2/task.yaml
#: m05Q3/task.yaml m05Q5/task.yaml m05Q6/task.yaml m05Q7/task.yaml
#: m05Q8/task.yaml m11Q1/task.yaml m11Q2/task.yaml m11Q3/task.yaml
#: m11Q4/task.yaml m11Q6/task.yaml
!Ludovic\ TAFFIN,\ Olivier\ Martin=

#. context
#: m03Q4/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``mediane``\ qui\ prend\ comme\ arguments\ trois\ entiers\ et\ retourne\ la\ `m\u00e9diane\ <https\://fr.wikipedia.org/wiki/M\u00e9diane_(statistiques)>`_\ entre\ ces\ nombres.\n\nPour\ vous\ aider\ on\ vous\ donne\ les\ m\u00e9thodes\ ``public\ static\ int\ min(int\ x,\ int\ y)``\ et\ ``public\ static\ int\ max(int\ x,\ int\ y)``\ que\ vous\ pouvez\ utiliser\ dans\ votre\ code.\ Leurs\ sp\u00e9cifications\ sont\ \:\n\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ le\ minimum\ entre\ a\ et\ b\n\ \ \ \ */\n\ \ \ public\ static\ int\ min(int\ a,\ int\ b);\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ le\ maximum\ entre\ a\ et\ b\n\ \ \ \ */\n\ \ \ public\ static\ int\ max(int\ a,\ int\ b);\n\n\n\n=

#. name
#: m03Q4/task.yaml
!Mission\ 3\ \:\ Q**\ M\u00e9diane=

#. name, q1, header
#: m03Q4/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ permettant\ de\ calculer\ la\ m\u00e9diane=

#. context
#: m03Q5/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``volume``\ qui\ calcule\ le\ volume\ d'une\ `sph\u00e8re\ <https\://fr.wikipedia.org/wiki/Sph\u00e8re>`_.\nElle\ prend\ en\ param\u00e8tre\ le\ rayon\ de\ la\ sph\u00e8re\ (nombre\ r\u00e9el).\n\nPour\ rappel,\ le\ volume\ d'une\ sph\u00e8re\ de\ rayon\ r\ est\ \:math\:`\\frac{4\\times\\pi\\times{r^{3}}}{3}`\n\nEn\ Java,\ la\ constante\ \:math\:`\\pi`\ est\ d\u00e9finie\ dans\ la\ classe\ `Math\ <https\://docs.oracle.com/javase/7/docs/api/java/lang/Math.html>`_\ comme\ la\ constante\ ``Math.PI``\n\n=

#. name
#: m03Q5/task.yaml
!Mission\ 3\ \:\ Q*\ \ Calcul\ du\ volume\ d'une\ sph\u00e8re=

#. name, q1, name
#: m03Q5/task.yaml
!Ecrivez\ la\ signature\ et\ le\ corps\ de\ votre\ m\u00e9thode.=

#. context
#: m03Q6/task.yaml
!La\ `factorielle\ <https\://fr.wikipedia.org/wiki/Factorielle>`_\ d'un\ entier\ ``n``\ est\ le\ produit\ des\ nombres\ entiers\ strictement\ positifs\ inf\u00e9rieurs\ ou\ \u00e9gaux\ \u00e0\ ``n``.\n\nEcrivez\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ ``fact``\ dont\ les\ sp\u00e9cifications\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ *\ @post\ retourne\ la\ valeur\ de\ la\ factorielle\ de\ n\n\ \ \ \ */=

#. name
#: m03Q6/task.yaml
!Mission\ 3\ \:\ Q**\ Calcul\ de\ la\ factorielle=

#. name, q1, name
#: m03Q6/task.yaml
!Signature\ et\ corps\ de\ la\ m\u00e9thode\ fact=

#. context
#: m03Q7/task.yaml
!En\ math\u00e9matiques,\ un\ nombre\ entier\ est\ un\ `carr\u00e9\ parfait\ <https\://fr.wikipedia.org/wiki/Carr\u00e9_parfait>`_\ si\ il\ est\ le\ carr\u00e9\ d'un\ autre\ nombre\ entier.\n\nEcrivez\ la\ m\u00e9thode\ ``carparf``\ dont\ les\ sp\u00e9cifications\ sont\ (``x``\ est\ un\ entier)\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ true\ si\ l'entier\ x\ est\n\ \ \ \ *\ un\ carr\u00e9\ parfait,\ false\ sinon\n\ \ \ \ */=

#. name
#: m03Q7/task.yaml
!Mission\ 3\ \:\ Q**\ Carr\u00e9\ parfait=

#. name, q1, header
#: m03Q7/task.yaml
!Ecrivez\ ici\ la\ m\u00e9thode\ carparf=

#. author
#: m03_bf/task.yaml m05_bf/task.yaml m05dem1/task.yaml
!Olivier\ Martin=

#. context
#: m03_bf/task.yaml
!Un\ \u00e9tudiant\ a\ \u00e9crit\ le\ programme\ Java\ suivant\ qui\ permet\ de\ compter\ le\ nombre\ de\ chiffres\ de\ la\ repr\u00e9sentation\ d\u00e9cimale\ d'un\ nombre\ naturel\ donn\u00e9.\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ public\ static\ void\ main(String[]\ args)\ {\n\ \ \ \ \ \ \ \ String\ strPair\ \=\ "\ a\ un\ nombre\ pair\ de\ chiffres\ dans\ sa\ repr\u00e9sentation\ d\u00e9cimale";\n\ \ \ \ \ \ \ \ String\ strImpair\ \=\ "\ a\ un\ nombre\ impair\ de\ chiffres\ dans\ sa\ repr\u00e9sentation\ d\u00e9cimale";\n\ \ \ \ \ \ \ \ int\ n\ \=\ 0;\n\ \ \ \ \ \ \ \ while\ (n\ \!\=\ -1)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.print("Entrez\ un\ nombre\ (-1\ pour\ arr\u00eater)\ \:");\n\ \ \ \ \ \ \ \ \ \ \ \ n\ \=\ TextIO.getlnInt();\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (n\ \!\=\ -1)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.print(n);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (chiffresPairs(n))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(strPair);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(strImpair);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nVous\ devez\ d\u00e9finir\ la\ m\u00e9thode\ ``chiffresPairs``\ qui\ renvoie\ ``true``\ si\ le\ nombre\ de\ chiffres\ de\ son\ param\u00e8tre\ est\ pair\ et\ ``false``\ sinon.\ N'h\u00e9sitez\ pas\ \u00e0\ d\u00e9composer\ le\ probl\u00e8me\ en\ sous-probl\u00e8mes\ et\ de\ d\u00e9finir\ des\ m\u00e9thodes\ priv\u00e9es\ compl\u00e9mentaires.\n\nVoici\ un\ exemple\ \:\n\n-\ ``chiffresPairs(5555)``\ doit\ retourner\ ``true``\n-\ ``chiffresPairs(555)``\ doit\ retourner\ ``false``\n-\ ``chiffresPairs(-555)``\ doit\ retourner\ ``false``\n=

#. name
#: m03_bf/task.yaml
!Mission\ 3\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, header
#: m03_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``chiffresPairs``.\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ Renvoie\ true\ si\ le\ nombre\ de\ chiffres\ n\ est\ pair\ et\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ static\ boolean\ chiffresPairs(int\ n)=

#. name, q2, header
#: m03_bf/task.yaml
!D\u00e9clarez\ ici\ les\ m\u00e9thodes\ que\ vous\ souhaitez\ utiliser\ pour\ d\u00e9composer\ le\ probl\u00e8me\ en\ sous-probl\u00e8mes.\ Attention,\ veillez\ \u00e0\ n'utiliser\ que\ des\ m\u00e9thodes\ de\ classe\ ``static``.\n=

#. context
#: m03_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 3.\ M\u00e9thodes\ et\ sous-routines\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ -\ |jn4|_\n\n\ \ \ \ -\ |jn4.1|_\n\ \ \ \ -\ |jn4.2|_\n\n\ \ \ \ -\ |jn4.2.1|_\n\ \ \ \ -\ |jn4.2.2|_\n\ \ \ \ -\ |jn4.2.3|_\n\ \ \ \ -\ |jn4.2.4|_\n\n\ \ \ \ -\ |jn4.3|_\n\n\ \ \ \ \ \ \ \ -\ |jn4.3.1|_\n\ \ \ \ \ \ \ \ -\ |jn4.3.2|_\n\ \ \ \ \ \ \ \ -\ |jn4.3.3|_\n\ \ \ \ \ \ \ \ -\ |jn4.3.4|_\n\ \ \ \ \ \ \ \ -\ |jn4.3.6|_\n\n\ \ \ \ -\ |jn4.4|_\n\n\ \ \ \ \ \ \ \ -\ |jn4.4.1|_\n\ \ \ \ \ \ \ \ -\ |jn4.4.2|_\n\ \ \ \ \ \ \ \ -\ |jn4.4.3|_\n\n\ \ \ \ -\ |jn4.6|_\n\n\ \ \ \ -\ |jn4.6.1|_\n\n\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn4\ \:\ http\://math.hws.edu/javanotes/c4/index.html\n..\ |jn4|\ replace\:\:\ `4\ \:\ Programming\ in\ the\ Large\ I\:\ Subroutines`\n\n..\ _jn4.1\ \:\ http\://math.hws.edu/javanotes/c4/s1.html\n..\ |jn4.1|\ replace\:\:\ `4.1\ \:\ Black\ Boxes`\n\n..\ _jn4.2\ \:\ http\://math.hws.edu/javanotes/c4/s2.html\n..\ |jn4.2|\ replace\:\:\ `4.2\ \:\ Static\ Subroutines\ and\ Static\ Variables`\n\n..\ _jn4.2.1\ \:\ http\://math.hws.edu/javanotes/c4/s2.html\#subroutines.2.1\n..\ |jn4.2.1|\ replace\:\:\ `4.2.1\:\ Subroutine\ Definitions`\n\n..\ _jn4.2.2\ \:\ http\://math.hws.edu/javanotes/c4/s2.html\#subroutines.2.2\n..\ |jn4.2.2|\ replace\:\:\ `4.2.2\ \:\ Calling\ Subroutines`\n\n..\ _jn4.2.3\ \:\ http\://math.hws.edu/javanotes/c4/s2.html\#subroutines.2.3\n..\ |jn4.2.3|\ replace\:\:\ `4.2.3\ \:\ Subroutines\ in\ Programs`\n\n..\ _jn4.2.4\ \:\ http\://math.hws.edu/javanotes/c4/s2.html\#subroutines.2.4\n..\ |jn4.2.4|\ replace\:\:\ `4.2.4\ \:\ Member\ Variables`\n\n..\ _jn4.3\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\n..\ |jn4.3|\ replace\:\:\ `4.3\ \:\ Parameters`\n\n..\ _jn4.3.1\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.1\n..\ |jn4.3.1|\ replace\:\:\ `4.3.1\ \:\ Using\ Parameters`\n\n..\ _jn4.3.2\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.2\n..\ |jn4.3.2|\ replace\:\:\ `4.3.2\ \:\ Formal\ and\ Actual\ Parameters`\n\n..\ _jn4.3.3\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.3\n..\ |jn4.3.3|\ replace\:\:\ `4.3.3\ \:\ Overloading`\n\n..\ _jn4.3.4\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.4\n..\ |jn4.3.4|\ replace\:\:\ `4.3.4\ \:\ Subroutine\ Examples`\n\n..\ _jn4.3.6\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.6\n..\ |jn4.3.6|\ replace\:\:\ `4.3.6\ \:\ Global\ and\ Local\ Variables`\n\n..\ _jn4.4\ \:\ http\://math.hws.edu/javanotes/c4/s4.html\n..\ |jn4.4|\ replace\:\:\ `4.4\ \:\ Return\ Values`\n\n..\ _jn4.4.1\ \:\ http\://math.hws.edu/javanotes/c4/s4.html\#subroutines.4.1\n..\ |jn4.4.1|\ replace\:\:\ `4.4.1\ \:\ The\ return\ statement`\n\n..\ _jn4.4.2\ \:\ http\://math.hws.edu/javanotes/c4/s4.html\#subroutines.4.2\n..\ |jn4.4.2|\ replace\:\:\ `4.4.2\ \:\ Function\ Examples`\n\n..\ _jn4.4.3\ \:\ http\://math.hws.edu/javanotes/c4/s4.html\#subroutines.4.3\n..\ |jn4.4.3|\ replace\:\:\ `4.4.3\ \:\ 3N+1\ Revisited`\n\n..\ _jn4.6\ \:\ http\://math.hws.edu/javanotes/c4/s6.html\n..\ |jn4.6|\ replace\:\:\ `4.6\ \:\ More\ on\ Program\ Design`\n\n..\ _jn4.6.1\ \:\ http\://math.hws.edu/javanotes/c4/s6.html\#subroutines.6.1\n..\ |jn4.6.1|\ replace\:\:\ `4.6.1\ \:\ Preconditions\ and\ Postconditions`\n=

#. name
#: m03_qcm/task.yaml
!Mission\ 3\:\ QCM=

#. name, q1, name
#: m03_qcm/task.yaml
!Appel\ de\ m\u00e9thodes\ de\ la\ classe\ Math=

#. name, q1, header
#: m03_qcm/task.yaml
!\nLa\ classe\ ``Math``,\ d\u00e9crite\ dans\ la\ section\ |jn2.3.1|_\ du\ livre\ contient\ diff\u00e9rentes\ m\u00e9thodes\ de\ calcul.\ Celles-ci\ sont\ d\u00e9finies\ plus\ en\ d\u00e9tails\ dans\ http\://docs.oracle.com/javase/6/docs/api/java/lang/Math.html.\ Parmi\ les\ fragments\ de\ programme\ ci-dessous,\ quels\ sont\ ceux\ qui\ sont\ corrects\ \:\n\n\n..\ _jn2.3.1\:\ http\://math.hws.edu/javanotes/c2/s3.html\#basics.3.1\n..\ |jn2.3.1|\ replace\:\:\ `2.3.1\ \:\ Built-in\ Subroutines\ and\ Functions`\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(j);\n\ \ \ double\ f\=Math.exp(d);\n\ \ \ double\ r\=Math.rint(e);\n\ \ \ double\ w\=Math.random();\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(d);\n\ \ \ double\ f\=Math.exp(e);\n\ \ \ double\ r\=Math.rint(d);\n\ \ \ double\ x\=Math.random();\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(j);\n\ \ \ double\ f\=Math.exp(e);\n\ \ \ int\ r\=Math.rint(d);\n\ \ \ double\ w\=Math.random();\n=

#. name, q1, feedback
#: m03_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.rint``\ prend\ comme\ argument\ un\ r\u00e9el\ et\ retourne\ un\ r\u00e9el\ (m\u00eame\ si\ celui-ci\ a\ une\ valeur\ enti\u00e8re).\ Ceci\ vous\ est\ indiqu\u00e9\ par\ le\ type\ retourn\u00e9\ par\ la\ m\u00e9thode\ ``Math.rint``\ dans\ la\ documentation.\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(j);\n\ \ \ double\ f\=Math.exp(i);\n\ \ \ double\ r\=Math.rint(e);\n\ \ \ double\ w\=Math.random();\n=

#. name, q1, feedback
#: m03_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.exp``\ prend\ comme\ argument\ un\ r\u00e9el.\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(j);\n\ \ \ double\ f\=Math.exp(d);\n\ \ \ double\ r\=Math.rint(e);\n\ \ \ int\ w\=Math.random();\n=

#. name, q1, feedback
#: m03_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.random``\ retourne\ toujours\ une\ valeur\ de\ type\ ``double``.\n=

#. name, q1, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ i\=1;\n\ \ \ int\ j\=-1;\n\ \ \ double\ d\=2.0;\n\ \ \ double\ e\=3.0;\n\ \ \ int\ k\=Math.abs(i);\n\ \ \ double\ h\=Math.exp(e);\n\ \ \ double\ r\=Math.rint(d);\n\ \ \ Math.random();\n=

#. name, q1, feedback
#: m03_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.random``\ retourne\ toujours\ une\ valeur\ de\ type\ ``double``.\ Elle\ ne\ peut\ donc\ jamais\ \u00eatre\ utilis\u00e9e\ comme\ une\ m\u00e9thode\ ``void``.\n=

#. name, q10, name
#: m03_qcm/task.yaml
!Les\ nombres\ amicaux=

#. name, q10, header
#: m03_qcm/task.yaml
!\n\nDeux\ nombres\ entiers\ positifs\ sont\ dits\ `amicaux\ <http\://fr.wikipedia.org/wiki/Nombre_amical>`_\ si\ la\ somme\ des\ diviseurs\ entiers\ de\ l'un\ est\ \u00e9gal\ \u00e0\ la\ somme\ des\ diviseurs\ entiers\ de\ l'autre.\ Pour\ v\u00e9rifier\ si\ deux\ nombres\ sont\ amicaux,\ le\ plus\ simple\ est\ d'utiliser\ une\ m\u00e9thode\ qui\ calcule\ la\ somme\ des\ diviseurs\ entiers\ d'un\ nombre\ et\ d'ensuite\ comparer\ les\ deux\ sommes.\ Supposons\ que\ cette\ m\u00e9thode\ existe\ et\ est\ d\u00e9finie\ comme\ suit\ \:\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ \:\ n>0\n\ \ \ \ \ *\ @post\ \:\ retourne\ la\ somme\ des\ diviseurs\ entiers\ de\ n\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int\ sdiv(int\ n)\ {\n\ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\nLaquelle\ des\ m\u00e9thodes\ ci-dessous\ retourne-t-elle\ ``true``\ lorsque\ les\ deux\ nombres\ pass\u00e9s\ en\ argument\ sont\ amicaux\ et\ ``false``\ \ sinon\ ?\n=

#. name, q10, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ amical(int\ a,\ int\ b)\ {\n\ \ \ \ \ \ int\ sdiv1\=sdiv(a);\n\ \ \ \ \ \ int\ sdiv2\=sdiv(b);\n\ \ \ \ \ \ return\ (sdiv1\=\=sdiv2);\n\ \ \ }\n=

#. name, q10, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ amical(int\ a,\ int\ b)\ {\n\ \ \ \ \ \ return\ (sdiv(a)\=\=sdiv(b));\n\ \ \ }\n=

#. name, q10, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ amical(int\ a,\ int\ b)\ {\n\ \ \ \ \ \ int\ sdiv1\=sdiv(a);\n\ \ \ \ \ \ int\ sdiv2\=sdiv(b);\n\ \ \ \ \ \ return\ (sdiv1\=\=sdiv2);\n\ \ \ }\n=

#. name, q10, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ est\ d\u00e9finie\ comme\ retournant\ un\ entier\ alors\ qu'elle\ retourne\ en\ fait\ un\ bool\u00e9en.\ Elle\ ne\ se\ compile\ pas.\n=

#. name, q10, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ amical(int\ a,\ int\ b)\ {\n\ \ \ \ \ \ int\ sdiv1\=sdiv(a);\n\ \ \ \ \ \ int\ sdiv2\=sdiv(b);\n\ \ \ }\n=

#. name, q10, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ est\ d\u00e9finie\ comme\ retournant\ un\ bool\u00e9en\ alors\ qu'elle\ retourne\ rien.\ Elle\ ne\ se\ compile\ pas.\n=

#. name, q10, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ amical(int\ c,\ int\ d)\ {\n\ \ \ \ \ \ sdiv1\=sdiv(d);\n\ \ \ \ \ \ sdiv2\=sdiv(c);\n\ \ \ \ \ \ return\ (sdiv1\=\=sdiv2);\n\ \ \ }\n=

#. name, q10, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Les\ variables\ ``sdiv1``\ et\ ``sdiv2``\ doivent\ \u00eatre\ d\u00e9clar\u00e9es\ avant\ de\ pouvoir\ \u00eatre\ utilis\u00e9es.\n=

#. name, q2, name
#. name, q1, name
#: m03_qcm/task.yaml rev_qcm/task.yaml
!Utilisation\ de\ m\u00e9thodes=

#. name, q2, header
#: m03_qcm/task.yaml
!\nUn\ \u00e9tudiant\ \u00e9crit\ dans\ un\ programme\ Java\ le\ code\ suivant\ \:\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ double\ d\=123.45;\n\ \ \ \ int\ i\=12;\n\ \ \ \ if(\ f(d,i)\ )\ {\ ...\ }\n\nQuelle\ doit\ \u00eatre\ la\ d\u00e9claration\ de\ la\ m\u00e9thode\ ``f``\ pour\ que\ ce\ fragment\ de\ programme\ soit\ valide\ ?\n=

#. name, q2, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ f(\ double\ d,\ int\ i)\ {\n\ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n=

#. name, q2, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ f(\ double\ a,\ int\ b)\ {\n\ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n=

#. name, q2, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ f(\ int\ a,\ int\ b)\ {\n\ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n=

#. name, q2, feedback
#: m03_qcm/task.yaml
!\nPour\ pouvoir\ \u00eatre\ utilis\u00e9e\ dans\ une\ condition,\ la\ m\u00e9thode\ ``f``\ doit\ retourner\ une\ valeur\ de\ type\ ``boolean``.\ La\ d\u00e9claration\ ci-dessus\ retourne\ une\ valeur\ de\ type\ ``int``.\ En\ outre,\ le\ premier\ argument\ de\ la\ m\u00e9thode\ ``f``\ est\ un\ ``int``\ alors\ que\ l'\u00e9tudiant\ passe\ un\ ``double``.\n=

#. name, q2, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ f(\ double\ x,\ double\ y)\ {\n\ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n=

#. name, q2, feedback
#: m03_qcm/task.yaml
!\nPour\ pouvoir\ \u00eatre\ utilis\u00e9e\ dans\ une\ condition,\ la\ m\u00e9thode\ ``f``\ doit\ retourner\ une\ valeur\ de\ type\ ``boolean``.\ La\ d\u00e9claration\ ci-dessus\ retourne\ une\ valeur\ de\ type\ ``double``.\ En\ outre,\ le\ second\ argument\ de\ la\ m\u00e9thode\ ``f``\ est\ un\ ``double``\ alors\ que\ l'\u00e9tudiant\ passe\ un\ ``int``.\n=

#. name, q3, name
#: m03_qcm/task.yaml
!M\u00e9thodes\ permettant\ d'afficher=

#. name, q3, header
#: m03_qcm/task.yaml
!\nUn\ \u00e9tudiant\ souhaite\ une\ m\u00e9thode\ ``affiche``\ permettant\ d'afficher\ ``n``\ fois\ le\ caract\u00e8re\ ``X``\ \u00e0\ l'\u00e9cran.\ La\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ n>0\n\ \ *\ @post\ affiche\ n\ fois\ le\ caract\u00e8re\ 'X'\ sur\ une\ ligne\n\ \ */\n\n\nIl\ souhaite\ pouvoir\ utiliser\ cette\ m\u00e9thode\ de\ la\ fa\u00e7on\ suivante\ \:\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ n\=17;\n\ \ \ \ affiche(n);\n\nLors\ de\ son\ ex\u00e9cution,\ cette\ m\u00e9thode\ affiche\ \u00e0\ l'\u00e9cran\n\n..\ code-block\:\:\ java\n\n\ \ \ \ XXXXXXXXXXXXXXXXX\n\nParmi\ les\ m\u00e9thodes\ d\u00e9finies\ ci-dessous,\ laquelle\ est\ une\ impl\u00e9mentation\ (signature\ et\ corps)\ correct\ de\ cette\ m\u00e9thode\ ``affiche``\ ?\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ affiche(int\ n)\ {\n\ \ \ \ \ \ for\ (int\ i\=0;i<n;i\=i+1)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ affiche(int\ n)\ {\n\ \ \ \ \ \ for\ (int\ i\=1;i<\=n;i\=i+1)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ affiche(int\ n)\ {\n\ \ \ \ \ \ for\ (int\ i\=n;i>0;i\=i-1)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ affiche(int\ nombre)\ {\n\ \ \ \ \ \ for\ (int\ j\=0;j<nombre;j++)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Elle\ est\ d\u00e9clar\u00e9e\ comme\ retournant\ un\ ``int``\ et\ ne\ contient\ pas\ d'instruction\ ``return``.\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ affiche(\ nombre)\ {\n\ \ \ \ \ \ for\ (int\ j\=0;j<nombre;j++)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Le\ type\ de\ son\ premier\ argument\ n'est\ pas\ sp\u00e9cifi\u00e9.\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ affiche(int\ n)\ {\n\ \ \ \ \ \ for\ (int\ i\=1;i<\=n;)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, feedback
#: m03_qcm/task.yaml
!\nCe\ m\u00e9thode\ boucle\ ind\u00e9finiment.\ Pouvez-vous\ voir\ pourquoi\ ?\n=

#. name, q3, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ affiche(int\ n)\ {\n\ \ \ \ \ \ for\ (int\ i\=n;;i--)\ {\n\ \ \ \ \ \ \ \ \ \ System.out.print('X');\n\ \ \ \ \ \ }\n\ \ \ \ \ \ System.out.println();\n\ \ \ }\n=

#. name, q3, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ boucle\ ind\u00e9finiment.\ Pouvez-vous\ voir\ pourquoi\ ?\n=

#. name, q4, name
#: m03_qcm/task.yaml
!M\u00e9thodes\ void=

#. name, q4, header
#: m03_qcm/task.yaml
!\nEn\ Java,\ les\ m\u00e9thodes\ de\ type\ ``void``\ sont\ souvent\ utilis\u00e9es\ lorsqu'il\ faut\ ex\u00e9cuter\ une\ suite\ d'instructions\ qui\ ne\ doit\ pas\ retourner\ de\ valeur.\ On\ souhaite\ \u00e9crire\ une\ m\u00e9thode\ ``afficheSomme``\ qui\ affiche\ \u00e0\ l'\u00e9cran\ la\ somme\ entre\ deux\ nombres\ entiers.\ Par\ exemple,\ en\ ex\u00e9cutant\ ``afficheSomme(3,4)``,\ la\ valeur\ ``7``\ est\ affich\u00e9e\ \u00e0\ l'\u00e9cran.\ La\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ -\n\ \ *\ @post\ Affiche\ \u00e0\ l'\u00e9cran\ la\ somme\ des\ deux\ entiers\ pass\u00e9s\ en\ arguments\n\ \ */\n=

#. name, q4, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ afficheSomme(int\ a,\ int\ b)\n\ \ \ {\n\ \ \ \ \ \ int\ somme\=a+b;\n\ \ \ \ \ \ System.out.println(somme);\n\ \ \ }\n=

#. name, q4, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ afficheSomme(int\ x,\ int\ y)\n\ \ \ {\n\ \ \ \ \ \ System.out.println(x+y);\n\ \ \ }\n=

#. name, q4, feedback
#: m03_qcm/task.yaml
!\nL'expression\ ``x+y``\ est\ une\ expression\ qui\ a\ comme\ valeur\ un\ entier.\ Elle\ peut\ donc\ bien\ \u00eatre\ utilis\u00e9e\ comme\ argument\ de\ la\ m\u00e9thode\ ``System.out.println()``.\n=

#. name, q4, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ afficheSomme(a,\ b)\n\ \ \ {\n\ \ \ \ \ \ int\ s\=a+b;\n\ \ \ \ \ \ System.out.println(s);\n\ \ \ }\n=

#. name, q4, feedback
#: m03_qcm/task.yaml
!\nLors\ de\ la\ d\u00e9claration\ d'une\ m\u00e9thode,\ il\ est\ n\u00e9cessaire\ de\ sp\u00e9cifier\ le\ type\ de\ chacun\ de\ ses\ arguments.\ Cette\ d\u00e9claration\ n'est\ pas\ valide.\n=

#. name, q4, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ afficheSomme(int\ c,\ int\ d)\n\ \ \ {\n\ \ \ \ \ \ int\ sum\=c+d;\n\ \ \ }\n=

#. name, q4, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ calcule\ la\ somme\ de\ ses\ deux\ arguments\ mais\ ne\ l'affiche\ pas\ \u00e0\ l'\u00e9cran\ comme\ demand\u00e9.\n=

#. name, q4, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ afficheSomme(double\ c,\ double\ d)\n\ \ \ {\n\ \ \ \ \ \ System.out.println(x+y);\n\ \ \ }\n=

#. name, q4, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ prend\ comme\ arguments\ deux\ nombres\ r\u00e9els\ et\ non\ deux\ entiers\ comme\ demand\u00e9\ dans\ l'\u00e9nonc\u00e9.\n=

#. name, q5, name
#: m03_qcm/task.yaml
!D\u00e9clarations\ de\ m\u00e9thodes=

#. name, q5, header
#: m03_qcm/task.yaml
!\nEn\ Java,\ la\ d\u00e9claration\ d'une\ m\u00e9thode\ nous\ renseigne\ sur\ le\ type\ de\ valeur\ qui\ est\ retourn\u00e9\ par\ cette\ m\u00e9thode.\ Consid\u00e9rons\ les\ d\u00e9finitions\ de\ m\u00e9thodes\ ci-dessous.\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ v(int\ i)\ \ {\n\ \ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n\ \ \ public\ static\ void\ w()\ \ {\n\ \ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n\ \ \ public\ static\ int\ f(int\ i)\ \ {\n\ \ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n\ \ \ public\ static\ int\ g(boolean\ b)\ \ {\n\ \ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n\ \ \ public\ static\ int\ h()\ \ {\n\ \ \ \ \ //\ code\ non\ fourni\n\ \ \ }\n\nUne\ seule\ des\ s\u00e9quences\ d'instructions\ ci-dessous\ est\ valide.\ Pourriez-vous\ indiquer\ laquelle\ ?\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=f(2);\n\ \ \ int\ b\=g(false);\n\ \ \ int\ c\=h();\n\ \ \ w();\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=g(true);\n\ \ \ int\ b\=f(-2);\n\ \ \ int\ c\=h();\n\ \ \ v(a);\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=g(false);\n\ \ \ int\ b\=f(a-2);\n\ \ \ int\ c\=h();\n\ \ \ v(a);\n=

#. name, q5, feedback
#: m03_qcm/task.yaml
!\nCe\ fragment\ de\ code\ est\ valide.\ Notez\ que\ l'argument\ de\ la\ m\u00e9thode\ ``f``\ peut\ \u00eatre\ n'importe\ quelle\ expression\ qui\ retourne\ une\ valeur\ de\ type\ ``int``.\ C'est\ bien\ le\ cas\ pour\ l'expression\ ``a-2``\ puisque\ la\ variable\ ``a``\ est\ de\ type\ ``int``.\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ b\=f(-2);\n\ \ \ int\ a\=g(b\=\=1);\n\ \ \ int\ c\=h();\n\ \ \ v(a);\n=

#. name, q5, feedback
#: m03_qcm/task.yaml
!\nCe\ fragment\ de\ code\ est\ valide.\ Notez\ que\ l'argument\ de\ la\ m\u00e9thode\ ``g``\ peut\ \u00eatre\ n'importe\ quelle\ expression\ qui\ retourne\ une\ valeur\ de\ type\ ``boolean``.\ C'est\ bien\ le\ cas\ pour\ l'expression\ ``b\=\=1``.\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=g(false);\n\ \ \ int\ b\=f(-2);\n\ \ \ int\ c\=w();\n\ \ \ h();\n=

#. name, q5, feedback
#: m03_qcm/task.yaml
!\nCe\ fragment\ de\ code\ contient\ deux\ erreurs.\ Relisez\ la\ d\u00e9finition\ des\ m\u00e9thodes\ ``h``\ et\ ``w``.\ La\ premi\u00e8re\ (``h``)\ retourne\ une\ valeur\ enti\u00e8re.\ Elle\ ne\ peut\ donc\ \u00eatre\ utilis\u00e9e\ que\ dans\ une\ expression\ qui\ donne\ un\ r\u00e9sultat\ entier.\ \ La\ seconde\ (``w``)\ est\ de\ type\ ``void``,\ elle\ ne\ retourne\ donc\ aucune\ valeur\ et\ ne\ peut\ pas\ \u00eatre\ utilis\u00e9e\ comme\ membre\ de\ droite\ d'une\ instruction\ d'affectation.\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=g(false);\n\ \ \ int\ b\=f(-2.0);\n\ \ \ int\ d\=h();\n\ \ \ v(d);\n=

#. name, q5, feedback
#: m03_qcm/task.yaml
!\nQuel\ est\ le\ type\ de\ la\ valeur\ ``2.0``\ en\ Java\ ?\ La\ m\u00e9thode\ ``f``\ prend\ un\ argument\ de\ type\ `\u00ecnt``.\n=

#. name, q5, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ int\ a\=g(1);\n\ \ \ int\ b\=f(7);\n\ \ \ int\ c\=h();\n\ \ \ w();\n=

#. name, q6, name
#: m03_qcm/task.yaml
!M\u00e9thodes\ retournant\ un\ nombre=

#. name, q6, header
#: m03_qcm/task.yaml
!\n\nLa\ classe\ ``Math``\ de\ java\ contient\ la\ m\u00e9thode\ ``Math.min``.\ Celle-ci\ prend\ deux\ arguments\ de\ type\ ``double``\ et\ retourne\ le\ plus\ petit\ des\ deux\ nombres\ pass\u00e9s\ en\ argument.\nLaquelle\ de\ ces\ m\u00e9thodes\ reprises\ ci-dessous\ est-elle\ une\ impl\u00e9mentation\ correcte\ de\ cette\ m\u00e9thode\ ``min``\ dont\ la\ sp\u00e9cification\ est\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ -\n\ \ *\ @post\ retourne\ le\ minimum\ entre\ les\ deux\ arguments\n\ \ */\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (a<b)\ {\n\ \ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ \ \ return\ b;\n\ \ \ }\n=

#. name, q6, feedback
#: m03_qcm/task.yaml
!\nCette\ impl\u00e9mentation\ est\ correct.\ Lorsque\ ``a<b``,\ la\ m\u00e9thode\ se\ termine\ par\ ``return\ a;``.\ L'instruction\ ``return\ b;``\ n'est\ ex\u00e9cut\u00e9e\ que\ si\ ``b>\=a``.\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (a<b)\ {\n\ \ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (b<a)\ {\n\ \ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (b<a)\ {\n\ \ \ \ \ \ \ \ \ System.out.println(b);\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ \ System.out.println(a);\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q6, feedback
#: m03_qcm/task.yaml
!\nNe\ confondez\ pas\ une\ m\u00e9thode\ qui\ "affiche"\ (en\ utilisant\ ``System.out.println``)\ avec\ une\ m\u00e9thode\ qui\ retourne\ une\ valeur.\ Un\ m\u00e9thode\ qui\ retourne\ une\ valeur\ doit\ toujours\ se\ termine\ par\ ``return``.\ ``javac``\ n'acceptera\ pas\ de\ compiler\ cette\ m\u00e9thode\ qui\ ne\ retourne\ pas\ de\ valeur.\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (b<a)\ {\n\ \ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q6, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ En\ Java,\ une\ m\u00e9thode\ ``double``\ doit\ toujours\ retourner,\ via\ l'instruction\ ``return``,\ une\ valeur\ de\ type\ ``double``,\ quel\ que\ soit\ l'ex\u00e9cution\ de\ cette\ m\u00e9thode.\ Cette\ version\ ne\ retourne\ de\ valeur\ que\ lorsque\ ``b<a``.\n=

#. name, q6, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ min\ (double\ a,\ double\ b)\ {\n\ \ \ \ \ if\ (b<a)\ {\n\ \ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ \ \ return\ a;\n\ \ \ }\n=

#. name, q6, feedback
#: m03_qcm/task.yaml
!\nUne\ m\u00e9thode\ ``void``\ ne\ retourne\ aucun\ r\u00e9sultat.\ Ce\ code\ ne\ correspond\ pas\ \u00e0\ ce\ qui\ est\ demand\u00e9.\n=

#. name, q7, name
#: m03_qcm/task.yaml
!M\u00e9thodes\ retournant\ un\ bool\u00e9en=

#. name, q7, header
#: m03_qcm/task.yaml
!\n\nLorsque\ l'on\ doit\ manipuler\ des\ conditions\ complexes\ dans\ une\ instruction\ conditionnelle\ ou\ une\ boucle,\ il\ peut\ \u00eatre\ int\u00e9ressant\ d'\u00e9crire\ des\ m\u00e9thodes\ qui\ retournent\ un\ bool\u00e9en.\ Sachant\ que\ l'expression\ ``a%b``\ retourne\ le\ reste\ de\ la\ division\ euclidienne\ de\ la\ valeur\ de\ la\ variable\ enti\u00e8re\ ``a``\ par\ ``b``,\ laquelle\ des\ m\u00e9thodes\ ci-dessous\ est-elle\ une\ impl\u00e9mentation\ de\ la\ sp\u00e9cification\ suivante\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ n>0\n\ \ *\ @post\ retourne\ true\ lorsque\ le\ nombre\ pass\u00e9\ en\ argument\ est\ pair\ et\ false\ dans\ le\ cas\ contraire\n\ \ */\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ return\ (reste\=\=0);\n\ \ \ }\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ boolean\ pair\=(reste\=\=0);\n\ \ \ \ \ return\ pair;\n\ \ \ }\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ if\ (reste\!\=0)\ {\n\ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q7, feedback
#: m03_qcm/task.yaml
!\nCe\ code\ est\ correct,\ mais\ il\ est\ inutilement\ long.\ Sachant\ que\ l'instruction\ conditionnelle\ \u00e9value\ une\ condition\ qui\ a\ d\u00e9j\u00e0\ une\ valeur\ bool\u00e9enne,\ il\ est\ pr\u00e9f\u00e9rable\ de\ retourner\ directement\ une\ telle\ expression.\ Comme\ dans\ le\ code\ ci-dessous\ ..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ int\ reste\=n%2;\n\ \ \ \ return\ (reste\=\=0);\n\ \ \ }\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ return\ (reste\!\=0);\n\ \ \ }\n=

#. name, q7, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ retourne\ ``true``\ lorsque\ x\ est\ impair\ et\ ``false``\ sinon.\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(double\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ return\ (reste\=0);\n\ \ \ }\n=

#. name, q7, feedback
#: m03_qcm/task.yaml
!\nL'argument\ de\ la\ m\u00e9thode\ doit\ n\u00e9cessairement\ \u00eatre\ de\ type\ ``int``\ pour\ pouvoir\ utiliser\ le\ reste\ de\ la\ division\ euclidienne.\ En\ outre,\ ``reste\=0``\ est\ une\ affectation\ et\ non\ une\ expression\ bool\u00e9enne\ que\ l'on\ peut\ passer\ comme\ argument\ \u00e0\ ``return``.\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ return\ reste;\n\ \ \ }\n=

#. name, q7, feedback
#: m03_qcm/task.yaml
!\nCe\ fragment\ de\ code\ est\ incorrect.\ La\ d\u00e9finition\ de\ la\ m\u00e9thode\ sp\u00e9cifie\ qu'elle\ retourne\ une\ valeur\ bool\u00e9enne.\ Or,\ ``reste``\ est\ une\ variable\ de\ type\ ``int``.\n=

#. name, q7, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ boolean\ pair(int\ n)\ {\n\ \ \ \ \ int\ reste\=n%2;\n\ \ \ \ \ if\ (reste\!\=0)\ {\n\ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q7, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Elle\ ne\ d\u00e9finit\ pas\ correctement\ la\ valeur\ qu'il\ faut\ retourner\ lorsque\ ``reste\=\=0``.\n=

#. name, q8, name
#: m03_qcm/task.yaml
!Calcul\ du\ maximum=

#. name, q8, header
#: m03_qcm/task.yaml
!\nLa\ classe\ ``Math``\ contient\ de\ nombreuses\ m\u00e9thodes.\ Vous\ trouverez\ notamment\ la\ m\u00e9thode\ ``Math.max(double\ a,\ double\ b)``\ qui\ calcule\ le\ maximum\ entre\ les\ deux\ nombres\ pass\u00e9s\ en\ argument.\ Laquelle\ des\ m\u00e9thodes\ ci-dessous\ est-elle\ une\ impl\u00e9mentation\ de\ la\ sp\u00e9cification\ suivante\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ -\n\ \ *\ @post\ retourne\ le\ maxium\ entre\ les\ deux\ r\u00e9els\ pass\u00e9s\ en\ arguments\n\ \ */\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a>b)\ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ \ \ else\n\ \ \ \ \ {\n\ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a<\=b)\ {\n\ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ \ \ else\n\ \ \ \ \ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a<\=b)\ {\n\ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ \ \ return\ a;\n\ \ \ }\n=

#. name, q8, feedback
#: m03_qcm/task.yaml
!\nCe\ code\ est\ correct.\ Il\ est\ cependant\ un\ peu\ moins\ lisible\ qu'un\ programme\ dans\ lequel\ ``return\ a;``\ se\ trouverait\ \u00e0\ l'int\u00e9rieur\ d'un\ bloc\ ``else``.\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a>b)\ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ \ \ else\n\ \ \ \ \ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q8, feedback
#: m03_qcm/task.yaml
!\nCe\ code\ retourne\ toujours\ la\ m\u00eame\ valeur.\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ }\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a>\=b)\ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q8, feedback
#: m03_qcm/task.yaml
!\nCe\ code\ ne\ compile\ pas.\ La\ m\u00e9thode\ ``max``\ propos\u00e9e\ ne\ retourne\ pas\ de\ valeur\ lorsque\ ``a<b``.\n=

#. name, q8, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ max(double\ a,\ double\ b)\n\ \ \ {\n\ \ \ \ \ if(a>\=b)\ {\n\ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ }\n\ \ \ \ \ return\ a;\n\ \ \ }\n=

#. name, q8, feedback
#: m03_qcm/task.yaml
!\nCe\ code\ retourne\ en\ fait\ le\ ``minimum``\ entre\ les\ nombres\ ``a``\ et\ ``b``\ pass\u00e9s\ en\ arguments.\n=

#. name, q9, name
#: m03_qcm/task.yaml
!Calcul\ de\ la\ valeur\ absolue=

#. name, q9, header
#: m03_qcm/task.yaml
!\n\nDans\ le\ programme\ Java\ suivant,\ un\ \u00e9tudiant\ souhaite\ utiliser\ une\ m\u00e9thode\ ``abs``\ permettant\ de\ calculer\ la\ valeur\ absolue\ d'un\ nombre.\n\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ int\ i\=1401;\n\ \ \ \ double\ d\=-112.4;\n\ \ \ \ double\ j\=d+abs(2*d);\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ abs(double\ c)\ {\n\ \ \ \ \ \ double\ r\=c;\n\ \ \ \ \ \ if(c<0)\ {\n\ \ \ \ \ \ \ \ r\=-c;\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ r;\n\ \ \ }\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ abs(double\ c)\ {\n\ \ \ \ \ \ if(c>\=0)\ {\n\ \ \ \ \ \ \ \ return\ c;\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ (-c);\n\ \ \ }\n\n\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ abs(double\ c)\ {\n\ \ \ \ \ \ if(c<0)\ {\n\ \ \ \ \ \ \ \ return\ (-c);\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ c;\n\ \ \ }\n=

#. name, q9, feedback
#: m03_qcm/task.yaml
!\nLe\ code\ utilis\u00e9\ par\ l'\u00e9tudiant\ s'attend\ \u00e0\ recevoir\ un\ ``double``.\ La\ m\u00e9thode\ doit\ \u00e9galement\ retourner\ un\ ``double``\ et\ non\ un\ ``int``\ comme\ ci-dessus.\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ abs(int\ a)\ {\n\ \ \ \ \ \ if(a>0)\ {\n\ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ (-a);\n\ \ \ }\n=

#. name, q9, feedback
#: m03_qcm/task.yaml
!\nLa\ m\u00e9thode\ propos\u00e9e\ prend\ comme\ argument\ un\ entier\ alors\ que\ l'\u00e9tudiant\ fournit\ un\ r\u00e9el.\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ abs(double\ c)\ {\n\ \ \ \ \ \ double\ r;\n\ \ \ \ \ \ if(c<0)\ {\n\ \ \ \ \ \ \ \ r\=-c;\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ r;\n\ \ \ }\n=

#. name, q9, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ compile\ pas.\ La\ variable\ ``r``\ peut\ \u00eatre\ utilis\u00e9e\ sans\ avoir\ \u00e9t\u00e9\ initialis\u00e9e.\ C'est\ le\ cas\ par\ exemple\ lorsque\ ``c>0``.\ Le\ compilateur\ Java\ refusera\ de\ compiler\ cette\ m\u00e9thode.\n=

#. name, q9, text
#: m03_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ abs(double\ c)\ {\n\ \ \ \ \ \ if(c>\=0)\ {\n\ \ \ \ \ \ \ \ return;\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ (-c);\n\ \ \ }\n=

#. name, q9, feedback
#: m03_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ compile\ pas.\ La\ premi\u00e8re\ invocation\ de\ ``return``\ ne\ retourne\ par\ de\ valeur\ tandis\ que\ la\ seconde\ retourne\ un\ r\u00e9el.\n=

#. context
#: m03dem1/task.yaml
!Consid\u00e9rez\ les\ d\u00e9claratons\ suivantes\ \:\n\n..\ code-block\ \:\:\n\n\ \ \ \ double\ money\ \=\ 210.7\ ;\n\ \ \ \ int\ euro\ \=\ 25\ ;\n\ \ \ \ double\ wallet_d;\n\ \ \ \ int\ wallet_i;\n\nL'on\ souhaite\ faire\ en\ sorte\ que\ d'une\ part\ la\ valeur\ le\ la\ variable\ *money*\ se\ retrouve\ dans\ la\ variable\ *wallet_i*\ et\ que\ d'autre\ part\ la\ valeur\ de\ la\ variable\ *euro*\ se\ retrouve\ dans\ la\ variable\ *wallet_d*.\n=

#. name
#: m03dem1/task.yaml
!Mission\ 3\ \:\ Question\ de\ D\u00e9marrage\ 1\:\ Conversions=

#. name, q1, header
#. name, q2, header
#: m03dem1/task.yaml
!Indiquez\ les\ instructions\ accept\u00e9es\ par\ le\ compilateur\:=

#. name, q1, text
#: m03dem1/task.yaml
!wallet_i\ \=\ (int)\ money\ ;=

#. name, q1, text
#: m03dem1/task.yaml
!wallet_i\ \=\ 210.7=

#. name, q1, text
#: m03dem1/task.yaml
!wallet_i\ \=\ money\ ;=

#. name, q2, text
#: m03dem1/task.yaml
!wallet_d\ \=\ euro;=

#. name, q2, text
#: m03dem1/task.yaml
!wallet_d\ \=\ 25=

#. name, q2, text
#: m03dem1/task.yaml
!wallet_d\ \=\ (double)\ euro;=

#. name, q3, header
#: m03dem1/task.yaml
!Les\ instructions\ correctes\ des\ questions\ 1\ et\ 2\ servent\ r\u00e9guli\u00e8rement\ \u00e0\ "remplir"\ *wallet_i*\ et\ *wallet_d*.\ L'on\ voudrait\ vous\ offrir\ l'un\ de\ ces\ deux\ "wallets",\ lequel\ devriez-vous\ pr\u00e9f\u00e9rer\ au\ cas\ o\u00f9\ vous\ tennez\ \u00e0\ votre\ argent\ et\ pourquoi?=

#. name, q3, text
#: m03dem1/task.yaml
!wallet_d\ parcequ'il\ contient\ des\ valeurs\ de\ type\ double=

#. name, q3, text
#: m03dem1/task.yaml
!wallet_i\ parceque\ je\ ne\ perds\ rien=

#. name, q3, text
#: m03dem1/task.yaml
!wallet_d\ parceque\ je\ ne\ perds\ rien=

#. author
#: m03dem2/task.yaml m03dem3/task.yaml
!Cl\u00e9mentine\ Munyabarenzi,\ Olivier\ Martin=

#. context
#: m03dem2/task.yaml
!Ecrivez\ *la\ signature*\ et\ *le\ corps*\ d\u2019une\ methode\ baptis\u00e9e\n``afficheMax``\ qui\ prend\ deux\ nombres\ entiers\ comme\ arguments\ et\n**affiche**\ le\ plus\ grand\ de\ ces\ nombres.\ La\ sp\u00e9cification\ de\ cette\nm\u00e9thode\ est\ \:\n\n\n..\ code-block\ \:\:\ java\n\n\ \ \ /**\n\ \ \ \ \u2217\ @pre\ -\n\ \ \ \ \u2217\ @post\ affiche\ le\ maximum\ entre\ les\ nombres\ entiers\ a\ et\ b\n\ \ \ \ \u2217\ /=

#. name
#: m03dem2/task.yaml
!Mission\ 3\ \:\ Question\ de\ D\u00e9marrage\ 2\ \:\ Le\ Nombre\ Maximum=

#. name, q1, header
#: m03dem2/task.yaml
!Ecrivez\ ci-dessous\ la\ *signature*\ et\ le\ *corps*\ de\ la\ m\u00e9thode\ ``afficheMax``.=

#. context
#: m03dem3/task.yaml
!Ecrivez\ la\ signature\ et\ le\ corps\ d'une\ m\u00e9thode\ baptis\u00e9e\ ``impair``\ qui\ prend\ comme\ argument\ un\ entier\ **n**\ positif\ et\ retourne\ ``true``\ si\ **n**\ est\ impair\ et\ ``false``\ sinon.\ Pour\ rappel,\ si\ **n**\ est\ un\ entier\ positif\ ``n\ %\ 2``\ vaut\ le\ reste\ de\ la\ division\ enti\u00e8re\ de\ **n**\ par\ 2.\ La\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ \u2217\ @pre\ n\ >\ 0\n\ \ \ \ \ \u2217\ @post\ retourne\ true\ lorsque\ n\ est\ un\ nombre\ entier\ impair\ et\ false\ sinon.\n\ \ \ \ \ \u2217\ /=

#. name
#: m03dem3/task.yaml
!Mission\ 3\ \:\ Question\ de\ D\u00e9marrage\ 3\ \:\ Nombres\ impairs=

#. name, q1, header
#: m03dem3/task.yaml
!Ecrivez\ ici\ la\ *signature*\ (sur\ une\ seule\ ligne)\ et\ le\ *corps*\ de\ votre\ m\u00e9thode.=

#. context
#: m03dem4/task.yaml
!Un\ \u00e9tudiant\ montre\ \u00e0\ son\ tuteur\ la\ m\u00e9thode\ main\ ci-dessous\ \:\n\n..\ code-block\ \:\:\ java\n\n\n\ \ \ public\ static\ void\ main(String[]\ args){\n\ \ \ \ \ \ \ int\ hauteur;\n\ \ \ \ \ \ \ int\ largeur;\n\ \ \ \ \ \ \ char\ c\ \=\ 'X';\n\ \ \ \ \ \ \ System.out.println("Hauteur\ du\ L");\n\ \ \ \ \ \ \ hauteur\ \=\ TextIO.getInt();\n\ \ \ \ \ \ \ System.out.println("Largeur\ du\ L\ ");\n\ \ \ \ \ \ \ largeur\ \=\ TextIO.getInt();\n\ \ \ \ \ \ \ System.out.println();\n\ \ \ \ \ \ \ lettre_l(c,\ hauteur,\ largeur);\n\ \ \ }\n\nLors\ de\ son\ ex\u00e9cution\ elle\ affiche\ les\ caract\u00e8res\ suivants\ \u00e0\ l'\u00e9cran\:\n\n\ \ \:\:\n\n\ \ \ \ \ \ Hauteur\ du\ L\n\ \ \ \ \ \ 7\n\ \ \ \ \ \ Largeur\ du\ L\n\ \ \ \ \ \ 5\n\n\ \ \ \ \ \ X\n\ \ \ \ \ \ X\n\ \ \ \ \ \ X\n\ \ \ \ \ \ X\n\ \ \ \ \ \ X\n\ \ \ \ \ \ X\n\ \ \ \ \ \ XXXXX\n\n=

#. name
#: m03dem4/task.yaml
!Mission\ 3\ \:\ Question\ de\ d\u00e9marrage\ 4\ \:\ Lettre\ L=

#. name, q1, header
#: m03dem4/task.yaml
!R\u00e9\u00e9crivez\ **la\ signature**,\ **et\ le\ corps**\ de\ la\nm\u00e9thode\ ``lettre_l``\ utilis\u00e9e\ par\ cet\ \u00e9tudiant.=

#. author
#: m03dem5/task.yaml
!Cl\u00e9mentine\ Zaninka,\ Olivier\ Martin=

#. context
#: m03dem5/task.yaml
!La\ section\ *3.4.2*\ du\ livre\ pr\u00e9sente\ un\ programme\ qui\ permet\ de\ calculer\ et\ d\u2019afficher\ le\ nombre\ de\ diviseurs\ entiers\ d\u2019un\ nombre\ entier.\ R\u00e9utilisez\ ce\ code\ de\ fa\u00e7on\ \u00e0\ construire\ la\ m\u00e9thode\ ``nDiv``\nr\u00e9pondant\ \u00e0\ la\ sp\u00e9cification\ et\ la\ signature\ suivante\ \:\n\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ diviseurs\ entiers\ du\ nombre\ entier\ n.\n\ \ \ \ \ */\n\ \ \ \ \ public\ static\ int\ nDiv(int\ n)\ {\n\ \ \ \ \ \ \ \ \ //\ Votre\ code\ ici\n\ \ \ \ \ }=

#. name
#: m03dem5/task.yaml
!Mission\ 3\ \:\ Question\ de\ D\u00e9marage\ 5\ \:\ Diviseurs\ Entiers=

#. name, q1, header
#: m03dem5/task.yaml
!Ecrivez\ ici\ le\ **corps**\ de\ la\ m\u00e9thode\ ``nDiv``.=

#. context
#: m03real1/task.yaml
!Soumettez\ l'archive\ zip\ contenant\ le\ fichier\ LibMath.java\ et\ README.txt=

#. name
#: m03real1/task.yaml
!Mission\ 3\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m03real1/task.yaml
!Archive\ zip=

#. name, q1, header
#: m03real1/task.yaml
!Soumettez\ ici\ l'archive\ zip=

#. context
#: m04Q1/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``int\ countChar(String\ s,\ char\ c)``\ permettant\ de\ compter\ le\ nombre\ d'occurences\ du\ caract\u00e8re\ ``c``\ dans\ ``s``\ et\ dont\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ le\ nombre\ d\u2019occurrences\ du\ caract\u00e8re\ c\ dans\ la\ cha\u00eene\ s\n\ \ \ \ \ */=

#. name
#: m04Q1/task.yaml
!Mission\ 4\ \:\ Question\ suppl\u00e9mentaire\ \:\ Occurences\ de\ c\ dans\ s=

#. name, q1, name
#: m04Q1/task.yaml
!Occurence=

#. name, q1, header
#: m04Q1/task.yaml m04Q10/task.yaml m04Q3/task.yaml m04Q7/task.yaml
#: m04Q9/task.yaml m05Q1/task.yaml m05Q10/task.yaml m05Q11/task.yaml
#: m05Q2/task.yaml m05Q3/task.yaml m05Q4/task.yaml m05Q5/task.yaml
#: m05Q6/task.yaml m05Q7/task.yaml m05Q8/task.yaml m05Q9/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode=

#. context
#: m04Q10/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``int\ d2i(String\ s)``\ qui\ retourne\ la\ repr\u00e9sentation\ enti\u00e8re\ d'un\ nombre\ entier\ fourni\ sous\ la\ forme\ d'un\ String.\ Par\ exemple,\ "012345"\ doit\ renvoyer\ 1235.\ N'utilisez\ pas\ de\ m\u00e9thode\ de\ parsing\ comme\ ``parseInt``\ ou\ ``parseDouble``.\n\nLa\ sp\u00e9cification\ est\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\ et\ s\ est\ la\ repr\u00e9sentation\ d'un\ nombre\ entier\ dans\ le\ \n\ \ \ \ \ *\ \ \ \ \ \ syst\u00e8me\ d\u00e9cimal\ (il\ contient\ uniquement\ des\ chiffres)\n\ \ \ \ \ *\ @post\ retourne\ la\ repr\u00e9sentation\ du\ nombre\ sous\ forme\ d'un\ entier\n\ \ \ \ \ */\n\nLa\ m\u00e9thode\ ci-dessous\ pourrait\ vous\ aider\ \u00e0\ r\u00e9soudre\ facilement\ cette\ question\ \:\ `<http\://docs.oracle.com/javase/6/docs/api/java/lang/Character.html\#getNumericValue(char)>`_\n\n=

#. name
#: m04Q10/task.yaml
!Mission\ 4\ \:\ Q**\ repr\u00e9sentation\ enti\u00e8re=

#. name, q1, name
#: m04Q10/task.yaml
!d2i=

#. context
#: m04Q11/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``char\ plusFrequent(String\ s)``\ qui\ permet\ de\ d\u00e9terminer\ le\ caract\u00e8re\ le\ plus\ pr\u00e9sent\ dans\ la\ chaine\ de\ caract\u00e8res\ ``s``.\n\nA\ titre\ d'exemple,\ le\ caract\u00e8re\ le\ plus\ fr\u00e9quent\ de\ la\ cha\u00eene\ ``abbDDaa``\ est\ ``a``.\ Si\ la\ cha\u00eene\ contient\ des\ caract\u00e8res\ avec\ le\ m\u00eame\ nombre\ d'occurences\ maximal,\ renvoyez\ le\ premier\ trouv\u00e9\ de\ gauche\ \u00e0\ droite.\n\nLa\ sp\u00e9cification\ est\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\!\=null\n\ \ \ \ \ *\ @post\ retourne\ le\ caract\u00e8re\ qui\ se\ trouve\ le\ plus\ grand\n\ \ \ \ \ *\ \ \ \ \ \ nombre\ de\ fois\ dans\ la\ cha\u00eene\ s\n\ \ \ \ \ */=

#. name
#: m04Q11/task.yaml
!Mission\ 4\ \:\ Q***\ \ Caract\u00e8re\ le\ plus\ fr\u00e9quent=

#. name, q1, name
#: m04Q11/task.yaml
!le\ plus\ fr\u00e9quent=

#. name, q1, header
#: m04Q11/task.yaml m04Q4/task.yaml m04Q6/task.yaml
!\u00c9crivez\ ici\ la\ signature\ et\ le\ corps\ de\ cette\ m\u00e9thode.=

#. context
#: m04Q2/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ isIn(char\ c,\ String\ s)``\ dont\ la\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ s\!\=null\n\ \ \ \ *\ @post\ retourne\ true\ si\ le\ caract\u00e8re\ c\ est\ dans\ s,\ false\ sinon\n\ \ \ \ */=

#. name
#: m04Q2/task.yaml
!Mission\ 4\ \:\ Q*\ Caract\u00e8re\ dans\ String\ =

#. name, q1, name
#: m04Q2/task.yaml
!Pr\u00e9sence=

#. name, q1, header
#: m04Q2/task.yaml
!\u00c9crivez\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ isIn=

#. context
#: m04Q3/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ entierValide(String\ s)``\ permettant\ de\ retourner\ ``true``\ uniquement\ si\ la\ chaine\ de\ caract\u00e8res\ ``s``\ ne\ contient\ que\ des\ chiffres.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ uniquement\ si\ la\ chaine\ de\ caract\u00e8res\n\ \ \ \ \ *\ \ \ \ \ \ \ s\ ne\ contient\ que\ des\ chiffres\n\ \ \ \ \ */\n\nIl\ y\ a\ une\ m\u00e9thode\ dans\ la\ classe\ Character\nqui\ devrait\ vous\ aider\ \u00e0\ v\u00e9rifier\ qu'un\ caract\u00e8re\ est\ un\ chiffre,\ voir\ https\://docs.oracle.com/javase/7/docs/api/java/lang/Character.html=

#. name
#: m04Q3/task.yaml
!Mission\ 4\ \:\ Q*\ cha\u00eene\ compos\u00e9e\ de\ chiffres=

#. name, q1, name
#: m04Q3/task.yaml
#, fuzzy
!Cha\u00eene\ de\ chiffres=a number

#. context
#: m04Q4/task.yaml
!De\ nombreux\ sites\ web\ imposent\ des\ contraintes\ sur\ les\ mots\ de\ passe\ que\ les\ utilisateurs\ peuvent\ utiliser.\ L'objectif\ est\ g\u00e9n\u00e9ralement\ de\ forcer\ les\ utilisateurs\ \u00e0\ choisir\ des\ mots\ de\ passe\ difficiles\ \u00e0\ trouver\ par\ des\ attaquants\ \u00e9ventuels.\n\nEcrivez\ la\ m\u00e9thode\ ``boolean\ motDePasseValide(String\ s)``\ permettant\ de\ v\u00e9rifier\ la\ validit\u00e9\ d'un\ mot\ de\ passe\ ``s``.\ La\ contrainte\ impos\u00e9e\ \u00e0\ un\ tel\ mot\ de\ passe\ est\ qu'il\ doit\ au\ moins\ contenir\ 8\ caract\u00e8res,\ un\ chiffre.\ La\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\!\=null\n\ \ \ \ \ *\ @post\ retourne\ true\ uniquement\ si\ la\ chaine\ de\ caract\u00e8res\n\ \ \ \ \ *\ \ \ \ \ \ \ s\ est\ un\ mot\ de\ passe\ valide,\ c-a-d\ qu'elle\n\ \ \ \ \ *\ \ \ \ \ \ \ contient\ au\ moins\ 8\ caract\u00e8res,\ au\ moins\ une\ lettre\n\ \ \ \ \ *\ \ \ \ \ \ \ minuscule,\ au\ moins\ un\ chiffre\ et\ au\ moins\ une\ lettre\ majuscule\n\ \ \ \ \ */\n\n\nVous\ trouverez\ dans\ la\ classe\ `Character\ <https\://docs.oracle.com/javase/7/docs/api/java/lang/Character.html>`_\ des\ m\u00e9thodes\ utiles\ pour\ cette\ t\u00e2che.\n=

#. name
#: m04Q4/task.yaml
!Mission\ 4\ \:\ Q**\ V\u00e9rification\ de\ mot\ de\ passe=

#. name, q1, name
#: m04Q4/task.yaml
!Mot\ de\ passe=

#. context
#: m04Q5/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ binaire(String\ s)``\ qui\ retourne\ ``true``\ uniquement\ si\ la\ chaine\ de\ caract\u00e8res\ ``s``\ ne\ contient\ que\ les\ caract\u00e8res\ ``0``\ ou\ ``1``\n\nLa\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null,\ s.length()\ >\=\ 1\n\ \ \ \ \ *\ @post\ retourne\ true\ uniquement\ si\ la\ chaine\ de\ caract\u00e8res\n\ \ \ \ \ *\ \ \ \ \ \ \ s\ ne\ contient\ que\ les\ caract\u00e8res\ 0\ ou\ 1\n\ \ \ \ \ */=

#. name
#: m04Q5/task.yaml
!Mission\ 4\ \:\ Question\ suppl\u00e9mentaire\ \:\ binaire=

#. name, q1, name
#: m04Q5/task.yaml
!Binaire=

#. name, q1, header
#: m04Q5/task.yaml m04Q8/task.yaml
!\u00c9crivez\ ici\ la\ signature\ et\ le\ corps\ de\ cette\ m\u00e9thode=

#. context
#: m04Q6/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ containsOnly(String\ s,\ String\ c)``\ qui\ retourne\ ``true``\ si\ la\ chaine\ ``s``\ contient\ uniquement\ des\ caract\u00e8res\ se\ trouvant\ dans\ la\ chaine\ ``c``,\ ``false``\ sinon.\n\nLa\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null,\ c\ \!\=\ null,\ tous\ les\ caract\u00e8res\ de\ la\ chaine\ c\ sont\ diff\u00e9rents\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ chaine\ s\ contient\ uniquement\ des\n\ \ \ \ \ *\ \ \ \ \ \ \ caracteres\ se\ trouvant\ la\ chaine\ c,\ false\ sinon\n\ \ \ \ \ */=

#. name
#: m04Q6/task.yaml
!Mission\ 4\ \:\ Q**\ containsOnly=

#. name, q1, name
#: m04Q6/task.yaml
!containsOnly=

#. context
#: m04Q7/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ palindrome(String\ s)``\ qui\ v\u00e9rifie\ si\ une\ chaine\ de\ caract\u00e8res\ ``s``\ est\ un\ palindrome.\ Pour\ rappel,\ vous\ trouverez\ plus\ d'informations\ sur\ les\ palindromes\ sur\ `Wikipedia\ <https\://en.wikipedia.org/wiki/Palindrome>`_.\n\nPour\ simplifier\ les\ choses,\ votre\ programme\ prend\ en\ compte\ les\ signes\ diacritiques\ (accents,\ tr\u00e9mas,\ c\u00e9dilles)\ et\ les\ espaces.\ Par\ exemple\ "camilleellima\u00e7"\ ou\ encore\ "la\ mari\u00e9e\ ira\ mal"\ ne\ doivent\ pas\ \u00eatre\ consid\u00e9r\u00e9s\ comme\ des\ palindromes.\n\nLa\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ s\ est\ un\ palindrome,\ false\ sinon\n\ \ \ \ \ */=

#. name
#: m04Q7/task.yaml
!Mission\ 4\ \:\ Question\ suppl\u00e9mentaire\ \:\ le\ palindrome=

#. name, q1, name
#: m04Q7/task.yaml
!Palindrome=

#. context
#: m04Q8/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ contains(String\ s,\ String\ in)``\ qui\ retourne\ true\ si\ la\ chaine\ de\ caract\u00e8re\ ``in``\ se\ trouve\ dans\ la\ chaine\ de\ caract\u00e8res\ ``s``.\ N'utilisez\ pas\ la\ m\u00e9thode\ ``contains()``\ ou\ ``indexOf()``\ de\ String.\nLa\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null,\ in\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ chaine\ de\ caract\u00e8re\ in\ se\ trouve\n\ \ \ \ \ *\ \ \ \ \ dans\ la\ cha\u00eene\ de\ caract\u00e8res\ s\n\ \ \ \ \ */=

#. name
#: m04Q8/task.yaml
!Mission\ 4\ \:\ Q*\ \ m\u00e9thode\ contains=

#. name, q1, name
#: m04Q8/task.yaml m09Q4/task.yaml m10Q4/task.yaml
!Contains=

#. context
#: m04Q9/task.yaml
!Les\ ordinateurs\ manipulent\ les\ nombres\ en\ utilisant\ le\ `syst\u00e8me\ binaire\ <https\://fr.wikipedia.org/wiki/Syst\u00e8me_binaire>`_.\n\nEcrivez\ la\ m\u00e9thode\ ``int\ b2i(String\ s)``\ qui\ permet\ de\ transformer\ un\ nombre\ en\ notation\ binaire\ en\ sa\ repr\u00e9sentation\ sous\ forme\ d'entier\ .\n\nLa\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ \ \ \ \ \ s\ est\ la\ repr\u00e9sentation\ d'un\ nombre\ binaire\n\ \ \ \ \ *\ \ \ \ \ \ s\ contient\ uniquement\ des\ 1\ et\ des\ 0\n\ \ \ \ \ *\ @post\ retourne\ la\ repr\u00e9sentation\ enti\u00e8re\ du\ nombre\ binaire\n\ \ \ \ \ *\ \ \ \ \ \ correspondant\ \u00e0\ cette\ cha\u00eene\n\ \ \ \ \ */=

#. name
#: m04Q9/task.yaml
!Mission\ 4\ \:\ Q*\ notation\ binaire=

#. name, q1, name
#: m04Q9/task.yaml
!b2i=

#. context
#: m04_bf/task.yaml
!La\ classe\ **String**\ contient\ de\ nombreuses\ m\u00e9thodes\ permettant\ de\ manipuler\ les\ cha\u00eenes\ de\ caract\u00e8res.\ Parmi\ celles-ci,\ on\ peut\ citer\ ``length()``\ qui\ retourne\ la\ longueur\ de\ la\ cha\u00eene\ de\ caract\u00e8res,\ ``charAt(int\ i)``\ qui\ retourne\ le\ caract\u00e8re\ de\ la\ i\u00e8me\ position\ ou\ ``substring(int\ begin,\ int\ end)``\ qui\ retourne\ la\ sous-cha\u00eene\ de\ caract\u00e8res\ d\u00e9marrant\ \u00e0\ la\ position\ ``begin``\ et\ se\ terminant\ \u00e0\ la\ position\ ``end\ -\ 1``.\n\nEn\ utilisant\ ces\ m\u00e9thodes,\ vous\ devez\ \u00e9crire\ une\ m\u00e9thode\ dont\ la\ sp\u00e9cification\ est\ la\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\ p\ \!\=\ null,\ s\ \!\=\ null\n\ \ \ \ \ *\ \ \ \ \ \ -\ p\ est\ un\ pattern,\ c\u2019est-\u00e0-dire\ une\ cha\u00eene\ de\ caract\u00e8res\ compos\u00e9es\ de\n\ \ \ \ \ *\ \ \ \ \ \ \ \ lettres,\ de\ chiffres\ et\ de\ z\u00e9ro,\ une\ ou\ plusieurs\ fois\ le\ caract\u00e8re\ ?\n\ \ \ \ \ *\ \ \ \ \ \ -\ s\ contient\ des\ lettres\ et\ des\ chiffres,\ mais\ pas\ le\ caract\u00e8re\ ?\n\ \ \ \ \ *\ @post\ -\ retourne\ le\ nombre\ d\u2019occurrences\ du\ pattern\ p\ \u00e0\ l\u2019int\u00e9rieur\ de\ la\ cha\u00eene\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ de\ caract\u00e8res\ s.\n\ \ \ \ \ *\ \ \ \ \ \ \ -\ Une\ occurrence\ est\ une\ sous-cha\u00eene\ de\ s\ de\ m\u00eame\ longueur\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ que\ p\ qui\ contient\ les\ m\u00eames\ caract\u00e8res\ que\ p\ \u00e0\ toutes\ les\ positions\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ o\u00f9\ p\ ne\ contient\ pas\ de\ caract\u00e8re\ ?\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int\ count\ (String\ p,\ String\ s);\n\n\n\u00c0\ titre\ d\u2019exemple,\ le\ code\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ System.out.println(count("AB","CDEF"));\n\ \ \ \ System.out.println(count("?B","CABDEF"));\n\ \ \ \ System.out.println(count("A?","CABDEACF"));\n\ \ \ \ System.out.println(count("AA","CAAABDEAAF"));\n\ \ \ \ System.out.println(count("??","CAAAB"));\n\nAffiche\ les\ valeurs\ 0,\ 1,\ 2,\ 3\ et\ 4.\n\nPour\ r\u00e9soudre\ ce\ probl\u00e8me,\ pensez\ \u00e0\ la\ d\u00e9couper\ en\ sous-probl\u00e8mes\ et\ n\u2019h\u00e9sitez\ pas\ \u00e0\ utiliser\ une\ ou\ plusieurs\ m\u00e9thodes\ priv\u00e9es\ suppl\u00e9mentaires.=

#. name
#: m04_bf/task.yaml
!Mission\ 4\ \:\ Question\ de\ bilan\ final=

#. name, q1, header
#: m04_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ int\ count\ (String\ p,\ String\ s)\n\n=

#. name, q2, header
#: m04_bf/task.yaml
!D\u00e9clarez\ ici\ les\ m\u00e9thodes\ priv\u00e9es\ que\ vous\ souhaitez\ utiliser\ pour\ d\u00e9composer\ le\ probl\u00e8me\ en\ sous-probl\u00e8mes.\ Attention,\ veillez\ \u00e0\ n'utiliser\ que\ des\ m\u00e9thodes\ de\ classe\ ``static``.\ Si\ une\ exception\ survient\ dans\ ce\ code,\ le\ feedback\ sera\ indiqu\u00e9\ dans\ la\ question\ 1.\n\n=

#. context
#: m04_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 4.\ Manipulation\ de\ cha\u00eenes\ de\ caract\u00e8res\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ -\ |jn2.3|_\n\n\ \ \ -\ |jn2.3.1|_\n\ \ \ -\ |jn2.3.2|_\n\ \ \ -\ |jn2.3.3|_\ n'est\ pas\ vu\ dans\ le\ cadre\ de\ ce\ cours\n\n\ -\ |jn4.7|_\n\n\ \ \ -\ |jn4.7.1|_\n\ \ \ -\ |jn4.7.2|_\n\ \ \ -\ |jn4.7.3|_\n\n\nLes\ sections\ vues\ pr\u00e9c\u00e9demment\ restent\ bien\ entendu\ d'actualit\u00e9.\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn2.3\:\ http\://math.hws.edu/javanotes/c2/s3.html\n..\ |jn2.3|\ replace\:\:\ `2.3\ \:\ Strings,\ Objects,\ Enums,\ and\ Subroutines`\n\n..\ _jn2.3.1\:\ http\://math.hws.edu/javanotes/c2/s3.html\#basics.3.1\n..\ |jn2.3.1|\ replace\:\:\ `2.3.1\ \:\ Built-in\ Subroutines\ and\ Functions`\n\n..\ _jn2.3.2\:\ http\://math.hws.edu/javanotes/c2/s3.html\#basics.3.2\n..\ |jn2.3.2|\ replace\:\:\ `2.3.2\ \:\ Operations\ on\ Strings`\n\n..\ _jn2.3.3\:\ http\://math.hws.edu/javanotes/c2/s3.html\#basics.3.3\n..\ |jn2.3.3|\ replace\:\:\ `2.3.3\ \:\ Introduction\ to\ Enums`\n\n..\ _jn4.7\ \:\ http\://math.hws.edu/javanotes/c4/s7.html\n..\ |jn4.7|\ replace\:\:\ `4.7\ \:\ The\ Truth\ About\ Declarations`\n\n..\ _jn4.7.1\ \:\ http\://math.hws.edu/javanotes/c4/s7.html\#subroutines.7.1\n..\ |jn4.7.1|\ replace\:\:\ `4.7.1\ \:\ Initialization\ in\ Declarations`\n\n..\ _jn4.7.2\ \:\ http\://math.hws.edu/javanotes/c4/s7.html\#subroutines.7.2\n..\ |jn4.7.2|\ replace\:\:\ `4.7.2\ \:\ Named\ Constants`\n\n..\ _jn4.7.3\ \:\ http\://math.hws.edu/javanotes/c4/s7.html\#subroutines.7.3\n..\ |jn4.7.3|\ replace\:\:\ `4.7.3\ \:\ Naming\ and\ Scope\ Rules`\n=

#. name
#: m04_qcm/task.yaml
!Mission\ 4\:\ QCM=

#. name, q1, name
#. name, q2, name
#: m04_qcm/task.yaml
!Port\u00e9e\ des\ variables=

#. name, q1, header
#: m04_qcm/task.yaml
!\n\nEn\ Java,\ une\ d\u00e9claration\ de\ variable\ a\ comme\ port\u00e9e\ la\ zone\ qui\ s\u00e9pare\ la\ d\u00e9claration\ de\ la\ variable\ de\ la\ fin\ du\ bloc\ dans\ lequel\ elle\ appara\u00eet.\ Une\ r\u00e8gle\ de\ bonne\ pratique\ est\ de\ d\u00e9clarer\ chaque\ variable\ au\ d\u00e9but\ du\ bloc\ de\ la\ m\u00e9thode\ dans\ laquelle\ elle\ est\ utilis\u00e9e\ ou\ dans\ un\ bloc\ d'une\ boucle\ par\ exemple.\ Consid\u00e9rons\ la\ m\u00e9thode\ d\u00e9finie\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ showScope\ (int\ a,\ double\ r)\n\ \ \ \ {\n\ \ \ \ \ \ int\ j\=0;\n\ \ \ \ \ \ ...\ //\ ligne\ a\n\ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ ...\ )\ {\n\ \ \ \ \ \ double\ y\=0.0;\n\ \ \ \ \ \ ...\ //\ ligne\ c\n\ \ \ \ \ \ if(i>0)\ {\n\ \ \ \ \ \ \ \ \ boolean\ b\=false;\n\ \ \ \ \ \ \ \ \ ...\ //\ ligne\ e\n\ \ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ ...\ //\ ligne\ f\n\n\ \ \ \ }\n\n\nLes\ propositions\ ci-dessous\ sont\ relatives\ \u00e0\ des\ instructions\ plac\u00e9es\ \u00e0\ certains\ lignes\ identifi\u00e9es\ ci-dessus.\ Laquelle\ de\ ces\ propositions\ est-elle\ correcte\ ?\n=

#. name, q1, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ System.out.print(a);\ //\ ligne\ a\n\ \ System.out.print(r);\ //\ ligne\ c\n\ \ System.out.print(b);\ //\ ligne\ e\n\ \ System.out.print(j);\ //\ ligne\ f\n=

#. name, q1, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ System.out.print(j);\ //\ ligne\ a\n\ \ System.out.print(y);\ //\ ligne\ c\n\ \ System.out.print(b);\ //\ ligne\ e\n\ \ System.out.print(a);\ //\ ligne\ f\n=

#. name, q1, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ System.out.print(a);\ //\ ligne\ a\n\ \ System.out.print(y);\ //\ ligne\ c\n\ \ System.out.print(b);\ //\ ligne\ e\n\ \ System.out.print(i);\ //\ ligne\ f\n=

#. name, q1, feedback
#: m04_qcm/task.yaml
!\nLa\ variable\ ``i``\ n'est\ utilisable\ qu'\u00e0\ l'int\u00e9rieur\ de\ la\ boucle\ ``for``.\ Elle\ ne\ peut\ pas\ \u00eatre\ utilis\u00e9e\ en\ dehors\ de\ cette\ boucle.\n=

#. name, q1, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ System.out.print(i);\ //\ ligne\ a\n\ \ System.out.print(y);\ //\ ligne\ c\n\ \ System.out.print(b);\ //\ ligne\ e\n\ \ System.out.print(i);\ //\ ligne\ f\n=

#. name, q1, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ System.out.print(a);\ //\ ligne\ a\n\ \ System.out.print(i);\ //\ ligne\ c\n\ \ System.out.print(r);\ //\ ligne\ e\n\ \ System.out.print(y);\ //\ ligne\ f\n=

#. name, q1, feedback
#: m04_qcm/task.yaml
!\nLa\ variable\ ``y``\ n'est\ utilisable\ qu'apr\u00e8s\ sa\ d\u00e9claration\ dans\ le\ bloc\ ``for``.\ En\ dehors\ de\ ce\ bloc,\ elle\ ne\ peut\ pas\ \u00eatre\ utilis\u00e9e.\n=

#. name, q10, name
#: m04_qcm/task.yaml
!M\u00e9thode\ contains=

#. name, q10, header
#: m04_qcm/task.yaml
!\n\nLaquelle\ des\ impl\u00e9mentations\ de\ la\ m\u00e9thode\ ``contains``\ dont\ la\ sp\u00e9cification\ et\ la\ signature\ sont\ reprises\ ci-dessous\ est-elle\ valide\ ?\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ s\ non\ vide\n\ \ *\ @post\ retourne\ true\ si\ le\ caract\u00e8re\ c\ est\ pr\u00e9sent\ dans\ la\ cha\u00eene\ s\ et\ false\ sinon\n\ \ */\n\n\ public\ static\ boolean\ contains(String\ s,\ char\ c)\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ i\=0;i<s.length();i\=i+1)\ {\n\ \ \ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\ \ }\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ j\=s.length()-1;j>\=0;j\=j-1)\ {\n\ \ \ \ \ if(s.charAt(j)\!\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\ \ }\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ i\=0;i<s.length();i\=i+1)\ {\n\ \ \ \ \ if(s.charAt(i)\!\=c)\ {\n\ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n\ \ }\n=

#. name, q10, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ retourne\ ``false``\ d\u00e8s\ qu'un\ caract\u00e8re\ diff\u00e8re\ du\ caract\u00e8re\ pass\u00e9\ en\ argument,\ mais\ elle\ ne\ teste\ pas\ toute\ la\ cha\u00eene\ de\ caract\u00e8res.\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ j\=s.length();j>\=0;j\=j-1)\ {\n\ \ \ \ \ if(s.charAt(j)\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\ \ }\n=

#. name, q10, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ commence\ par\ essayer\ d'acc\u00e9der\ au\ caract\u00e8re\ \u00e0\ l'indice\ ``s.length()``,\ mais\ celui-ci\ n'existe\ pas\ puisque\ les\ indices\ des\ caract\u00e8res\ d'une\ cha\u00eenes\ d\u00e9marrent\ \u00e0\ ``0``.\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ j\=s.length()-1;j>0;j\=j-1)\ {\n\ \ \ \ \ if(s.charAt(j)\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\ \ }\n=

#. name, q10, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ teste\ pas\ le\ caract\u00e8re\ se\ trouvant\ \u00e0\ l'indice\ ``0``\ de\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s``.\ Elle\ ne\ fonctionne\ donc\ pas\ dans\ tous\ les\ cas.\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ i\=0;i<\=s.length();i\=i+1)\ {\n\ \ \ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\ \ }\n=

#. name, q10, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ essaye\ de\ tester\ le\ caract\u00e8re\ \u00e0\ l'indice\ ``s.length()``\ de\ la\ cha\u00eene\ de\ caract\u00e8res,\ mais\ ce\ caract\u00e8re\ n'existe\ pas.\ Cela\ provoquera\ une\ erreur\ \u00e0\ l'ex\u00e9cution.\n=

#. name, q10, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ {\n\ \ \ for(int\ i\=0;i<s.length();i\=i+1)\ {\n\ \ \ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\n\ \ }\n=

#. name, q10, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ teste\ uniquement\ la\ valeur\ du\ premier\ caract\u00e8re.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q2, header
#: m04_qcm/task.yaml
!\nParmi\ les\ d\u00e9finitions\ de\ m\u00e9thodes\ ci-dessous,\ quelle\ est\ celle\ qui\ affichera\ correctement\ ``2012``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2011;\n\ \ \ \ int\ b\=1;\n\ \ \ \ if(b\=\=0)\ {\n\ \ \ \ \ \ \ i\=b;\n\ \ \ \ }\n\ \ \ \ else\ {\n\ \ \ \ \ \ \ i++;\n\ \ \ \ }\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!\nDans\ cette\ m\u00e9thode,\ ``b``\ vaut\ ``1``\ et\ donc\ le\ bloc\ ``else``\ est\ ex\u00e9cut\u00e9\ et\ la\ valeur\ de\ ``i``\ est\ incr\u00e9ment\u00e9e.\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ int\ f(int\ b)\ {\n\ \ \ \ for(int\ i\=1;i<10;i\=i+1)\ {\n\ \ \ \ \ b\=b+i;\n\ \ \ \ }\n\n\ \ \ \ return\ b;\n\ \ }\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2012;\n\ \ \ \ int\ b\=1;\n\ \ \ \ b\=f(i);\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!Notez\ que\ la\ variable\ ``i``\ d\u00e9clar\u00e9e\ dans\ la\ m\u00e9thode\ ``f``\ est\ diff\u00e9rente\ de\ la\ variable\ ``i``\ d\u00e9clar\u00e9e\ dans\ la\ m\u00e9thode\ ``main``.\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2012;\n\ \ \ \ int\ b\=1;\n\ \ \ \ if(b\=\=0)\ {\n\ \ \ \ \ \ \ int\ i\=1;\n\ \ \ \ }\n\ \ \ \ else\ {\n\ \ \ \ \ \ \ \ i\=1234;\n\ \ \ \ }\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!\n``javac``\ refuse\ de\ compiler\ ce\ code\ car\ on\ cherche\ \u00e0\ d\u00e9clarer\ deux\ fois\ la\ variable\ ``i``\ ce\ qui\ est\ interdit\ dans\ la\ m\u00eame\ m\u00e9thode.\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2012;\n\ \ \ \ int\ b\=1;\n\ \ \ \ for(i\=1;\ i<10;\ i\=i+1)\ {\n\ \ \ \ \ \ \ b\=b+i;\n\ \ \ \ }\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ ``main``\ modifie\ la\ valeur\ de\ la\ variable\ ``i``\ dans\ la\ boucle\ ``for``.\ La\ valeur\ affich\u00e9e\ est\ ``10``.\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2012;\n\ \ \ \ int\ b\=1;\n\ \ \ \ while(b\!\=0)\ {\n\ \ \ \ \ \ i\=i+1;\n\ \ \ \ \ \ b\=b-1;\n\ \ \ \ }\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ ``main``\ met\ \u00e0\ jour\ la\ variable\ i\ dans\ le\ bloc\ ``while``.\ C'est\ donc\ 2013\ qui\ est\ affich\u00e9.\n=

#. name, q2, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ public\ static\ void\ main(String[]\ args)\ {\n\n\ \ \ \ int\ i\=2012;\n\ \ \ \ int\ b\=1;\n\ \ \ \ if(b\!\=0)\ {\n\ \ \ \ \ \ i\=i+1;\n\ \ \ \ \ \ b\=b-1;\n\ \ \ \ }\n\ \ \ \ else\ {\n\ \ \ \ \ \ i\=2012;\n\ \ \ \ }\n\n\ \ \ \ System.out.println(i);\n\n\ \ }\n=

#. name, q2, feedback
#: m04_qcm/task.yaml
!\nCette\ m\u00e9thode\ ``main``\ met\ \u00e0\ jour\ la\ variable\ i\ dans\ le\ bloc\ ``if``.\ C'est\ donc\ 2013\ qui\ est\ affich\u00e9.\n=

#. name, q3, name
#: m04_qcm/task.yaml
!Surcharge\ de\ m\u00e9thodes=

#. name, q3, header
#: m04_qcm/task.yaml
!\n\nEn\ Java,\ il\ est\ possible\ de\ d\u00e9finir\ plusieurs\ m\u00e9thodes\ qui\ ont\ le\ m\u00eame\ nom\ pour\ autant\ qu'elles\ diff\u00e8rent\ par\ le\ nombre\ ou\ le\ type\ de\ leurs\ arguments.\ La\ m\u00e9thode\ ``System.out.print``\ par\ exemple\ est\ une\ m\u00e9thode\ qui\ existe\ avec\ comme\ argument\ un\ entier,\ un\ caract\u00e8res,\ une\ cha\u00eene\ de\ caract\u00e8res,\ un\ bool\u00e9en.\ Consid\u00e9rons\ les\ d\u00e9clarations\ de\ m\u00e9thodes\ ci-dessous\n\n..\ code-block\:\:\ java\n\n\n\ public\ static\ void\ affiche(char\ c,\ int\ i)\ {\n\ \ System.out.println("char,\ int");\n\ }\n\n\ public\ static\ void\ affiche(int\ i,\ int\ j)\ {\n\ \ System.out.println("int,\ int");\n\ }\n\n\ public\ static\ void\ affiche(String\ s,\ double\ j)\ {\n\ \ System.out.println("String,\ double");\n\ }\n\n\ public\ static\ void\ affiche(String\ s,\ boolean\ b)\ {\n\ \ System.out.println("String,\ boolean");\n\ }\n\nLaquelle\ des\ s\u00e9quences\ d'invocation\ suivantes\ affiche\ \u00e0\ l'\u00e9cran\n\n..\ code-block\:\:\ java\n\n\ \ char,\ int\n\ \ String,\ double\n\ \ int,\ int\n\ \ String,\ boolean\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche('0',-4);\n\ \ affiche("abc",3.23);\n\ \ affiche(0,0);\n\ \ affiche("3.12",false);\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche('c',0);\n\ \ affiche("3.12",3.23);\n\ \ affiche(-1,1);\n\ \ affiche("abc",false);\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche('c',-2);\n\ \ affiche("abc",3.23);\n\ \ affiche(2,8);\n\ \ affiche("abc","true");\n=

#. name, q3, feedback
#: m04_qcm/task.yaml
!\nLa\ derni\u00e8re\ ligne\ appelle\ une\ m\u00e9thode\ qui\ prend\ comme\ arguments\ deux\ ``String``\ et\ non\ un\ ``String``\ et\ un\ ``boolean``\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche('8',-2);\n\ \ affiche(3.12,3.231);\n\ \ affiche(3,-12);\n\ \ affiche("3.1",false);\n=

#. name, q3, feedback
#: m04_qcm/task.yaml
!\nLa\ deuxi\u00e8me\ ligne\ appelle\ une\ m\u00e9thode\ qui\ prend\ comme\ arguments\ deux\ ``double``\ et\ non\ un\ ``String``\ et\ un\ ``double``.\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche("8",-2);\n\ \ affiche("3.12",3.231);\n\ \ affiche(6,-2);\n\ \ affiche("true",false);\n=

#. name, q3, feedback
#: m04_qcm/task.yaml
!\nLa\ premi\u00e8re\ ligne\ appelle\ une\ m\u00e9thode\ qui\ prend\ comme\ arguments\ un\ ``String``\ et\ un\ ``int``\ et\ non\ un\ caract\u00e8re\ et\ un\ ``int``.\n=

#. name, q3, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ affiche('7',0);\n\ \ affiche("3.12",3.231);\n\ \ affiche(6,"-2");\n\ \ affiche("false",true);\n=

#. name, q3, feedback
#: m04_qcm/task.yaml
!\nLa\ troisi\u00e8me\ ligne\ appelle\ une\ m\u00e9thode\ qui\ prend\ comme\ arguments\ un\ ``int``\ et\ un\ ``String``\ et\ non\ deux\ ``int``.\n=

#. name, q4, name
#. name, q5, name
#: m04_qcm/task.yaml
!Conversion\ de\ types=

#. name, q4, header
#: m04_qcm/task.yaml
!\nEn\ Java,\ il\ existe\ diff\u00e9rentes\ solutions\ pour\ convertir\ un\ nombre\ r\u00e9el\ en\ un\ nombre\ entier.\ Consid\u00e9rons\ la\ variable\ ``p``\ d\u00e9clar\u00e9e\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\n\ \ \ \ double\ p\=3.84;\n\nLaquelle\ des\ instructions\ ci-dessous\ affiche-t-elle\ ``3``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q4, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ \ System.out.println((int)\ p);\n=

#. name, q4, feedback
#: m04_qcm/task.yaml
!\nEn\ Java,\ ``(int)\ p``\ permet\ de\ convertir\ le\ contenu\ de\ la\ variable\ ``p``\ en\ une\ valeur\ enti\u00e8re.\n=

#. name, q4, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ System.out.println(Math.round(p));\n=

#. name, q4, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.round``\ retourne\ la\ valeur\ arrondie.\ Dans\ ce\ cas,\ le\ r\u00e9sultat\ est\ ``4``.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/Math.html\#round(double)\n=

#. name, q4, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ System.out.println(p);\n=

#. name, q4, feedback
#: m04_qcm/task.yaml
!\nCette\ instruction\ affiche\ la\ valeur\ de\ ``p``,\ c'est-\u00e0-dire\ ``3.84``.\n=

#. name, q4, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ System.out.println(Math.ceil(p));\n=

#. name, q4, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ \ ``Math.ceil``\ retourne\ un\ ``double``\ et\ non\ un\ entier.\ L'instruction\ affiche\ ``4.0``\ \u00e0\ l'\u00e9cran.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/Math.html\#ceil(double)\n=

#. name, q4, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ System.out.println(Math.floor(p));\n\n\n=

#. name, q4, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``Math.floor``\ retourne\ un\ ``double``\ et\ non\ un\ entier.\ L'instruction\ affiche\ ``3.0``\ \u00e0\ l'\u00e9cran.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/Math.html\#floor(double)\n=

#. name, q5, header
#: m04_qcm/task.yaml
!\nComme\ d\u00e9crit\ dans\ la\ section\ |jn2.5.6|_\ du\ livre\ de\ r\u00e9f\u00e9rence,\ il\ est\ possible\ en\ Java\ de\ r\u00e9aliser\ des\ conversions\ entre\ les\ nombres\ r\u00e9els\ et\ les\ nombres\ entiers.\ Certaines\ de\ ces\ conversions\ sont\ explicites,\ d'autres\ sont\ implicites.\ Consid\u00e9rons\ le\ fragment\ de\ code\ ci-dessous\n\n..\ code-block\:\:\ java\n\n\ double\ f;\n\ f\=...;\ //\ ligne\ 1\n\ System.out.println(f);\n\nLorsqu'il\ est\ ex\u00e9cut\u00e9,\ il\ affiche\ la\ valeur\ ``2.0``\ \u00e0\ l'\u00e9cran.\ Parmi\ les\ assignations\ ci-dessous,\ quelle\ est\ celle\ qui\ a\ plac\u00e9\ la\ valeur\ ``2.0``\ dans\ la\ variable\ ``f``\ ?\n\n\n..\ _jn2.5.6\:\ http\://math.hws.edu/javanotes/c2/s5.html\#basics.5.6\n..\ |jn2.5.6|\ replace\:\:\ `2.5.6\ \:\ Assignment\ Operators\ and\ Type-Casts`\n=

#. name, q5, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ f\=125/(40+10);\n=

#. name, q5, feedback
#: m04_qcm/task.yaml
!\nDans\ cette\ expression,\ le\ d\u00e9nominateur\ est\ une\ somme\ de\ nombres\ entiers,\ c'est\ donc\ lui-m\u00eame\ un\ entier.\ Le\ num\u00e9rateur\ est\ un\ entier\ \u00e9galement.\ Donc,\ l'op\u00e9ration\ de\ division\ est\ une\ division\ *enti\u00e8re*.\ Le\ r\u00e9sultat\ de\ cette\ division\ enti\u00e8re\ est\ ``2``\ qui\ est\ automatiquement\ converti\ par\ Java\ en\ la\ valeur\ r\u00e9elle\ ``2.0``.\ \ Pour\ Java,\ cette\ assignation\ \u00e9quivaut\ en\ fait\ \u00e0\ ..\ code-block\:\:\ java\n\n\ f\=(double)\ (125/(40+10));\n=

#. name, q5, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ f\=125/(40+10.0);\n=

#. name, q5, feedback
#: m04_qcm/task.yaml
!\nDans\ cette\ assignation,\ Java\ effectue\ une\ conversion\ de\ type\ implicite.\ Le\ d\u00e9nominateur\ devient\ automatiquement\ de\ type\ ``double``\ et\ le\ calcul\ est\ une\ division\ de\ r\u00e9els.\ \ Pour\ Java,\ cette\ assignation\ \u00e9quivaut\ en\ fait\ \u00e0\ ..\ code-block\:\:\ java\n\n\ f\=((double)\ 125)\ /\ ((double)\ 40+10.0));\n=

#. name, q5, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ f\=125/(double)\ (40+10);\n=

#. name, q5, feedback
#: m04_qcm/task.yaml
!\nDans\ cette\ assignation,\ le\ d\u00e9nominateur\ est\ obligatoirement\ un\ ``double``.\ La\ division\ est\ donc\ une\ division\ entre\ nombres\ r\u00e9els.\n=

#. name, q5, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ f\=125.0\ /\ (40.0+10.0);\n=

#. name, q5, feedback
#: m04_qcm/task.yaml
!\nDans\ cette\ assignation,\ le\ num\u00e9rateur\ et\ le\ d\u00e9nominateur\ sont\ de\ type\ ``double``.\ La\ division\ est\ donc\ une\ division\ entre\ nombres\ r\u00e9els.\n=

#. name, q6, name
#: m04_qcm/task.yaml
!Cha\u00eenes\ de\ caract\u00e8res=

#. name, q6, header
#: m04_qcm/task.yaml
!\nConsid\u00e9rons\ le\ code\ Java\ ci-dessous\ qui\ d\u00e9clare\ et\ initialise\ des\ cha\u00eenes\ de\ caract\u00e8res.\n\n..\ code-block\:\:\ java\n\n\ String\ s1\="abcdefghijklmnopqrstuvwxyz";\n\nLaquelle\ des\ s\u00e9quences\ d'instructions\ ci-dessous\ affiche-t-elle\ ``OK``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(5);\n\ \ if(c\=\='f')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, feedback
#: m04_qcm/task.yaml
!\nVoir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html\#charAt(int)\ pour\ la\ documentation\ de\ la\ m\u00e9thode\ ``charAt``.\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(0);\n\ \ if(c\=\='a')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(s1.length()-1);\n\ \ if(c\=\='z')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(4);\n\ \ if(c\=\='f')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, feedback
#: m04_qcm/task.yaml
!\nEn\ Java,\ les\ caract\u00e8res\ d'un\ cha\u00eene\ de\ caract\u00e8res\ sont\ num\u00e9rot\u00e9s\ \u00e0\ partir\ de\ l'indice\ ``0``.\ L'indice\ ``4``\ de\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s1``\ correspond\ donc\ au\ caract\u00e8re\ ``e``.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html\#charAt(int)\ pour\ la\ documentation\ de\ la\ m\u00e9thode\ ``charAt``.\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(6);\n\ \ if(c\=\='f')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, feedback
#: m04_qcm/task.yaml
!\nEn\ Java,\ les\ caract\u00e8res\ d'un\ cha\u00eene\ de\ caract\u00e8res\ sont\ num\u00e9rot\u00e9s\ \u00e0\ partir\ de\ l'indice\ ``0``.\ L'indice\ ``6``\ de\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s1``\ correspond\ donc\ au\ caract\u00e8re\ ``g``.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html\#charAt(int)\ pour\ la\ documentation\ de\ la\ m\u00e9thode\ ``charAt``.\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(1);\n\ \ if(c\=\='a')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, feedback
#: m04_qcm/task.yaml
!\nEn\ Java,\ les\ caract\u00e8res\ d'un\ cha\u00eene\ de\ caract\u00e8res\ sont\ num\u00e9rot\u00e9s\ \u00e0\ partir\ de\ l'indice\ ``0``.\ L'indice\ ``1``\ de\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s1``\ correspond\ donc\ au\ caract\u00e8re\ ``b``.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html\#charAt(int)\ pour\ la\ documentation\ de\ la\ m\u00e9thode\ ``charAt``.\n=

#. name, q6, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ char\ c\=s1.charAt(s1.length());\n\ \ if(c\=\='z')\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q6, feedback
#: m04_qcm/task.yaml
!\nEn\ Java,\ les\ caract\u00e8res\ d'un\ cha\u00eene\ de\ caract\u00e8res\ sont\ num\u00e9rot\u00e9s\ \u00e0\ partir\ de\ l'indice\ ``0``.\ ``s1.length()``\ est\ le\ nombre\ de\ caract\u00e8res\ dans\ la\ cha\u00eene\ ``s1``.\ \ Le\ dernier\ caract\u00e8re\ de\ cette\ cha\u00eene\ a\ donc\ l'indice\ ``s1.length()-1``.\ Il\ n'y\ a\ pas\ de\ caract\u00e8re\ \u00e0\ la\ position\ ``s1.length()``.\ Voir\ http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html\#charAt(int)\ pour\ la\ documentation\ de\ la\ m\u00e9thode\ ``charAt``.\n=

#. name, q7, name
#: m04_qcm/task.yaml
!Extraction\ de\ cha\u00eenes\ de\ caract\u00e8res=

#. name, q7, header
#: m04_qcm/task.yaml
!\nDans\ la\ classe\ ``String``,\ la\ m\u00e9thode\ ``substring``\ est\ une\ m\u00e9thode\ efficace\ pour\ extraire\ une\ sous-cha\u00eene\ d'une\ cha\u00eene\ de\ caract\u00e8res.\ En\ vous\ basant\ sur\ la\ description\ de\ ``substring``\ dans\ le\ livre\ et\ dans\ la\ documentation\ Java\ http\://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html,\ lequel\ des\ fragments\ de\ code\ ci-dessous\ affiche-t-il\ la\ cha\u00eene\ ``OK``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q7, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ String\ s1\="OOOO";\n\ \ String\ s2\="KKKK";\n\ \ String\ s3\=s1+s2;\n\ \ System.out.println(s3.substring(3,5));\n=

#. name, q7, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ String\ s1\="KOKOKO";\n\ \ String\ s3\=s1+s1;\n\ \ System.out.println(s3.substring(5,7));\n=

#. name, q7, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ String\ s1\="OOOO";\n\ \ String\ s2\="KKKK";\n\ \ String\ s3\=s1+s2;\n\ \ System.out.println(s1.substring(4,2));\n=

#. name, q7, feedback
#: m04_qcm/task.yaml
!\nLa\ cha\u00eene\ de\ caract\u00e8re\ ``s1``\ ne\ contient\ que\ ``OOOO``.\ Il\ n'existe\ pas\ de\ caract\u00e8re\ \u00e0\ l'indice\ ``4``\ dans\ cette\ cha\u00eene.\n=

#. name, q7, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ String\ s1\="OKOKO";\n\ \ String\ s2\="OKOKO";\n\ \ String\ s3\=s1+s2;\n\ \ System.out.println(s3.substring(4,2));\n=

#. name, q7, feedback
#: m04_qcm/task.yaml
!\nLa\ cha\u00eene\ ``s3``\ contient\ ``OKOKOOKOKO``.\ La\ cha\u00eene\ de\ caract\u00e8res\ extraite\ est\ donc\ ``OO``.\n=

#. name, q8, name
#: m04_qcm/task.yaml
!M\u00e9thode\ indexOf=

#. name, q8, header
#: m04_qcm/task.yaml
!\nEn\ Java,\ la\ m\u00e9thode\ ``indexOf``\ peut\ \u00eatre\ utilis\u00e9e\ pour\ d\u00e9terminer\ si\ une\ cha\u00eene\ de\ caract\u00e8res\ est\ comprise\ dans\ une\ autre\ cha\u00eene\ de\ caract\u00e8res.\ Consid\u00e9rons\ les\ d\u00e9clarations\ suivantes\n\n..\ code-block\:\:\ java\n\n\ String\ s1\="abcdef";\n\ String\ s2\="mnopq";\n\ String\ s3\="abcdefijklmnopqrstuvwxyz";\n\nLaquelle\ des\ s\u00e9quences\ d'instructions\ ci-dessous\ affiche\ ``OK``\ \u00e0\ l'\u00e9cran\ ?\n=

#. name, q8, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ if(s3.indexOf(s2)>\=0)\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q8, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ if(s3.indexOf(s1)>\=0)\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q8, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ if(s1.indexOf(s2)>\=0)\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q8, feedback
#: m04_qcm/task.yaml
!\nDans\ ce\ code,\ la\ m\u00e9thode\ ``indexOf``\ est\ appliqu\u00e9e\ \u00e0\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s1``\ et\ prend\ comme\ argument\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s2``.\ Elle\ d\u00e9termine\ donc\ si\ la\ cha\u00eene\ ``s2``\ est\ une\ sous-cha\u00eene\ de\ ``s1``.\ Comme\ ce\ n'est\ pas\ le\ cas,\ elle\ retourne\ donc\ ``-1``.\n=

#. name, q8, text
#: m04_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ if(s2.indexOf(s3)>\=0)\ {\n\ \ \ \ \ System.out.println("OK");\n\ \ }\n=

#. name, q8, feedback
#: m04_qcm/task.yaml
!\nDans\ ce\ code,\ la\ m\u00e9thode\ ``indexOf``\ est\ appliqu\u00e9e\ \u00e0\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s2``\ et\ prend\ comme\ argument\ la\ cha\u00eene\ de\ caract\u00e8res\ ``s3``.\ Elle\ d\u00e9termine\ donc\ si\ la\ cha\u00eene\ ``s3``\ est\ une\ sous-cha\u00eene\ de\ ``s2``.\ Comme\ ce\ n'est\ pas\ le\ cas,\ elle\ retourne\ donc\ ``-1``.\n=

#. name, q9, name
#: m04_qcm/task.yaml
!M\u00e9thodes\ de\ la\ classe\ String=

#. name, q9, header
#: m04_qcm/task.yaml
!\nLa\ classe\ ``String``\ contient\ de\ nombreuses\ m\u00e9thodes\ utiles\ de\ manipulation\ des\ cha\u00eenes\ de\ caract\u00e8res.\ Certains\ retournent\ un\ bool\u00e9en,\ d'autres\ retournent\ un\ caract\u00e8re,\ d'autres\ encore\ retourne\ un\ ``String``.\ En\ consid\u00e9rant\ les\ d\u00e9clarations\ ci-dessous,\ quelle\ est\ la\ suite\ d'affirmations\ ci-dessous\ qui\ est\ vraie\ ?\n\n..\ code-block\:\:\ java\n\n\ String\ s1\="abcdef";\n\ String\ s2\="mnopq";\n\ String\ s3\="abcdefijklmnopqrstuvwxyz";\n=

#. name, q9, text
#: m04_qcm/task.yaml
!``s1.equalsIgnoreCase(s2)``\ est\ un\ bool\u00e9en,\ ``s1.charAt(2)``\ est\ un\ caract\u00e8re\ et\ ``s3.indexOf(s2)``\ est\ un\ entier\n=

#. name, q9, text
#: m04_qcm/task.yaml
!``s1.equalsIgnoreCase(s2)``\ est\ un\ bool\u00e9en,\ ``s2.length()``\ est\ un\ entier\ et\ ``s1.substring(1,2)``\ est\ une\ cha\u00eene\ de\ caract\u00e8res\n=

#. name, q9, text
#: m04_qcm/task.yaml
!``s2.equalsIgnoreCase(s3)``\ est\ un\ bool\u00e9en,\ ``s3.length()``\ est\ un\ caract\u00e8re\ et\ ``s2.indexOf(s3)``\ est\ un\ entier\n=

#. name, q9, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``length``\ retourne\ la\ longueur\ de\ la\ cha\u00eene\ de\ caract\u00e8re\ sur\ laquelle\ elle\ s'applique.\ Cette\ valeur\ est\ un\ entier.\n=

#. name, q9, text
#: m04_qcm/task.yaml
!``s2.equalsIgnoreCase(s2)``\ est\ un\ bool\u00e9en,\ ``s3.indexOf(s2)``\ est\ un\ caract\u00e8re\ et\ ``s2.substring(1,2)``\ une\ cha\u00eene\ de\ caract\u00e8res\n=

#. name, q9, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``indexOf``\ retourne\ un\ entier\ et\ non\ un\ caract\u00e8re.\n=

#. name, q9, text
#: m04_qcm/task.yaml
!``s1.equalsIgnoreCase(s2)``\ affiche\ ``true``\ ou\ ``false``,\ ``s3.indexOf(s2)``\ est\ entier\ et\ ``s2.substring(1,2)``\ une\ cha\u00eene\ de\ caract\u00e8res\n=

#. name, q9, feedback
#: m04_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``equalsIgnoreCase``\ retourne\ un\ bool\u00e9en,\ elle\ n'affiche\ rien.\n=

#. context
#: m04dem1/task.yaml
!La\ classe\ ``Character``\ de\ l'API\ Java\ (https\://docs.oracle.com/javase/8/docs/api/java/lang/Character.html)\ contient\ un\ bon\ nombre\ de\ m\u00e9thodes\ qui\ pourront\ vous\ \u00eatre\ utiles\ pour\ manipuler\ des\ caract\u00e8res.\ Avec\ ces\ exercices,\ vous\ serez\ un\ peu\ plus\ familiers\ avec\ certaines\ m\u00e9thodes\ qui\ vous\ seront\ certainement\ utiles\ dans\ le\ futur.\n\n\n..\ code-block\:\:\ java\n\n\ \ \ \ char\ c\ \=\ //\ un\ caract\u00e8re,\ repr\u00e9sentant\ un\ chiffre\ ou\ non\n\ \ \ \ char\ d\ \=\ //\ un\ caract\u00e8re\ de\ a\ \u00e0\ z,\ en\ majuscule\ ou\ non\n\ \ \ \ boolean\ b;\ //\ \u00e0\ assigner\ dans\ la\ Question\ 1\n\ \ \ \ char\ e;\ \ \ \ //\ \u00e0\ assigner\ dans\ la\ Question\ 2\n=

#. name
#: m04dem1/task.yaml
!Mission\ 4\ \:\ Questions\ de\ d\u00e9marrage\ 1\ \:\ La\ classe\ Character=

#. name, q1, header
#: m04dem1/task.yaml
!En\ utilisant\ l'API\ Java\ de\ la\ classe\ Character,\ assignez\ \u00e0\ la\ variable\ bool\u00e9enne\ b\ la\ valeur\ true\ si\ la\ variable\ c\ contient\ un\ caract\u00e8re\ repr\u00e9sentant\ un\ chiffre,\ et\ la\ valeur\ false\ sinon.\ R\u00e9pondez\ \u00e0\ cette\ question\ en\ une\ seule\ ligne.\n=

#. name, q2, header
#: m04dem1/task.yaml
!Toujours\ en\ utilisant\ l'API\ Java\ de\ la\ classe\ Character,\ assignez\ \u00e0\ la\ variable\ e\ le\ caract\u00e8re\ en\ majuscule\ correspondant\ au\ caract\u00e8re\ contenu\ dans\ la\ variable\ d.\ R\u00e9pondez\ \u00e0\ cette\ question\ en\ une\ seule\ ligne.=

#. context
#: m04dem2/task.yaml
!En\ java,\ on\ retrouve\ des\ types\ de\ variables\ primitifs\ comme\ ``int``,\ ``char``,\ ``double``,\ qui\ commencent\ par\ une\ minuscule,\ mais\ aussi\ des\ objets,\ dont\ les\ ``String``\ font\ partie.\ Cependant,\ les\ ``String``\ sont\ des\ objets\ un\ peu\ particuliers\ qui\ permettent\ certaines\ op\u00e9rations\ qui\ les\ diff\u00e9rencient\ des\ objets,\ comme\ la\ concat\u00e9nation\ des\ ``String``.\ La\ concat\u00e9nation\ de\ deux\ ``String``\ consiste\ \u00e0\ former\ un\ nouveau\ ``String``\ qui\ contient\ le\ contenu\ du\ premier\ et\ du\ deuxi\u00e8me\ mis\ bout\ \u00e0\ bout.\ Ainsi,\ concat\u00e9ner\ le\ ``String``\ ``"Harry"``\ et\ le\ ``String``\ ``"gateau"``\ nous\ donne\ le\ ``String``\ ``"Harrygateau"``.\n\nNous\ allons\ maintenant\ vous\ demander\ d'impl\u00e9menter\ le\ corps\ de\ la\ m\u00e9thode\ ``cat``,\ qui\ permet\ de\ renvoyer\ la\ concat\u00e9nation\ de\ deux\ ``String``,\ ``s1``\ et\ ``s2``.\ Voici\ les\ signatures\ de\ la\ m\u00e9thode\ ``cat``.\ Veillez\ bien\ \u00e0\ respecter\ scrupuleusement\ les\ sp\u00e9cifications\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ \ \ \ @pre\ -\n\ \ \ \ \ *\ \ \ \ @post\ Retourne\ la\ concat\u00e9nation\ de\ s1\ et\ s2.\n\ \ \ \ \ */\n\ \ \ \ public\ static\ String\ cat(String\ s1,\ String\ s2)\ {\n\ \ \ \ \ \ \ \ //\ \u00c0\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /**\n\ \ \ \ \ *\ \ \ \ @pre\ -\n\ \ \ \ \ *\ \ \ \ @post\ Retourne\ la\ concat\u00e9nation\ de\ s1\ et\ c.\n\ \ \ \ \ */\n\ \ \ \ public\ static\ String\ cat(String\ s1,\ char\ c)\ {\n\ \ \ \ \ \ \ \ //\ \u00c0\ compl\u00e9ter\n\ \ \ \ }=

#. name
#: m04dem2/task.yaml
!Mission\ 4\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ Concat\u00e9nation=

#. name, q1, name
#: m04dem2/task.yaml
!La\ m\u00e9thode\ cat\ avec\ deux\ Strings=

#. name, q1, header
#: m04dem2/task.yaml
!Veuillez\ \u00e9crire\ le\ corps\ de\ la\ m\u00e9thode\ cat\ servant\ \u00e0\ concat\u00e9ner\ deux\ Strings\ s1\ et\ s2.\ Veillez\ bien\ \u00e0\ \u00e9crire\ le\ corps\ uniquement.\ N'oubliez\ pas\ l'instruction\ return.=

#. name, q2, name
#: m04dem2/task.yaml
!La\ m\u00e9thode\ cat\ avec\ un\ String\ et\ un\ caract\u00e8re=

#. name, q2, header
#: m04dem2/task.yaml
!Veuillez\ maintenant\ impl\u00e9menter\ la\ m\u00e9thode\ cat\ servant\ \u00e0\ concat\u00e9ner\ un\ String\ et\ un\ char.\ Veillez\ bien\ \u00e0\ \u00e9crire\ le\ corps\ uniquement.\ N'oubliez\ pas\ l'instruction\ return.=

#. context
#: m04dem3/task.yaml
!Comme\ dit\ pr\u00e9c\u00e9demment,\ le\ type\ ``String``\ est\ un\ type\ quelque\ peu\ particulier\ en\ Java.\ Pour\ faire\ des\ op\u00e9rations\ sur\ des\ ``String``,\ on\ a\ tr\u00e8s\ souvent\ besoin\ de\ leur\ longueur.\ En\ vous\ r\u00e9f\u00e9rant\ \u00e0\ l'API\ Java\ de\ la\ classe\ ``String``\ (http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html),\ \u00e9crivez\ en\ une\ seule\ ligne\ le\ corps\ de\ la\ m\u00e9thode\ ``showLength()``,\ qui\ affiche\ sur\ la\ sortie\ standard\ la\ longueur\ de\ l'argument\ ``s``.\ La\ m\u00e9thode\ doit\ \u00eatre\ impl\u00e9ment\u00e9\ de\ sorte\ que\ lorsqu'on\ l'appelle\ trois\ fois\ de\ suite\ avec\ comme\ argument\ ``"Popol"``,\ ``"Jeanjean"``\ et\ ``"abc"``,\ de\ longueurs\ 5,\ 8\ et\ 3,\ on\ retrouve\ la\ sortie\ standard\ dans\ cet\ \u00e9tat\ \:\n\n\:\:\n\n\ \ \ \ 5\n\ \ \ \ 8\n\ \ \ \ 3\n\nVoici\ la\ signature\ de\ la\ m\u00e9thode\ ``showLength()``.\ Veillez\ \u00e0\ bien\ respecter\ les\ sp\u00e9cifications\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ affiche\ la\ longueur\ de\ s\ sur\ la\ sortie\ standard\n\ \ \ \ \ */\n\ \ \ \ \ public\ static\ void\ showLength(String\ s)\ {\n\ \ \ \ \ \ \ \ \ //\ \u00e0\ compl\u00e9ter\n\ \ \ \ \ }\n=

#. name
#: m04dem3/task.yaml
!Mission\ 4\ \:\ Question\ de\ d\u00e9marrage\ 3\ \:\ Longueur\ d'un\ String=

#. name, q1, name
#: m04dem3/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ showLength=

#. name, q1, header
#: m04dem3/task.yaml
!\u00c9crivez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ showLength\ \:=

#. context
#: m04dem4/task.yaml
!Il\ est\ parfois\ utile\ de\ s'assurer\ qu'un\ String\ est\ en\ majuscule.\ La\ m\u00e9thode\ ``Character.toUpperCase()``\ de\ la\ classe\ ``Character``\ de\ l'API\ Java\ permet\ de\ r\u00e9cup\u00e9rer\ la\ majuscule\ d'un\ caract\u00e8re\ qu'on\ lui\ passe\ en\ argument.\ En\ utilisant\ cette\ m\u00e9thode,\ impl\u00e9mentez\ la\ m\u00e9thode\ ``toUpper``\ qui\ retourne\ un\ ``String``\ identique\ \u00e0\ celui\ pass\u00e9\ en\ argument,\ mais\ en\ majuscule.\ Attention\ \u00e0\ ne\ pas\ utiliser\ une\ autre\ m\u00e9thode\ que\ ``Character.toUpperCase()``.\n\nVoici\ la\ signature\ de\ la\ m\u00e9thode\ ``toUpper``\ \u00e0\ impl\u00e9menter.\ Respectez\ bien\ les\ sp\u00e9cifications\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ \ \ \ @pre\ \ s\ non\ vide\n\ \ \ \ \ *\ \ \ \ @post\ retourne\ s\ en\ majuscules\n\ \ \ \ \ */\n\ \ \ \ \ public\ static\ String\ toUpper(String\ s)\ {\n\ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ }\n\n=

#. name
#: m04dem4/task.yaml
!Mission\ 4\ \:\ Question\ de\ d\u00e9marrage\ 4\ \:\ toUpper=

#. name, q1, name
#: m04dem4/task.yaml
!M\u00e9thode\ toUpper=

#. name, q1, header
#: m04dem4/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ toUpper.\ Veillez\ bien\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ la\ signature.=

#. context
#: m04dem5/task.yaml
!\u00c9crivez\ le\ corps\ de\ la\ m\u00e9thode\ de\ la\ m\u00e9thode\ ``containsChar()``\ qui\ prend\ deux\ arguments,\ ``s1``\ et\ ``s2``,\ et\ qui\ v\u00e9rifie\ si\ tous\ les\ caract\u00e8res\ pr\u00e9sents\ dans\ ``s1``\ sont\ aussi\ pr\u00e9sents\ dans\ ``s2``.\ Si\ c'est\ le\ cas,\ la\ m\u00e9thode\ retourne\ ``true``.\ Le\ cas\ des\ ``String``\ vides\ ne\ doit\ pas\ \u00eatre\ g\u00e9r\u00e9.\n\nVoici\ les\ sp\u00e9cifications\ de\ la\ m\u00e9thode\ ``containsChar()``\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ \ \ \ @pre\ \ s1\ et\ s2\ non-vides\n\ \ \ \ \ *\ \ \ \ @post\ Retourne\ true\ si\ s1\ contient\ uniquement\ des\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ caract\u00e8res\ qui\ sont\ aussi\ dans\ s2.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ Retourne\ false\ sinon.\n\ \ \ \ \ */\n\ \ \ \ \ public\ static\ boolean\ containsChar(String\ s1,\ String\ s2){\n\ \ \ \ \ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ }=

#. name
#: m04dem5/task.yaml
!Mission\ 4\ \:\ Question\ de\ d\u00e9marrage\ 5\ \:\ La\ m\u00e9thode\ containsChar()=

#. name, q1, name
#: m04dem5/task.yaml
!M\u00e9thode\ containsChar()=

#. name, q1, header
#: m04dem5/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ containsChar().\ V\u00e9rifiez\ bien\ les\ sp\u00e9cifications.\ Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ sa\ signature=

#. name, q2, name
#: m04dem5/task.yaml
!M\u00e9thode\ auxiliaires=

#. name, q2, header
#: m04dem5/task.yaml
!Si\ vous\ souhaitez\ diviser\ ce\ probl\u00e8me\ en\ sous-probl\u00e8mes,\ d\u00e9finissez\ ici\ les\ m\u00e9thodes\ que\ vous\ allez\ utiliser\ dans\ la\ m\u00e9thode\ containsChar().\ Vous\ n'\u00eates\ pas\ oblig\u00e9\ d'en\ d\u00e9finir.=

#. context
#: m04real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ mission\ 4.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ BioInfo.java\n-\ README.txt=

#. name
#: m04real/task.yaml
!Mission\ 4\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m04real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 4=

#. author
#: m05Q1/task.yaml m05Q4/task.yaml m05Q9/task.yaml
!Ludovic\ TAFFIN,\ Olivier\ MARTIN=

#. context
#: m05Q1/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ allSame(double\ []\ v)``\ qui\ retourne\ vrai\ si\ tous\ les\ \u00e9l\u00e9ments\ du\ tableau\ ont\ la\ m\u00eame\ valeur,\ false\ sinon.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null,\ v\ contient\ au\ moins\ 2\ \u00e9l\u00e9ments\n\ \ \ \ \ *\ @post\ retourne\ vrai\ si\ tous\ les\ \u00e9l\u00e9ments\ du\ tableau\ ont\ la\ m\u00eame\ valeur,\ false\ sinon\n\ \ \ \ \ */=

#. name
#: m05Q1/task.yaml
!Mission\ 5\ \:\ Q*\ \:\ Tous\ la\ m\u00eame\ valeur=

#. name, q1, name
#: m05Q1/task.yaml
!Tous\ \u00e9gaux=

#. context
#: m05Q10/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``double[]\ somme(double[]\ a,\ double[]\ b)``\ qui\ retourne\ un\ tableau\ dont\ chaque\ \u00e9l\u00e9ment\ est\ la\ somme\ des\ \u00e9l\u00e9ments\ des\ tableaux\ a\ et\ b\ au\ m\u00eame\ indice.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ a\ \!\=\ null,\ b\ \!\=\ null,\ a.length\ \=\=\ b.lenght\n\ \ \ \ \ *\ @post\ retourne\ un\ tableau\ dont\ chaque\ \u00e9l\u00e9ment\ est\ la\ somme\ des\ \u00e9l\u00e9ments\n\ \ \ \ \ *\ \ \ \ \ \ \ des\ tableaux\ a\ et\ b\ au\ m\u00eame\ indice\n\ \ \ \ \ */=

#. name
#: m05Q10/task.yaml
!Mission\ 5\ \:\ Q**\ \:\ Somme=

#. name, q1, name
#. name, q2, name
#: m05Q10/task.yaml m05dem5/task.yaml
!Somme=

#. context
#: m05Q11/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``int[]\ top(int\ n,\ int[]\ v)``\ qui\ retourne\ un\ tableau\ de\ longueur\ ``n``\ dont\ les\ \u00e9l\u00e9ments\ sont\ dans\ l'ordre\ croissant\ et\ qui\ contient\ les\ ``n``\ plus\ grands\ entiers\ du\ tableau\ ``v``\ .\n\nPar\ exemple\ \:\n\n-\ ``top(3,\ {5,0,4,1,2})``\ doit\ retourner\ ``{2,4,5}``\n-\ ``top(1,\ {5,3})``\ doit\ retourner\ ``{3}``\n-\ ``top(2,\ {5,1,3})``\ doit\ retourner\ ``{3,5}``\n\nLa\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ v\ \!\=\ null,\ n\ <\ v.length\n\ \ \ \ \ \ *\ @post\ retourne\ un\ tableau\ de\ longueur\ n\n\ \ \ \ \ \ *\ \ \ \ \ \ \ dont\ les\ \u00e9l\u00e9ments\ sont\ dans\ l'ordre\ croissant\n\ \ \ \ \ \ *\ \ \ \ \ \ \ et\ qui\ contient\ les\ n\ plus\ grands\ entiers\ du\ tableau\ v\n\ \ \ \ \ \ */=

#. name
#: m05Q11/task.yaml
!Mission\ 5\ \:\ Q***\ \:\ Top=

#. name, q1, name
#: m05Q11/task.yaml
!Top=

#. context
#: m05Q12/task.yaml
!Ecrivez\ les\ m\u00e9thodes\ ``oppose``\ et\ ``oppose2``\ dont\ les\ sp\u00e9cifications\ et\ signatures\ sont\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ un\ tableau\ de\ m\u00eame\ longueur\ que\ v\ et\ dont\ tous\ les\n\ \ \ \ \ *\ \ \ \ \ \ \ \u00e9l\u00e9ments\ ont\ la\ valeur\ oppos\u00e9e\ de\ ceux\ de\ v\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int[]\ oppose(int[]\ v)\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null\n\ \ \ \ \ *\ @post\ modifie\ le\ tableau\ v\ et\ remplace\ chaque\ \u00e9l\u00e9ment\ de\ v\ par\ son\ oppos\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ static\ void\ oppose2(int[]\ v)\n\n=

#. name
#: m05Q12/task.yaml
!Mission\ 5\ \:\ Q*\ \:\ Oppose=

#. name, q1, header
#: m05Q12/task.yaml
!Ecrivez\ une\ premi\u00e8re\ version\ de\ oppose\ qui\ permet\ de\ retourner\ l'oppos\u00e9\ du\ tableau\ v,\ c'est-\u00e0-dire\ un\ tableau\ de\ m\u00eame\ longueur\ que\ v\ et\ dont\ tous\ les\ \u00e9l\u00e9ments\ sont\ l'oppos\u00e9\ de\ l'\u00e9l\u00e9ment\ correspondant\ du\ tableau\ v=

#. name, q2, header
#: m05Q12/task.yaml
!Ecrivez\ une\ deuxi\u00e8me\ version\ de\ oppose\ qui\ permet\ de\ modifier\ le\ tableau\ v,\ afin\ que\ ce\ dernier\ contienne\ l'oppos\u00e9\ des\ \u00e9l\u00e9ments\ qu'il\ contient.=

#. context
#: m05Q2/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``double\ max(double[]\ v)``\ qui\ retourne\ le\ maximum\ du\ tableau\ de\ r\u00e9els\ v.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ le\ maximum\ du\ tableau\ de\ r\u00e9els\ v\n\ \ \ \ \ */=

#. name
#: m05Q2/task.yaml
!Mission\ 5\ \:\ Q*\ \:\ Valeur\ max\ du\ tableau=

#. name, q1, name
#: m05Q2/task.yaml
!Max=

#. context
#: m05Q3/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``double\ mean(double[]\ v)``\ qui\ retourne\ la\ moyenne\ arithm\u00e9tique\ du\ tableau\ de\ r\u00e9els\ v.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ la\ moyenne\ arithm\u00e9tique\ du\ tableau\ de\ r\u00e9els\ v\n\ \ \ \ \ */=

#. name
#: m05Q3/task.yaml
!Mission\ 5\ \:\ Q*\ \:\ Valeur\ moyenne\ du\ tableau=

#. name, q1, name
#: m05Q3/task.yaml
!Mean=

#. context
#: m05Q4/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``boolean\ croissant(int[]\ t)``\ qui\ retourne\ true\ si\ les\ \u00e9l\u00e9ments\ du\ tableau\ ``t``\ sont\ croissants,\ false\ sinon.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ t\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ les\ \u00e9l\u00e9ments\ du\ tableau\ t\ sont\ croissants,\ false\ sinon\n\ \ \ \ \ */=

#. name
#: m05Q4/task.yaml
!Mission\ 5\ \:\ Q*\ \:\ Tableau\ croissant=

#. name, q1, name
#: m05Q4/task.yaml
!Croissant=

#. context
#: m05Q5/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``double[]\ initVector(int\ n,\ double\ i)``\ qui\ retourne\ un\ vecteur\ de\ n\ \u00e9l\u00e9ments\ tous\ initialis\u00e9s\ \u00e0\ la\ valeur\ i.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ *\ @post\ retourne\ un\ vecteur\ de\ n\ \u00e9l\u00e9ments\ tous\ initialis\u00e9s\ \u00e0\ la\ valeur\ i\n\ \ \ \ \ */=

#. name
#: m05Q5/task.yaml
!Mission\ 5\ \:\ Q**\ \:\ Vecteur=

#. name, q1, name
#: m05Q5/task.yaml
!Vecteur=

#. context
#: m05Q6/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``double[][]\ matriceIdentite(int\ n)``\ qui\ retourne\ la\ matrice\ identit\u00e9\ de\ taille\ n\u00d7n.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ *\ @post\ retourne\ la\ matrice\ identit\u00e9\ de\ taille\ n\u00d7n\n\ \ \ \ \ */=

#. name
#: m05Q6/task.yaml
!Mission\ 5\ \:\ Q**\ \:\ Matrice\ identit\u00e9=

#. name, q1, name
#: m05Q6/task.yaml
!Matrice\ identit\u00e9=

#. context
#: m05Q7/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``int\ count(int\ v,\ int[][]\ m)``\ qui\ compte\ le\ nombre\ d'occurences\ de\ la\ valeur\ ``v``\ dans\ ``int[][]\ m``.\nla\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ m\ \!\=\ null\n\ \ \ \ \ *\ @post\ compte\ le\ nombre\ d'occurences\ de\ la\ valeur\ v\ dans\ int[][]\ m\n\ \ \ \ \ */=

#. name
#: m05Q7/task.yaml
!Mission\ 5\ \:\ Q**\ \:\ Count=

#. name, q1, name
#: m05Q7/task.yaml
!Count=

#. context
#: m05Q8/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``void\ replace(int\ v,\ int\ w,\ int[][]\ m)``\ qui\ remplace\ toutes\ les\ d'occurences\ de\ la\ valeur\ ``v``\ dans\ ``int[][]\ m``\ par\ la\ valeur\ ``w``.\ la\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ m\ \!\=\ null\n\ \ \ \ \ *\ @post\ remplace\ toutes\ les\ d'occurences\ de\ la\ valeur\ v\n\ \ \ \ \ *\ \ \ \ \ \ \ dans\ le\ tableau\ int[][]\ m\ par\ la\ valeur\ w.\n\ \ \ \ \ *\ \ \ \ \ \ \ Modifie\ la\ matrice\ m.\n\ \ \ \ \ */=

#. name
#: m05Q8/task.yaml
!Mission\ 5\:\ Q**\ \:\ replace=

#. name, q1, name
#: m05Q8/task.yaml
!replace=

#. context
#: m05Q9/task.yaml
!Ecrivez\ la\ m\u00e9thode\ ``void\ decaleDroite(char[]\ v)``\ qui\ modifie\ le\ tableau\ ``v``\ en\ d\u00e9calant\ tous\ les\ caract\u00e8res\ d'une\ position\ vers\ la\ droite\ et\ ``v[0]``\ a\ \u00e9t\u00e9\ mis\ \u00e0\ la\ valeur\ ``*``\ (\u00e9toile).\nPar\ exemple,\ si\ ``v\ \=\ ['a',\ 'b',\ 'c']``,\ le\ r\u00e9sultat\ attendu\ est\ ``['*',\ 'a',\ 'b']``.\ La\ sp\u00e9cification\ est\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ v\ \!\=\ null\n\ \ \ \ \ *\ @post\ Modifie\ le\ tableau\ v\ en\ d\u00e9calant\ tous\ les\ caract\u00e8res\n\ \ \ \ \ *\ \ \ \ \ \ \ d'une\ position\ vers\ la\ droite\n\ \ \ \ \ *\ \ \ \ \ \ \ et\ v[0]\ est\ mis\ \u00e0\ la\ valeur\ '*'\ (\u00e9toile)\n\ \ \ \ \ */=

#. name
#: m05Q9/task.yaml
!Mission\ 5\ \:\ Q**\ \:\ Decale=

#. name, q1, name
#: m05Q9/task.yaml
!decale=

#. context
#: m05_bf/task.yaml
!Dans\ cette\ question\ de\ bilan\ final,\ on\ va\ s'int\u00e9resser\ \u00e0\ l'\u00e9criture\ de\ m\u00e9thodes\ dont\ le\ but\ est\ de\ modifier\ les\ \u00e9l\u00e9ments\ d'un\ tableau\ pass\u00e9\ en\ param\u00e8tre.\ Le\ but\ de\ ces\ m\u00e9thodes\ est\ de\ d\u00e9placer\ tous\ les\ \u00e9l\u00e9ments\ du\ tableau\ d'un\ certain\ nombre\ de\ cases\ vers\ la\ droite.\n\nCommen\u00e7ons\ par\ la\ m\u00e9thode\ ``rotateRightOne``.\ Elle\ va\ d\u00e9caler\ tous\ les\ \u00e9l\u00e9ments\ du\ tableau\ pass\u00e9\ en\ param\u00e8tre,\ d'une\ case\ vers\ la\ droite.\ Voici\ sa\ sp\u00e9cification\ pr\u00e9cise\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ tab\ \!\=\ null\n\ \ \ \ \ *\ @post\ Le\ tableau\ tab\ a\ \u00e9t\u00e9\ modifi\u00e9\ et\ tous\ ses\ \u00e9l\u00e9ments\ sont\ d\u00e9cal\u00e9s\n\ \ \ \ \ *\ \ \ \ \ \ \ d'une\ position\ vers\ la\ droite\ (le\ dernier\ \u00e9l\u00e9ment\ revenant\n\ \ \ \ \ *\ \ \ \ \ \ \ en\ premi\u00e8re\ position)\n\ \ \ \ \ */\n\ \ \ \ \ public\ static\ void\ rotateRightOne(int[]\ tab)\ {\n\ \ \ \ \ \ \ \ \ //\ Question\ 1\n\ \ \ \ \ }\n\nEnsuite,\ vous\ devez\ \u00e9crire\ une\ m\u00e9thode\ ``rotateRight``\ qui\ d\u00e9place\ tous\ les\ \u00e9l\u00e9ments\ d'un\ tableau,\ vers\ la\ droite,\ d'un\ certain\ nombre\ ``n``\ de\ positions.\ Voici\ sa\ sp\u00e9cification\ pr\u00e9cise\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ tab\ \!\=\ null\n\ \ \ \ \ *\ @post\ Le\ tableau\ tab\ a\ \u00e9t\u00e9\ modifi\u00e9\ et\ tous\ ses\ \u00e9l\u00e9ments\ sont\ d\u00e9cal\u00e9s\n\ \ \ \ \ *\ \ \ \ \ \ \ de\ n\ positions\ vers\ la\ droite,\ c'est-\u00e0-dire\ que\ les\ \u00e9l\u00e9ments\n\ \ \ \ \ *\ \ \ \ \ \ \ qui\ se\ trouvaient\ en\ i\ se\ retrouvent\ en\ (i\ +\ n)\ %\ tab.length\n\ \ \ \ \ */\n\ \ \ \ public\ static\ void\ rotateRight(int[]\ tab,\ int\ n)\ {\n\ \ \ \ \ \ \ \ //\ Question\ 2\n\ \ \ \ }\n\nN'oubliez\ pas\ d'\u00e9viter\ la\ duplication\ de\ code,\ et\ d'\u00e9ventuellement\ r\u00e9utiliser\ l'une\ des\ deux\ m\u00e9thodes\ dans\ l'autre.=

#. name
#: m05_bf/task.yaml
!Mission\ 5(a)\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, name
#: m05_bf/task.yaml
!RotateRightOne=

#. name, q1, header
#: m05_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``rotateRightOne``\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n=

#. name, q2, name
#: m05_bf/task.yaml
!RotateRightN=

#. name, q2, header
#: m05_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``rotateRight``\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n=

#. context
#: m05_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 5.\ Tableaux\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ -\ |jn2|_\n\n\ \ -\ |jn2.5|_\n\n\ \ \ \ -\ |jn2.5.7|_\n\n\ -\ |jn7|_\n\n\ \ -\ |jn7.1|_\n\n\ \ \ \ -\ |jn7.1.1|_\n\ \ \ \ -\ |jn7.1.2|_\n\ \ \ \ -\ |jn7.1.3|_\n\n\ \ -\ |jn7.2|_\n\n\ \ \ \ -\ |jn7.2.1|_\n\ \ \ \ -\ |jn7.2.3|_\n\ \ \ \ -\ |jn7.2.4|_\n\ \ \ \ -\ |jn7.2.6|_\n\n\ \ -\ |jn7.4|_\n\n\ \ \ \ -\ |jn7.4.1|_\n\n\ \ -\ |jn7.5|_\n\n\ \ \ \ -\ |jn7.5.1|_\n\ \ \ \ -\ |jn7.5.2|_\n\n\ -\ |jn8|_\n\n\ \ -\ |jn8.4|_\n\n\ \ \ \ -\ |jn8.4.1|_\n\n\nLes\ sections\ vues\ pr\u00e9c\u00e9demment\ restent\ bien\ entendu\ d'actualit\u00e9.\n\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn2\ \:\ http\://math.hws.edu/javanotes/c2/index.html\n..\ |jn2|\ replace\:\:\ `2\ \:\ Programming\ in\ the\ Small\ I\:\ Names\ and\ Things`\n\n..\ _jn2.5\ \:\ http\://math.hws.edu/javanotes/c2/s5.html\n..\ |jn2.5|\ replace\:\:\ `2.5\ \:\ Details\ of\ Expressions`\n\n..\ _jn2.5.7\:\ http\://math.hws.edu/javanotes/c2/s5.html\#basics.5.7\n..\ |jn2.5.7|\ replace\:\:\ `2.5.7\ \:\ Type\ Conversion\ of\ Strings`\n\n..\ _jn7\ \:\ http\://math.hws.edu/javanotes/c7/index.html\n..\ |jn7|\ replace\:\:\ `7\ \:\ Arrays`\n\n..\ _jn7.1\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\n..\ |jn7.1|\ replace\:\:\ `7.1\ \:\ Creating\ and\ Using\ Arrays`\n\n..\ _jn7.1.1\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.1\n..\ |jn7.1.1|\ replace\:\:\ `7.1.1\ \:\ Arrays`\n\n..\ _jn7.1.2\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.2\n..\ |jn7.1.2|\ replace\:\:\ `7.1.2\ \:\ Using\ Arrays`\n\n..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n\n..\ _jn7.2\ \:\ http\://math.hws.edu/javanotes/c7/s2.html\n..\ |jn7.2|\ replace\:\:\ `7.2\ \:\ Programming\ \ With\ Arrays`\n\n..\ _jn7.2.1\ \:\ http\://math.hws.edu/javanotes/c7/s2.html\#arrays.2.1\n..\ |jn7.2.1|\ replace\:\:\ `7.2.1\ \:\ Arrays\ and\ for\ Loops`\n\n..\ _jn7.2.3\ \:\ http\://math.hws.edu/javanotes/c7/s2.html\#arrays.2.3\n..\ |jn7.2.3|\ replace\:\:\ `7.2.3\ \:\ Array\ Types\ in\ Subroutines`\n\n..\ _jn7.2.4\ \:\ http\://math.hws.edu/javanotes/c7/s2.html\#arrays.2.4\n..\ |jn7.2.4|\ replace\:\:\ `7.2.4\ \:\ Random\ Access`\n\n..\ _jn7.2.6\ \:\ http\://math.hws.edu/javanotes/c7/s2.html\#arrays.2.6\n..\ |jn7.2.6|\ replace\:\:\ `7.2.6\ \:\ Variable\ Arity\ Methods`\n\n..\ _jn7.4\ \:\ http\://math.hws.edu/javanotes/c7/s4.html\n..\ |jn7.4|\ replace\:\:\ `7.4\ \:\ Searching\ and\ Sorting`\n\n..\ _jn7.4.1\ \:\ http\://math.hws.edu/javanotes/c7/s4.html\#arrays.4.1\n..\ |jn7.4.1|\ replace\:\:\ `7.4.1\ \:\ Searching`\n\n..\ _jn7.5\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\n..\ |jn7.5|\ replace\:\:\ `7.5\ \:\ Multi-dimensional\ Arrays`\n\n..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n\n..\ _jn7.5.2\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.2\n..\ |jn7.5.2|\ replace\:\:\ `7.5.2\ \:\ Using\ Two-dimensional\ Arrays`\n\n..\ _jn8\ \:\ http\://math.hws.edu/javanotes/c8/index.html\n..\ |jn8|\ replace\:\:\ `8\ \:\ Correctness,\ Robustness,\ Efficiency`\n\n..\ _jn8.4\ \:\ http\://math.hws.edu/javanotes/c8/s4.html\n..\ |jn8.4|\ replace\:\:\ `8.4\ \:\ Assertions\ and\ Annotations`\n\n..\ _jn8.4.1\ \:\ http\://math.hws.edu/javanotes/c8/s4.html\#robustness.4.1\n..\ |jn8.4.1|\ replace\:\:\ `8.4.1\ \:\ Assertions`\n=

#. name
#: m05_qcm/task.yaml
!Mission\ 5\:\ QCM=

#. name, q1, name
#: m05_qcm/task.yaml
!D\u00e9claration\ de\ tableaux=

#. name, q1, header
#: m05_qcm/task.yaml
!\nParmi\ les\ d\u00e9clarations\ suivantes,\ quelle\ est\ celle\ qui\ permet\ de\ d\u00e9clarer\ correctement\ un\ tableau\ dont\ la\ r\u00e9f\u00e9rence\ est\ d\u00e9nomm\u00e9e\ ``tab``\ et\ qui\ peut\ contenir\ 5\ nombres\ entiers\ ?\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[]\ tab\=new\ int[5];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nC'est\ la\ d\u00e9claration\ la\ plus\ courante\ pour\ un\ tableau\ d'entiers.\ Notez\ que\ cette\ ligne\ combine\ une\ d\u00e9claration\ (``int[]\ tab``\ et\ la\ cr\u00e9ation\ du\ tableau\ correspondant\ permettant\ de\ stocker\ 5\ \u00e9l\u00e9ments\ de\ type\ ``int``.\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[]\ tab;\n\ \ \ tab\=new\ int[5];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nLa\ premi\u00e8re\ ligne\ d\u00e9clare\ que\ ``tab``\ est\ une\ r\u00e9f\u00e9rence\ vers\ un\ tableau\ d'entiers.\ La\ deuxi\u00e8me\ ligne\ associe\ cette\ r\u00e9f\u00e9rence\ \u00e0\ un\ tableau\ permettant\ de\ stocker\ 5\ entiers.\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ tab\=int\ [5];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ incorrecte.\ ``tab``\ n'a\ pas\ \u00e9t\u00e9\ d\u00e9clar\u00e9\ pr\u00e9alablement\ et\ il\ faut\ utiliser\ le\ mot\ cl\u00e9\ ``new``\ pour\ initialiser\ un\ tableau.\ Relisez\ |jn7.1.3|_\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ tab\=new\ int[5];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ incorrecte.\ ``tab``\ n'a\ pas\ \u00e9t\u00e9\ d\u00e9clar\u00e9\ pr\u00e9alablement.\ Il\ faut\ faire\ pr\u00e9c\u00e9der\ cette\ ligne\ d'une\ d\u00e9claration\ de\ ``tab``.\ Relisez\ |jn7.1.3|_\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\n\ \ \ \ int[]\ tab\=new\ int[];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ incorrecte.\ Lorsque\ l'on\ initialise\ un\ tableau,\ il\ faut\ sp\u00e9cifier\ le\ nombre\ d'\u00e9l\u00e9ments\ du\ tableau\ entre\ []\ dans\ le\ membre\ de\ droite.\ En\ Java,\ les\ tableaux\ ont\ une\ taille\ fixe\ qui\ est\ d\u00e9finie\ \u00e0\ leur\ cr\u00e9ation.\ Relisez\ |jn7.1.3|_\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int[5]\ tab\=new\ int[];\n=

#. name, q1, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ int\ tab[5]\=new\ int[];\n=

#. name, q1, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ incorrecte.\ Lorsque\ l'on\ initialise\ un\ tableau,\ il\ faut\ sp\u00e9cifier\ le\ nombre\ d'\u00e9l\u00e9ments\ du\ tableau\ entre\ []\ dans\ le\ membre\ de\ droite.\ Relisez\ |jn7.1.3|_\n\n\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q10, name
#: m05_qcm/task.yaml
!Somme\ de\ vecteurs=

#. name, q10, header
#: m05_qcm/task.yaml
!\nConsid\u00e9rons\ les\ tableaux\ ``a``,\ ``b``\ et\ ``s``\ d\u00e9clar\u00e9s\ comme\ indiqu\u00e9s\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ int[]\ a\=new\ int[20];\n\ \ int[]\ b\=new\ int[20];\n\ \ int[]\ s\=new\ int[20];\n\n\nSupposons\ que\ ces\ tableaux\ servent\ \u00e0\ stocker\ des\ vecteurs\ (au\ sens\ math\u00e9matique\ du\ terme).\ Laquelle\ des\ s\u00e9quences\ d'instructions\ ci-dessous\ place-t-elle\ dans\ le\ vecteur\ ``s``\ la\ somme\ des\ vecteurs\ ``a``\ et\ ``b``?\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=0;\ i<a.length;i++)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=0;\ i<b.length;i++)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=s.length-1;\ i>\=0;i\=i-1)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ s[]\=a[]+b[];\n=

#. name, q10, feedback
#: m05_qcm/task.yaml
!\nCette\ instruction\ est\ invalide\ en\ Java.\ Il\ est\ n\u00e9cessaire\ d'utiliser\ une\ boucle\ pour\ calculer\ cette\ somme.\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=0;\ i<\=a.length;i++)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, feedback
#: m05_qcm/task.yaml
!\nCette\ boucle\ va\ provoquer\ une\ erreur\ \u00e0\ l'ex\u00e9cution\ lorsque\ ``i``\ vaut\ ``a.length``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=0;\ i<\=b.length;i++)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, feedback
#: m05_qcm/task.yaml
!\nCette\ boucle\ va\ provoquer\ une\ erreur\ \u00e0\ l'ex\u00e9cution\ lorsque\ ``i``\ vaut\ ``b.length``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=s.length-1;\ i>0;i\=i-1)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, feedback
#: m05_qcm/task.yaml
!\nCette\ boucle\ ne\ calculera\ pas\ la\ valeur\ de\ ``s[0]``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q10, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ for(int\ i\=s.length;\ i>\=0;i\=i-1)\ {\n\ \ \ \ \ s[i]\=a[i]+b[i];\n\ \ \ \ }\n=

#. name, q10, feedback
#: m05_qcm/task.yaml
!\nCette\ boucle\ va\ provoquer\ une\ erreur\ \u00e0\ l'ex\u00e9cution\ lorsque\ ``i``\ vaut\ ``s.length``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q11, name
#: m05_qcm/task.yaml
!Tableaux\ de\ caract\u00e8res=

#. name, q11, header
#: m05_qcm/task.yaml
!\nLa\ semaine\ pass\u00e9e,\ vous\ avez\ \u00e9crit\ une\ m\u00e9thode\ ``count``\ permettant\ de\ d\u00e9terminer\ le\ nombre\ d'occurences\ d'un\ caract\u00e8re\ dans\ un\ ``String``.\ Lequel\ des\ corps\ ci-dessous\ est\ une\ impl\u00e9mentation\ correcte\ de\ la\ m\u00e9thode\ ``isIn``\ dont\ la\ sp\u00e9cification\ est\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ cha\u00eene\ s\ non\ vide\n\ \ *\ @post\ retourne\ true\ si\ le\ caract\u00e8re\ c\ est\ pr\u00e9sent\ dans\ la\ cha\u00eene\ s\n\ \ *\ \ \ \ \ \ \ et\ false\ sinon\n\ \ */\n\ public\ static\ boolean\ isIn(char\ c,\ char[]\ s)\n=

#. name, q11, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<s.length;i++)\ {\n\ \ \ \ \ if(s[i]\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n=

#. name, q11, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=s.length-1;i>\=0;i\=i-1)\ {\n\ \ \ \ \ if(s[i]\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n=

#. name, q11, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<s.length();i++)\ {\n\ \ \ \ \ if(s[i]\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n\n=

#. name, q11, feedback
#: m05_qcm/task.yaml
!\nLe\ nombre\ d'\u00e9l\u00e9ments\ dans\ le\ tableau\ de\ caract\u00e8re\ ``s``\ est\ ``s.length``\ et\ non\ le\ r\u00e9sultat\ de\ l'application\ d'une\ m\u00e9thode\ ``length()``\ qui\ ne\ prend\ pas\ de\ param\u00e8tre.\n=

#. name, q11, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<\=s.length;i++)\ {\n\ \ \ \ \ if(s[i]\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ false;\n=

#. name, q11, feedback
#: m05_qcm/task.yaml
!\nNok\n=

#. name, q11, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ for(int\ i\=0;i<s.length();i++)\ {\n\ \ \ \ \ if(s[i]\=\=c)\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n=

#. name, q11, feedback
#: m05_qcm/task.yaml
!\nQue\ fait\ cette\ m\u00e9thode\ apr\u00e8s\ avoir\ compar\u00e9\ ``c``\ avec\ l'\u00e9l\u00e9ment\ ``s[0]``\ ?\n=

#. name, q12, name
#: m05_qcm/task.yaml
!toCharArray=

#. name, q12, header
#: m05_qcm/task.yaml
!\n\nLa\ classe\ ``String``\ contient\ une\ m\u00e9thode\ baptis\u00e9e\ `toCharArray()\ <http\://docs.oracle.com/javase/1.5.0/docs/api/java/lang/String.html\#toCharArray()>`_\ qui\ permet\ de\ convertir\ un\ ``String``\ en\ un\ tableau\ de\ caract\u00e8res.\ Une\ m\u00e9thode\ statique\ \u00e9quivalent\ pourrait\ avoir\ les\ sp\u00e9cification\ et\ signature\ suivantes\ \:\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ cha\u00eene\ s\ non\ vide\n\ \ *\ @post\ retourne\ un\ tableau\ de\ caract\u00e8res\ ayant\ le\ m\u00eame\ contenu\ que\n\ \ *\ \ \ \ \ \ \ que\ String\ pass\u00e9\ en\ param\u00e8tre\n\ \ */\n\ public\ static\ char[]\ toCharArray(String\ s)\n\nLaquelle\ des\ s\u00e9quences\ ci-dessous\ est\ une\ impl\u00e9mentation\ correcte\ de\ cette\ m\u00e9thode\ ?\n=

#. name, q12, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ char[]\ r\=new\ char[s.length()];\n\ \ \ for(int\ i\=0;i<s.length();i++)\ {\n\ \ \ \ \ \ r[i]\=s.charAt(i);\n\ \ \ }\n\ \ \ return\ r;\n=

#. name, q12, feedback
#: m05_qcm/task.yaml
!\nNotez\ que\ la\ longueur\ d'une\ cha\u00eene\ de\ caract\u00e8res\ s'obtient\ en\ appliquant\ la\ m\u00e9thode\ ``length()``\ \u00e0\ une\ r\u00e9f\u00e9rence\ vers\ cette\ cha\u00eene.\ La\ longueur\ du\ tableau\ de\ caract\u00e8res\ ``r``\ est\ ``r.length``.\n=

#. name, q12, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ char[]\ r\=new\ char[s.length()];\n\ \ \ for(int\ i\=s.length()-1;i>\=0;i\=i-1)\ {\n\ \ \ \ \ \ r[i]\=s.charAt(i);\n\ \ \ }\n\ \ \ return\ r;\n=

#. name, q12, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ char[]\ r;\n\ \ for(int\ i\=0;i<s.length();i++)\ {\n\ \ \ \ \ \ r[i]\=s.charAt(i);\n\ \ }\n\ \ return\ r[];\n=

#. name, q12, feedback
#: m05_qcm/task.yaml
!\nCette\ r\u00e9ponse\ contient\ deux\ erreurs.\ Tout\ d'abord,\ avant\ de\ pouvoir\ utiliser\ un\ tableau,\ il\ faut\ fixer\ sa\ longueur\ lors\ de\ son\ initialisation.\ Ensuite,\ pour\ retourner\ un\ tableau,\ il\ faut\ retourner\ une\ r\u00e9f\u00e9rence\ vers\ ce\ tableau.\ Si\ ``r``\ est\ une\ r\u00e9f\u00e9rence\ de\ type\ ``char[]``,\ il\ suffit\ de\n=

#. name, q12, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ char[]\ r\=s;\n\ \ return\ r;\n=

#. name, q12, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ ce\ genre\ de\ raccourci\ n'existe\ pas.\n=

#. name, q12, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ char[]\ r\=new\ char[s.length];\n\ \ for(int\ i\=0;i<s.length;i++)\ {\n\ \ \ \ \ \ r[i]\=s.charAt(i);\n\ \ }\n\ \ return\ r;\n=

#. name, q12, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ la\ longueur\ d'une\ cha\u00eene\ de\ caract\u00e8res\ s'obtient\ via\ ``s.length()``\ et\ non\ ``s.length``.\n=

#. name, q2, name
#. name, q3, name
#: m05_qcm/task.yaml
!Initialisation\ de\ tableaux=

#. name, q2, header
#: m05_qcm/task.yaml
!\nLaquelle\ des\ lignes\ ci-dessous\ d\u00e9clare\ un\ tableau\ contenant\ trois\ nombres\ r\u00e9els\ et\ l'initialise\ avec\ les\ valeurs\ ``-1.0``,\ ``0.0``\ et\ ``1.0``.\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double[]\ t\=new\ double[]\ {\ -1.0,\ 0.0,\ 1.0};\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ correcte.\ Le\ livre\ la\ pr\u00e9f\u00e8re\ \u00e0\ la\ ligne\ ``double[]\ t\=\ {\ -1.0,\ 0.0,\ 1.0};``\ m\u00eame\ si\ les\ deux\ sont\ \u00e9quivalentes\ pour\ Java.\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double[]\ t\=\ {\ -1.0,\ 0.0,\ 1.0};\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ correcte.\ Le\ livre\ pr\u00e9f\u00e8re\ la\ ligne\ ``double[]\ t\=new\ double[]\ {\ -1.0,\ 0.0,\ 1.0};``\ qui\ est\ plus\ explicite\ m\u00eame\ si\ les\ deux\ sont\ \u00e9quivalentes\ pour\ Java.\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double[3]\ t\=\ {-1.0,\ 0.0,\ 1.0};\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ il\ n'existe\ pas\ de\ type\ ``double[3]``\ pouvant\ \u00eatre\ mis\ dans\ une\ d\u00e9claration.\ Relisez\ |jn7.1.3|_\n\n\ \ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ \ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double\ t\=\ {-1.0,\ 0.0,\ 1.0};\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ ``double\ t``\ d\u00e9clare\ un\ r\u00e9el\ et\ non\ un\ tableau\ de\ r\u00e9els.\ Relisez\ |jn7.1.3|_\n\n\n\ \ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ \ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double[]\ t\=\ new\ double[-1.0,\ 0.0,1.0];\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ n'est\ pas\ syntaxiquement\ correcte,\ relisez\ |jn7.1.3|_\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double[]\ t\=\ new\ double{-1.0,0.0,1.0};\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ n'est\ pas\ syntaxiquement\ correcte,\ relisez\ |jn7.1.3|_\n\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q2, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double[]\ t\=\ [-1.0,\ 0.0,\ 1.0];\n=

#. name, q2, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ n'est\ pas\ syntaxiquement\ correcte.\ Ne\ confondez\ pas\ ``{``\ et\ ``[``.\ Relisez\ |jn7.1.3|_\n\n\n\n\ ..\ _jn7.1.3\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.3\n\ ..\ |jn7.1.3|\ replace\:\:\ `7.1.3\ \:\ Array\ Initialization`\n=

#. name, q3, header
#: m05_qcm/task.yaml
!\nUne\ fois\ qu'un\ tableau\ a\ \u00e9t\u00e9\ d\u00e9clar\u00e9\ et\ initialis\u00e9,\ il\ faut\ parfois\ pouvoir\ conna\u00eetre\ le\ nombre\ d'\u00e9l\u00e9ments\ se\ trouvant\ dans\ le\ tableau.\ Lequel\ des\ codes\ ci-dessous\ affiche-t-il\ le\ nombre\ d'entiers\ dans\ le\ tableau\ ``tab``\ d\u00e9clar\u00e9\ via\ ``int[]\ tab\=new\ int[]{1,2,7,9,3,99,-12,78,119}``\ ?\n=

#. name, q3, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ System.out.println(tab.length);\n=

#. name, q3, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ System.out.println(tab.length());\n=

#. name, q3, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ la\ syntaxe\ ``tab.length()``\ correspond\ \u00e0\ l'ex\u00e9cution\ de\ la\ m\u00e9thode\ ``length()``\ sur\ l'objet\ dont\ la\ r\u00e9f\u00e9rence\ est\ ``tab``.\ Les\ tableaux\ Java\ ne\ sont\ pas\ des\ objets\ ayant\ des\ m\u00e9thodes\ que\ l'on\ peut\ appeler.\ Relisez\ |jn7.1.2|_\n\n\n\ ..\ _jn7.1.2\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.2\n\ ..\ |jn7.1.2|\ replace\:\:\ `7.1.2\ \:\ Using\ Arrays`\n=

#. name, q3, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ System.out.println(tab.size);\n=

#. name, q3, feedback
#: m05_qcm/task.yaml
!\n``tab.size``\ n'existe\ pas.\ Relisez\ |jn7.1.2|_\n\n\ ..\ _jn7.1.2\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.2\n\ ..\ |jn7.1.2|\ replace\:\:\ `7.1.2\ \:\ Using\ Arrays`\n=

#. name, q3, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ System.out.println(tab[0]);\n=

#. name, q3, feedback
#: m05_qcm/task.yaml
!\n``tab[0]``\ est\ le\ premier\ \u00e9l\u00e9ment\ du\ tableau\ ``tab``\ et\ non\ le\ nombre\ d'\u00e9l\u00e9ments\ pr\u00e9sents\ dans\ le\ tableau.\ Relisez\ |jn7.1.2|_\n\n\ ..\ _jn7.1.2\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.2\n\ ..\ |jn7.1.2|\ replace\:\:\ `7.1.2\ \:\ Using\ Arrays`\n=

#. name, q3, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ System.out.println(tab.[length]);\n=

#. name, q3, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ syntaxiquement\ incorrecte.\ Relisez\ |jn7.1.2|_\n\n\ ..\ _jn7.1.2\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\#arrays.1.2\n\ ..\ |jn7.1.2|\ replace\:\:\ `7.1.2\ \:\ Using\ Arrays`\n=

#. name, q4, name
#: m05_qcm/task.yaml
!Tableaux\ \u00e0\ plusieurs\ dimensions=

#. name, q4, header
#: m05_qcm/task.yaml
!\nOutre\ les\ tableaux\ \u00e0\ une\ dimension\ d\u00e9crit\ dans\ |jn7.1|_,\ Java\ supporte\ \u00e9galement\ des\ tableaux\ \u00e0\ plusieurs\ dimensions.\ Laquelle\ des\ d\u00e9clarations\ ci-dessous\ est-elle\ un\ tableau\ \u00e0\ plusieurs\ dimensions\ qui\ permet\ de\ stocker\ exactement\ 24\ nombres\ entiers\ ?\n\n\n..\ _jn7.1\ \:\ http\://math.hws.edu/javanotes/c7/s1.html\n..\ |jn7.1|\ replace\:\:\ `7.1\ \:\ Creating\ and\ Using\ Arrays`\n=

#. name, q4, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[][]\ t\=new\ int[4][6];\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nCe\ tableau\ \u00e0\ deux\ dimensions\ comprend\ 4\ lignes\ et\ 6\ colonnes.\n=

#. name, q4, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[][]\ t\=new\ int[3][8];\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nCe\ tableau\ \u00e0\ deux\ dimensions\ comprend\ 3\ lignes\ et\ 8\ colonnes.\n=

#. name, q4, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[][]\ t\=new\ int[2][4];\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nCe\ tableau\ \u00e0\ deux\ dimensions\ comprend\ 2\ lignes\ et\ 4\ colonnes.\ Relisez\ |jn7.5.1|_\n\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n=

#. name, q4, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[][]\ t\=new\ int[24];\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ erron\u00e9e.\ La\ r\u00e9f\u00e9rence\ d\u00e9clar\u00e9e\ \u00e0\ gauche\ est\ vers\ un\ tableau\ de\ tableaux\ alors\ que\ seul\ un\ tableau\ d'entiers\ est\ cr\u00e9\u00e9\ dans\ le\ membre\ de\ droite.\ Relisez\ |jn7.5.1|_\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n=

#. name, q4, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int[]\ t\=new\ int[3][8];\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nCette\ ligne\ est\ erron\u00e9e.\ La\ r\u00e9f\u00e9rence\ d\u00e9clar\u00e9e\ \u00e0\ gauche\ est\ vers\ un\ tableau\ alors\ qu'un\ tableau\ de\ tableaux\ d'entiers\ est\ cr\u00e9\u00e9\ dans\ le\ membre\ de\ droite.\ Relisez\ |jn7.5.1|_\n\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n=

#. name, q4, feedback
#: m05_qcm/task.yaml
!\nLe\ tableau\ cr\u00e9\u00e9\ a\ deux\ lignes\ et\ 4\ colonnes.\ Il\ ne\ permet\ donc\ pas\ de\ stocker\ 24\ nombres\ entiers.\ Relisez\ |jn7.5.1|_\n\n\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n=

#. name, q5, name
#: m05_qcm/task.yaml
!Tableaux\ ordonn\u00e9s=

#. name, q5, header
#: m05_qcm/task.yaml
!\nLaquelle\ des\ suites\ d'instructions\ ci-dessous\ est\ une\ impl\u00e9mentation\ correcte\ de\ la\ sp\u00e9cification\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ /**\n\ \ *\ @pre\ \ t\ est\ un\ tableau\ contenant\ au\ moins\ un\ \u00e9l\u00e9ment\n\ \ *\ @post\ retourne\ true\ si\ les\ donn\u00e9es\ du\ tableau\ t\ sont\ en\ ordre\n\ \ *\ \ \ \ \ \ \ d\u00e9croissant,\ false\ sinon\n\ \ */\n\ \ public\ static\ boolean\ decroissant(double[]\ t)\n\ \ {\n\ \ \ \ //\ corps\ \u00e0\ inclure\n\ \ }\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=1;i<t.length;i++)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=t.length-1;i>\=1;i\=i-1)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=0;i<t.length;i++)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q5, feedback
#: m05_qcm/task.yaml
!\nQue\ se\ passe-t-il\ lors\ du\ premier\ passage\ dans\ la\ boucle\ ``for``\ avec\ un\ tableau\ ``t``\ contenant\ ``{\ 1.0,\ 2.0\ }``\ ?\ ``i``\ vaut\ ``0``,\ quel\ est\ la\ valeur\ de\ ``t[0-1]``\ ?\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=t.length;i>\=1;i\=i-1)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q5, feedback
#: m05_qcm/task.yaml
!\nQue\ se\ passe-t-il\ lors\ du\ premier\ passage\ dans\ la\ boucle\ ``for``\ avec\ un\ tableau\ ``t``\ contenant\ ``{\ 1.0,\ 2.0\ }``\ ?\ ``i``\ vaut\ ``t.length``,\ quel\ est\ la\ valeur\ de\ ``t[i]``\ ?\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=1;i<t.length;i++)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ \ \ else\ \ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q5, feedback
#: m05_qcm/task.yaml
!\nCette\ m\u00e9thode\ teste-t-elle\ vraiment\ l'enti\u00e8ret\u00e9\ du\ tableau\ ?\ Combien\ de\ fois\ passe-t-elle\ dans\ la\ boucle\ ``for``\ ?\n=

#. name, q5, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ if(t.length\=\=1)\ {\n\ \ \ \ \ \ \ return\ true;\n\ \ \ }\n\ \ \ for(int\ i\=t.length-1;i>\=1;i\=i-1)\ {\n\ \ \ \ \ if\ (t[i-1]\ <\=\ t[i])\ {\n\ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ }\n\ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ }\n\ \ \ }\n\ \ \ return\ true;\n=

#. name, q6, name
#: m05_qcm/task.yaml
!Initialisation\ de\ tableaux\ \u00e0\ deux\ dimensions=

#. name, q6, header
#: m05_qcm/task.yaml
!\nConsid\u00e9rons\ un\ tableau\ \u00e0\ deux\ dimensions\ initialis\u00e9\ comme\ suit\ \:\n\n..\ code-block\:\:\ java\n\n\ int[][]\ tab\=\ {\ \ {\ 1,2,3}\ ,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\ 4,5}\n\ \ \ \ \ \ \ \ \ \ }\ ;\n\nLaquelle\ des\ expressions\ bool\u00e9ennes\ ci-dessous\ est-elle\ vraie\ ?\n=

#. name, q6, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (tab[0].length\=\=3)\ &&\ (tab[1][1]\=\=5)\n=

#. name, q6, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (tab.length\=\=2)\ &&\ (tab[0][2]\=\=3)\n=

#. name, q6, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ (tab.length\=\=1)\ &&\ (tab[1][1]\=\=4)\n=

#. name, q6, feedback
#: m05_qcm/task.yaml
!\n``tab.length``\ est\ le\ nombre\ de\ lignes\ du\ tableau\ ``tab``,\ c'est-\u00e0-dire\ ``2``.\ \ Relisez\ |jn7.5.1|_\ et\ |jn7.5.2|_\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n\n\ ..\ _jn7.5.2\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.2\n\ ..\ |jn7.5.2|\ replace\:\:\ `7.5.2\ \:\ Using\ Two-dimensional\ Arrays`\n=

#. name, q6, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ (tab[1].length\=\=3)\ &&\ (tab[0][1]\=\=2)\n=

#. name, q6, feedback
#: m05_qcm/task.yaml
!\n``tab[1].length``\ est\ le\ nombre\ de\ colonnes\ de\ la\ ligne\ ``1``\ du\ tableau,\ c'est-\u00e0-dire\ ``2``.\ \ Relisez\ |jn7.5.1|_\ et\ |jn7.5.2|_\n\n\n\ ..\ _jn7.5.1\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.1\n\ ..\ |jn7.5.1|\ replace\:\:\ `7.5.1\ \:\ Creating\ Two-dimensional\ Arrays`\n\n\ ..\ _jn7.5.2\ \:\ http\://math.hws.edu/javanotes/c7/s5.html\#arrays.5.2\n\ ..\ |jn7.5.2|\ replace\:\:\ `7.5.2\ \:\ Using\ Two-dimensional\ Arrays`\n=

#. name, q6, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ (tab[0][2]\=\=2)\ &&\ (tab[1][0]\=\=4)\n=

#. name, q6, feedback
#: m05_qcm/task.yaml
!\nL'\u00e9l\u00e9ment\ ``tab[0][2]``\ a\ comme\ valeur\ ``3``\ et\ non\ ``2``.\n=

#. name, q7, name
#: m05_qcm/task.yaml
!Manipulation\ de\ tableau\ \u00e0\ deux\ dimensions\ =

#. name, q7, header
#: m05_qcm/task.yaml
!\nConsid\u00e9rons\ la\ matrice\ ``m``\ de\ ``li``\ lignes\ et\ ``c``\ colonnes\ qui\ a\ \u00e9t\u00e9\ initialis\u00e9e\ par\ les\ instructions\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\n\ \ \ double\ m[][]\=new\ double[li][c];\n\ \ \ int\ count\=1;\n\ \ \ for(int\ i\=0;i<li;i++)\ {\n\ \ \ \ \ for(int\ j\=0;\ j<c;\ j++)\ {\n\ \ \ \ \ \ \ \ \ m[i][j]\=count;\n\ \ \ \ \ count++;\n\ \ \ \ \ }\n\ \ \ }\n\nLaquelle\ des\ expressions\ bool\u00e9ennes\ ci-dessous\ est-elle\ vraie\ ?\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (\ m[li-1][0]\=\=((li-1)*c)+1)\ &&\ (m[0][c-1]\=\=c)\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (\ m[0][0]\=\=1)\ &&\ (m[li-1][c-1]\=\=1+li*ci)\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (\ m[0][c-1]\=\=c-1)\n=

#. name, q7, feedback
#: m05_qcm/task.yaml
!\nCet\ \u00e9l\u00e9ment\ de\ la\ matrice\ vaut\ ``c``\ et\ car\ ``count``\ est\ incr\u00e9ment\u00e9e\ \u00e0\ chaque\ passage\ dans\ la\ boucle\ ``for\ j<c``.\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (\ m[li][c]\=\=li*ci)\n=

#. name, q7, feedback
#: m05_qcm/task.yaml
!\nIl\ n'existe\ pas\ d'\u00e9l\u00e9ment\ ``m[li][c]``\ dans\ la\ matrice\ ``m``.\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ (m[0][0]\=\=0)\ &&\ (m[0][c-1]\=\=c)\n=

#. name, q7, feedback
#: m05_qcm/task.yaml
!\n``count``\ \u00e9tant\ initialis\u00e9\ \u00e0\ ``1``,\ l'\u00e9l\u00e9ment\ ``m[0][0]``\ est\ initialis\u00e9\ \u00e0\ la\ valeur\ ``1``.\n=

#. name, q7, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ (\ m[0][1]\=\=1)\ &&\ (m[0][c-1]\=\=c)\n=

#. name, q7, feedback
#: m05_qcm/task.yaml
!\n``m[0][1]``\ vaut\ ``2``\n=

#. name, q8, name
#: m05_qcm/task.yaml
!Somme\ des\ \u00e9l\u00e9ments\ d'un\ tableau=

#. name, q8, header
#: m05_qcm/task.yaml
!\nLaquelle\ des\ impl\u00e9mentations\ suivantes\ est-elle\ une\ impl\u00e9mentation\ correcte\ de\ la\ m\u00e9thode\ ``sumTab``\ dont\ la\ sp\u00e9cification\ est\ reprise\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\n\ \ /*\n\ \ \ *\ @pre\ tableau\ contenant\ au\ moins\ un\ \u00e9l\u00e9ment\n\ \ \ *\ @post\ retourne\ la\ somme\ des\ valeurs\ stock\u00e9es\ dans\ le\ tableau\n\ \ \ */\n\ \ public\ static\ double\ sumTab(double[]\ t)\n=

#. name, q8, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ double\ sum\=0.0;\n\ \ for(int\ i\=0;i<t.length;i++)\ {\n\ \ \ \ sum\=sum+t[i];\n\ \ }\n\ \ return\ sum;\n=

#. name, q8, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ double\ sum\=0.0;\n\ \ for(int\ i\=t.length-1;i>\=0;i\=i-1)\ {\n\ \ \ \ sum\=sum+t[i];\n\ \ }\n\ \ return\ sum;\n=

#. name, q8, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ double\ sum\=0.0;\n\ \ for(int\ i\=0;i<t.length;i++)\ {\n\ \ \ for(int\ j\=0;j<t[i].length;j++)\ {\n\ \ \ \ sum\=sum+t[i];\n\ \ \ }\n\ \ }\n\ \ return\ sum;\n=

#. name, q8, feedback
#: m05_qcm/task.yaml
!\nCe\ code\ est\ utilisable\ pour\ calculer\ la\ somme\ des\ \u00e9l\u00e9ments\ d'un\ tableau\ \u00e0\ deux\ dimensions,\ mais\ le\ tableau\ ``t``\ qui\ est\ pass\u00e9\ comme\ param\u00e8tre\ effectif\ \u00e0\ la\ m\u00e9thode\ est\ un\ tableau\ \u00e0\ une\ seule\ dimension.\ Ce\ code\ ne\ compilera\ pas\ dans\ la\ m\u00e9thode\ ``sumTab``.\n=

#. name, q8, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ double\ sum\=0.0;\n\ \ for(int\ i\=t.length-1;i>\=0;i\=i-1)\ {\n\ \ \ for(int\ j\=0;j<t[i].length;j++)\ {\n\ \ \ \ sum\=sum+t[i];\n\ \ \ }\n\ \ }\n\ \ return\ sum;\n=

#. name, q8, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ double\ sum\=0.0;\n\ \ \ for(int\ i\=0;i<\=t.length;i++)\ {\n\ \ \ \ \ sum\=sum+t[i];\n\ \ \ }\n\ \ \ return\ sum;\n=

#. name, q8, feedback
#: m05_qcm/task.yaml
!\nCe\ code\ provoquera\ une\ erreur\ \u00e0\ l'ex\u00e9cution.\ Il\ n'y\ a\ pas\ d'\u00e9l\u00e9ment\ dans\ le\ tableau\ ``t``\ \u00e0\ l'indice\ ``t.length``.\ L'indice\ le\ plus\ \u00e9lev\u00e9\ du\ tableau\ est\ ``t.length-1``.\n=

#. name, q9, name
#: m05_qcm/task.yaml
!Assertions=

#. name, q9, header
#: m05_qcm/task.yaml
!\nEn\ Java,\ les\ assertions\ peuvent\ \u00eatre\ utilis\u00e9es\ pour\ v\u00e9rifier\ explicitement\ les\ pr\u00e9conditions\ et\ les\ postconditions\ d'une\ m\u00e9thode.\ En\ programmation\ d\u00e9fensive,\ on\ utilise\ des\ ``assert``\ pour\ v\u00e9rifier\ explicitement\ les\ pr\u00e9conditions\ de\ chaque\ m\u00e9thode.\ Consid\u00e9rons\ la\ m\u00e9thode\ dont\ la\ sp\u00e9cification\ est\ reprise\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ /**\n\ \ *\ @pre\ a>0,\ b>2*a\ et\ b\ est\ pair\n\ \ *\ @post\ ....\n\ \ */\n\ private\ void\ methode(int\ a,\ int\ b)\n\nLaquelle\ des\ s\u00e9quences\ d'instructions\ ci-dessous\ v\u00e9rifie\ explicitement\ les\ pr\u00e9conditions\ de\ cette\ m\u00e9thode\ ?\n=

#. name, q9, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ assert\ a>0\ \:\ "a\ doit\ \u00eatre\ strictement\ positif";\n\ \ \ assert\ (\ (b>2*a)\ &&\ (b%2)\=\=0\ )\ \:\ "b\ invalide";\n=

#. name, q9, feedback
#: m05_qcm/task.yaml
!\nNotez\ qu'en\ Java\ l'expression\ ``(b%2)``\ est\ une\ expression\ enti\u00e8re.\ Elle\ peut\ donc\ appara\u00eetre\ \u00e0\ gauche\ d'un\ signe\ ``\=\=``.\ Il\ est\ int\u00e9ressant\ d'utiliser\ des\ commentaires\ pour\ indiquer\ quelle\ pr\u00e9condition\ n'est\ pas\ v\u00e9rifi\u00e9e.\n=

#. name, q9, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ assert\ a>0\ \:\ "a\ doit\ \u00eatre\ strictement\ positif";\n\ \ \ assert\ (b>2*a)\ \:\ "b\ trop\ petit";\n\ \ \ int\ reste\=b%2;\n\ \ \ assert\ reste\=\=0\ \:\ "b\ n'est\ pas\ pair";\n=

#. name, q9, feedback
#: m05_qcm/task.yaml
!\nIl\ est\ int\u00e9ressant\ d'utiliser\ des\ commentaires\ pour\ indiquer\ quelle\ pr\u00e9condition\ n'est\ pas\ v\u00e9rifi\u00e9e.\n=

#. name, q9, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ assert\ a<\=0;\n\ \ \ assert\ (\ (b>2*a)\ &&\ (b%2)\=\=0\ )\ \:\ "b\ invalide";\n=

#. name, q9, feedback
#: m05_qcm/task.yaml
!\nLa\ premi\u00e8re\ assertion\ est\ incorrecte.\ Elle\ est\ vraie\ lorsque\ ``a<\=0``\ or\ la\ pr\u00e9condition\ de\ la\ m\u00e9thode\ est\ ``a>0``.\n=

#. name, q9, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ int\ reste\=b%2;\n\ \ \ assert\ a<\=0\ \:\ "a\ doit\ \u00eatre\ strictement\ positif";\n\ \ \ assert\ reste\!\=0\ \:\ "b\ n'est\ pas\ pair";\n\ \ \ assert\ (b<\=2*a)\ \:\ "b\ trop\ petit";\n=

#. name, q9, feedback
#: m05_qcm/task.yaml
!\nEn\ Java,\ ``assert``\ permet\ de\ v\u00e9rifier\ qu'une\ pr\u00e9condition\ est\ remplie.\ Si\ c'est\ le\ cas,\ l'instruction\ ``assert``\ n'a\ aucun\ effet.\ Sinon,\ l'instruction\ ``assert``\ affiche\ le\ message\ qui\ suit\ ``\:``\ et\ provoque\ une\ erreur.\ Lorsque\ l'on\ utilise\ ``assert``\ pour\ v\u00e9rifier\ les\ pr\u00e9conditions,\ on\ souhaite\ que\ l'ex\u00e9cution\ du\ programme\ s'arr\u00eate\ et\ que\ le\ message\ d'erreur\ soit\ afficher\ lorsqu'une\ pr\u00e9condition\ n'est\ pas\ v\u00e9rifi\u00e9e.\ Pour\ cela,\ l'expression\ bool\u00e9enne\ contenu\ dans\ l'assertion\ doit\ \u00eatre\ la\ pr\u00e9condition\ \u00e0\ v\u00e9rifier.\n=

#. name, q9, text
#: m05_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ assert\ a<\=0\ \:\ "a\ doit\ \u00eatre\ strictement\ positif";\n\ \ \ assert\ (\ (b<\=2*a)\ &&\ (b%2)\!\=0\ )\ \:\ "b\ invalide";\n=

#. name, q9, feedback
#: m05_qcm/task.yaml
!\nNotez\ qu'en\ Java\ l'expression\ ``(b%2)``\ est\ une\ expression\ enti\u00e8re.\ Elle\ peut\ donc\ appara\u00eetre\ \u00e0\ gauche\ d'un\ signe\ ``\=\=``.\ En\ Java,\ ``assert``\ permet\ de\ v\u00e9rifier\ qu'une\ pr\u00e9condition\ est\ remplie.\ Si\ c'est\ le\ cas,\ l'instruction\ ``assert``\ n'a\ aucun\ effet.\ Sinon,\ l'instruction\ ``assert``\ affiche\ le\ message\ qui\ suit\ ``\:``\ et\ provoque\ une\ erreur.\ Lorsque\ l'on\ utilise\ ``assert``\ pour\ v\u00e9rifier\ les\ pr\u00e9conditions,\ on\ souhaite\ que\ l'ex\u00e9cution\ du\ programme\ s'arr\u00eate\ et\ que\ le\ message\ d'erreur\ soit\ afficher\ lorsqu'une\ pr\u00e9condition\ n'est\ pas\ v\u00e9rifi\u00e9e.\ Pour\ cela,\ l'expression\ bool\u00e9enne\ contenu\ dans\ l'assertion\ doit\ \u00eatre\ la\ pr\u00e9condition\ \u00e0\ v\u00e9rifier.\n=

#. context
#: m05dem1/task.yaml
!R\u00e9pondez\ aux\ questions\ simples\ suivantes\ au\ sujet\ de\ la\ syntaxe\ des\ tableaux.\ Vous\ *devez*\ respecter\ les\ noms\ de\ variables\ sugg\u00e9r\u00e9s.\n(Nous\ utilisons\ le\ type\ ``int``\ pour\ les\ entiers\ et\ le\ type\ ``double``\ pour\ les\ r\u00e9els.)=

#. name
#: m05dem1/task.yaml
!Mission\ 5\ \:\ Question\ de\ d\u00e9marrage\ 1\ \:\ Syntaxe\ et\ Tableaux=

#. name, q1, header
#: m05dem1/task.yaml
!D\u00e9clarez\ un\ tableau\ \ *v*\ \ pouvant\ contenir\ *n*\ entiers\ (la\ variable\ *n*\ est\ d\u00e9j\u00e0\ d\u00e9clar\u00e9e).=

#. name, q2, header
#: m05dem1/task.yaml
!D\u00e9clarer\ un\ matrice\ \ *m*\ \ rectangulaire,\ de\ \ *k*\ \ tableaux\ contenant\ \ *l*\ \ \u00e9l\u00e9ments\ chacun,\ pouvant\ contenir\ des\ r\u00e9els\ (*l*\ et\ *k*\ sont\ d\u00e9j\u00e0\ d\u00e9clar\u00e9es).=

#. name, q3, header
#: m05dem1/task.yaml
!Consid\u00e9rant\ la\ matrice\ de\ la\ question\ 2\ r\u00e9cup\u00e9rez\ le\ nombre\ de\ colonnes\ \ *k*.=

#. name, q4, header
#: m05dem1/task.yaml
!Consid\u00e9rant\ la\ matrice\ de\ la\ question\ 2\ r\u00e9cup\u00e9rez\ le\ nombre\ de\ lignes\ *l*.=

#. author
#: m05dem2/task.yaml
!Cl\u00e9mentine\ Munyabarenzi\ (ressource\ \:\ Syllabus\ d'exercices\ \ LSINF1101),\ Olivier\ Martin=

#. context
#: m05dem2/task.yaml
!Un\ \u00e9tudiant\ utilise\ des\ tableaux\ de\ r\u00e9els\ pour\ repr\u00e9senter\ des\ vecteurs\ math\u00e9matiques.\ Ces\ tableaux\ sont\ d\u00e9finis\ comme\ suit\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ double[]\ t1\ \=\ {1.0,\ 2.0,\ -3.0};\n\ \ \ \ double[]\ t2\ \=\ {1.0,\ 3.0,\ 9.0};\n\nL'\u00e9tudiant\ propose\ la\ m\u00e9thode\ suivante\ pour\ tester\ que\ deux\ vecteurs\ sont\nidentiques\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ t1\ \!\=\ null,\ t2\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ t1\ et\ t2\ sont\ les\ m\u00eames\ vecteurs,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ static\ boolean\ egal(double[]\ t1,\ double[]\ t2)\ {\n\ \ \ \ \ \ \ \ return\ t1\ \=\=\ t2;\n\ \ \ \ }\n\nIl\ teste\ sa\ m\u00e9thode\ sur\ les\ deux\ tableaux\ ci-dessus\ et\ conclut\ que\ sa\nm\u00e9thode\ est\ correcte.\ Qu'en\ pensez-vous\ ?=

#. name
#: m05dem2/task.yaml
!Mission\ 5\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ Compararer\ des\ tableaux=

#. name, q1, header
#: m05dem2/task.yaml
!Les\ tableaux\ ``t1``\ et\ ``t2``\ \u00e9tants\ d\u00e9finis\ comme\ plus\ haut,\ pouvez-vous\ faire\ en\ sorte\ que\ l'expression\ ``t1\ \=\=\ t2``\ renvoie\ \u00e0\ coup\ s\u00fbr\ ``true``?\ Ecrivez\ du\ code\ permettant\ d'obtenir\ ce\ r\u00e9sultat.\n\nConsid\u00e9rez\ que\ vous\ \u00e9crivez\ une\ m\u00e9thode\ sans\ signature\ et\ que\ *t1*\ et\ *t2*\ sont\ d\u00e9j\u00e0\ initialis\u00e9s\ comme\ ci-dessus\ (Par\ contre\ toutes\ les\ autres\ ressources\ dont\ vous\ estimerez\ avoir\ besoin\ devront\ \u00eatre\ d\u00e9clar\u00e9es\ par\ vous).=

#. name, q2, header
#: m05dem2/task.yaml
!Proposez\ une\ impl\u00e9mentation\ correcte\ du\ *corps*\ de\ la\ m\u00e9thode\ ``egal``\ ci-dessus\ (Vous\ ne\ devez\ pas\ \u00e9crire\ la\ signature\ de\ la\ m\u00e9thode).=

#. author
#: m05dem3/task.yaml
!Cl\u00e9mentine\ Munyabarenzi\ (ressource\ \:\ syllabus\ d'exercices\ LSINF1101),\ Olivier\ Martin=

#. context
#: m05dem3/task.yaml
!Ecrivez\ la\ m\u00e9thode\ suivante\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ *\ @post\ retourne\ la\ matrice\ unit\u00e9\ d'ordre\ n,\ c'est-\u00e0-dire\ la\ matrice\n\ \ \ \ \ *\ \ \ \ \ \ \ carr\u00e9e\ de\ n\ lignes/colonnes\ dont\ les\ \u00e9l\u00e9ments\ de\ la\ diagonale\n\ \ \ \ \ *\ \ \ \ \ \ \ principale\ valent\ 1\ et\ tous\ les\ autres\ valent\ 0\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int[][]\ unite(int\ n)=

#. name
#: m05dem3/task.yaml
!Mission\ 5\ \:\ Question\ de\ d\u00e9marrage\ 3\ \:\ Matrice\ unit\u00e9=

#. name, q1, header
#: m05dem3/task.yaml
!Ecrivez\ ici\ le\ *corps*\ de\ la\ m\u00e9thode.=

#. author
#: m05dem4/task.yaml
!Cl\u00e9mentine\ Munyabarenzi\ (ressource\ \:\ Syllabus\ d'exercices\ LSINF1101),\ Olivier\ Martin=

#. context
#: m05dem4/task.yaml
!Ecrivez\ en\ appliquant\ la\ *programmation\ d\u00e9fensive*,\ une\ version\ de\ la\ m\u00e9thode\ dont\ la\ sp\u00e9cification\ est\ la\ suivante\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ a\ \!\=\ null,\ b\ \!\=\ null,\ a\ et\ b\ de\ m\u00eame\ dimensions\n\ \ \ \ \ *\ @post\ retourne\ la\ matrice\ valant\ la\ somme\ des\ matrices\ a\ et\ b\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int[][]\ add(int[][]\ a,\ int[][]\ b)\n=

#. name
#: m05dem4/task.yaml
!Mission\ 5\ \:\ Question\ de\ d\u00e9marrage\ 4\ \:\ Sommes\ de\ Matrices=

#. name, q1, header
#: m05dem4/task.yaml
!Ecrivez\ ici\ le\ *corps*\ de\ la\ fonction\ ``add``\ (Vous\ ne\ devez\ pas\ \u00e9crire\ la\ signature\ de\ la\ m\u00e9thode)\ en\ utilisant\ la\ **programmation\ d\u00e9fensive**,\ c\u00e0d\ en\ utilisant\ **assert**\ dans\ le\ cas\ o\u00f9\ la\ *@pre*\ n'est\ pas\ respect\u00e9e.=

#. author
#: m05dem5/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka,\ Olivier\ Martin=

#. context
#: m05dem5/task.yaml
!Dans\ une\ classe,\ on\ trouve\ une\ m\u00e9thode\ dont\ la\ signature\ est\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ public\ static\ void\ main(String[]\ args)\n\n=

#. name
#: m05dem5/task.yaml
!Mission\ 5\ \:\ Question\ de\ D\u00e9marrage\ 5\ \:\ M\u00e9thode\ Main=

#. name, q1, name
#: m05dem5/task.yaml
!Afficher\ les\ arguments=

#. name, q1, header
#: m05dem5/task.yaml
!Comment\ feriez-vous\ pour\ que\ la\ m\u00e9thode\ main\ ci-dessus\ affiche\ sur\ ``System.out``\ tout\ le\ contenu\ du\ tableau\ ``String[]\ args``\ pass\u00e9\ en\ argument\ ?\nPar\ exemple,\ avoir\ affich\u00e9\ \u00e0\ l'\u00e9cran\ \:\n\n\:\:\n\n\ \ \ \ Un\n\ \ \ \ Deux\n\ \ \ \ Trois\n\ \ \ \ Soleil\n\nEcirvez-ci\ dessous\ le\ *corps*\ de\ la\ m\u00e9thode\ main.=

#. name, q2, header
#: m05dem5/task.yaml
!BlueJ\ permet\ de\ passer\ des\ arguments\ \u00e0\ la\ m\u00e9thode\ ``main``.\ La\nm\u00e9thode\ ``main``\ s'attend\ \u00e0\ recevoir\ un\ ``String[]``.\ Il\nfaut\ lui\ passer\ ce\ tableau\ comme\ si\ on\ d\u00e9finissait\ ce\ tableau\ dans\ du\ncode\ java.\ Par\ exemple,\ pour\ passer\ un\ tableau\ contenant\ les\n``String``\ ``"1"``\ et\ ``"2"``,\ il\ faut\ indiquer\n``"1","2"``\ dans\ la\ fen\u00eatre\ BlueJ\ (voir\ figure).\n\n..\ image\:\:\ m05dem5/Somme.png\n\ \ \ \:height\:\ 300\n\ \ \ \:width\:\ 450\n\nUn\ \u00e9tudiant\ souhaite\ \u00e9crire\ un\ petit\ programme\ simple\ qui\ prend\ deux\ nombres\ entiers\ comme\ arguments\ en\ ligne\ de\ commande\ et\ affiche\ la\ somme\ de\ ces\ deux\ nombres.\ Il\ \u00e9crit\ le\ code\ ci-dessous\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ public\ class\ Somme\ {\n\ \ \ \ \ \ \ \ public\ static\ void\ main(String[]\ args){\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(args[0]+args[1]);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nIl\ compile\ ce\ programme\ et\ l'ex\u00e9cute\ avec\ BlueJ.\ En\ testant\ son\ programme\ avec\ ``"1","2"``\ comme\ argument,\ il\ s'\u00e9tonne\ de\ voir\ ``12``\ affich\u00e9\ \u00e0\ l'\u00e9cran.\ Pouvez-vous\ corriger\ son\ code\ afin\ d'afficher\ la\ somme\ des\ deux\ arguments\ et\ non\ la\ concat\u00e9nation\ des\ deux\ Strings\ ?\ Ecrivez\ ci-dessous\ *le\ corps\ de\ la\ m\u00e9thode\ main*\ (**sans\ sa\ signature**).\ Pensez\ \u00e0\ consulter\ l'API\ de\ la\ classe\ http\://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html=

#. context
#: m05real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ mission\ 5.\n\nNous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ ImageGray.java\n-\ LibrairieImage.java\n-\ LibrairieIO.java\n-\ Test.java\n-\ TestRescale.java\n-\ TestBrighten.java\n-\ TestContains.java\n-\ TestSubtract.java\n-\ README.txt\n=

#. name
#: m05real/task.yaml
!Mission\ 5\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m05real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 5=

#. context
#: m06Q1/task.yaml
!Dans\ un\ programme\ Java,\ on\ \u00e9crit\ une\ classe\ permettant\ de\ repr\u00e9senter\ une\ date.\ Les\ variables\ d'instant\ de\ cette\ classe\ sont\ d\u00e9finies\ comme\ suite\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ Une\ classe\ pour\ encoder\ une\ date\n\ \ \ \ *\n\ \ \ \ *\ @author\ Olivier\ Bonaventure\n\ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ */\n\ \ \ public\ class\ Date{\n\ \ \ \ \ public\ int\ jour;\ //\ le\ jour\ du\ mois\n\ \ \ \ \ public\ int\ mois;\ //\ le\ mois\n\ \ \ \ \ public\ int\ annee;\ //\ l'ann\u00e9e\n\ \ \ \ \ //...\n\ \ \ }\n\nLe\ constructeur\ de\ cette\ classe\ a\ comme\ sp\u00e9cification\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 1\ <\=\ jour\ <\=\ 31,\ 1\ <\=\ mois\ <\=\ 12\n\ \ \ \ \ *\ @post\ retourne\ une\ date,\ les\ mois\ commencent\ \u00e0\ 1\ pour\ janvier\n\ \ \ \ \ *\ \ \ \ \ \ \ On\ ne\ g\u00e8re\ pas\ les\ ann\u00e9es\ bissextiles,\ f\u00e9vrier\ est\ suppos\u00e9\ toujours\n\ \ \ \ \ *\ \ \ \ \ \ \ contenir\ 28\ jours\n\ \ \ \ \ */\n\n\nVoici\ quelques\ exemples\ d'utilisation\ du\ constructeur\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ Date\ poisson\ \=\ new\ Date(1,4,2017);\ //\ 1er\ avril\ 2017\n\ \ \ Date\ noel\ \=\ new\ Date(25,12,2016);\ //\ 25\ d\u00e9cembre\ 2016\n\n\nEcrivez\ le\ constructeur\ de\ cette\ classe\ ``Date``.=

#. name
#: m06Q1/task.yaml
!Mission\ 6\ \:\ Q*\ constructeur\ Date=

#. name, q1, name
#: m06Q1/task.yaml
!constructeur\ de\ Date=

#. name, q1, header
#: m06Q1/task.yaml
!\u00c9crivez\ ici\ le\ constructeur=

#. context
#: m06Q10/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Rectangle``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ \ *\ Un\ objet\ Java\ repr\u00e9sentant\ un\ rectangle\n\ \ \ \ \ \ *\n\ \ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ class\ Rectangle{\n\ \ \ \ \ \ \ \ \ private\ double\ longueur;\n\ \ \ \ \ \ \ \ \ private\ double\ largeur;\n\n\ \ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ long,\ larg\ >\ 0\n\ \ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ un\ rectangle\ de\ longueur\ lon\ et\ de\ largeur\ larg\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Rectangle(double\ lon,\ double\ larg){\n\ \ \ \ \ \ \ \ \ \ \ \ \ longueur\ \=\ lon;\n\ \ \ \ \ \ \ \ \ \ \ \ \ largeur\ \=\ larg;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ longueur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ getLongueur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ longueur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ largeur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ getLargeur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ largeur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ surface\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ \ public\ double\ surface(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ \ *\ @post\ return\ true\ si\ this\ et\ r\ ont\ la\ m\u00eame\ surface,\ false\ sinon\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ }=

#. name
#: m06Q10/task.yaml
!Mission\ 6\ \:\ Q*\ memeSurface=

#. name, q1, name
#: m06Q10/task.yaml
!memeSurface=

#. name, q1, header
#: m06Q10/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``memeSurface``\ dont\ les\ sp\u00e9cifications\ sont\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ *\ @post\ return\ true\ si\ this\ et\ r\ ont\ la\ m\u00eame\ surface,\ false\ sinon\n\ \ \ \ */=

#. context
#: m06Q11/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Rectangle``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ \ *\ Un\ objet\ Java\ repr\u00e9sentant\ un\ rectangle\n\ \ \ \ \ \ *\n\ \ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ class\ Rectangle{\n\ \ \ \ \ \ \ \ \ private\ double\ longueur;\n\ \ \ \ \ \ \ \ \ private\ double\ largeur;\n\n\ \ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ long,\ larg\ >\ 0\n\ \ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ un\ rectangle\ de\ longueur\ lon\ et\ de\ largeur\ larg\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Rectangle(double\ lon,\ double\ larg){\n\ \ \ \ \ \ \ \ \ \ \ \ \ longueur\ \=\ lon;\n\ \ \ \ \ \ \ \ \ \ \ \ \ largeur\ \=\ larg;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ longueur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ getLongueur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ longueur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ largeur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\n\ \ \ \ \ \ \ \ \ public\ double\ getLargeur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ largeur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ surface\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ surface(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ \ *\ @post\ return\ true\ si\ this\ et\ r\ ont\ la\ m\u00eame\ surface,\ false\ sinon\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ boolean\ memeSurface(Rectangle\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ \ *\ @post\ return\ true\ si\ this\ et\ r\ sont\ identiques,\ false\ sinon\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ }=

#. name
#: m06Q11/task.yaml
!Mission\ 6\ \:\ Q*\ rectangle\ identique=

#. name, q1, name
#: m06Q11/task.yaml
!identique=

#. name, q1, header
#: m06Q11/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``identique``\ dont\ les\ sp\u00e9cifications\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ *\ @post\ return\ true\ si\ this\ et\ r\ sont\ identiques,\ false\ sinon\n\ \ \ \ \ */=

#. context
#: m06Q2/task.yaml
!Consid\u00e9rons\ \u00e0\ nouveau\ la\ classe\ ``Date``\ qui\ permet\ de\ repr\u00e9senter\ une\ date.\ Le\ squelette\ du\ code\ de\ cette\ classe\ est\ le\ suivant\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ Une\ classe\ pour\ encoder\ une\ date\n\ \ \ \ *\n\ \ \ \ *\ @author\ Olivier\ Bonaventure\n\ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ */\n\ \ \ public\ class\ Date\n\ \ \ {\n\ \ \ \ public\ int\ jour;\ //\ le\ jour\ du\ mois\n\ \ \ \ public\ int\ mois;\ //\ le\ mois\n\ \ \ \ public\ int\ annee;\ //\ l'ann\u00e9e\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 1<\=\ jour\ <\=31,\ 1<\=\ mois\ <\=12\n\ \ \ \ \ *\ @post\ retourne\ une\ date,\ les\ mois\ commencent\ \u00e0\ 1\ pour\ janvier\n\ \ \ \ \ *\ \ \ \ \ \ \ On\ ne\ g\u00e8re\ pas\ les\ ann\u00e9es\ bissextiles,\ f\u00e9vrier\ est\ suppos\u00e9\ toujours\n\ \ \ \ \ *\ \ \ \ \ \ \ contenir\ 28\ jours\n\ \ \ \ \ */\n\n\ \ \ \ public\ Date(int\ jour,\ int\ mois,\ int\ annee){\n\ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ jour\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getJour(){\n\ \ \ \ \ \ \ //\ a\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ mois\ (1\=janvier,\ 2\=f\u00e9vrier,\ ...\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getMois(){\n\ \ \ \ \ \ \ //\ a\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ l'ann\u00e9e\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getAnnee(){\n\ \ \ \ \ \ \ //\ a\ compl\u00e9ter\n\ \ \ \ }=

#. name
#: m06Q2/task.yaml
!Mission\ 6\ \:\ Q*\ getters\ Date=

#. name, q1, name
#: m06Q2/task.yaml
!getters\ de\ Date=

#. name, q1, header
#: m06Q2/task.yaml
!\u00c9crivez\ les\ trois\ m\u00e9thodes\ ``getJour``,\ ``getMois``\ et\ ``getAnnee``\ (avec\ les\ signatures)=

#. context
#: m06Q3/task.yaml
!La\ classe\ ``Date``\ repr\u00e9sente\ une\ date.\ Dans\ cette\ classe,\ \u00e9crivez\ la\ m\u00e9thode\ ``identique``\ qui\ permet\ de\ tester\ l'\u00e9galit\u00e9\ entre\ deux\ dates.\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ Une\ classe\ pour\ encoder\ une\ date\n\ \ \ \ *\n\ \ \ \ *\ @author\ Olivier\ Bonaventure\n\ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ */\n\ \ \ public\ class\ Date\ {\n\ \ \ \ public\ int\ jour;\ //\ le\ jour\ du\ mois\n\ \ \ \ public\ int\ mois;\ //\ le\ mois\n\ \ \ \ public\ int\ annee;\ //\ l'ann\u00e9e\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 1<\=\ jour\ <\=31,\ 1<\=\ mois\ <\=12\n\ \ \ \ \ *\ @post\ retourne\ une\ date,\ les\ mois\ commencent\ \u00e0\ 1\ pour\ janvier\n\ \ \ \ \ *\ \ \ \ \ \ \ On\ ne\ g\u00e8re\ pas\ les\ ann\u00e9es\ bissextiles,\ f\u00e9vrier\ est\ suppos\u00e9\ toujours\n\ \ \ \ \ *\ \ \ \ \ \ \ contenir\ 28\ jours\n\ \ \ \ \ */\n\n\ \ \ \ public\ Date(int\ jour,\ int\ mois,\ int\ annee)\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ jour\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getJour()\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ mois\ (1\=janvier,\ 2\=f\u00e9vrier,\ ...\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getMois()\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ l'ann\u00e9e\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getAnnee()\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ d\ correspondent\ \u00e0\ la\ m\u00eame\ date,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ identique(Date\ d)\ {\n\ \ \ \ \ \ //\ \u00e0\ compl\u00e9ter\n\ \ \ \ }\n\ \ \ \ //\ ...\n\ \ \ }=

#. name
#: m06Q3/task.yaml
!Mission\ 6\ \:\ Q*\ identique=

#. name, q1, name
#: m06Q3/task.yaml
!m\u00e9thode\ identique=

#. name, q1, header
#: m06Q3/task.yaml
!\u00c9crivez\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode\ ``identique``=

#. context
#: m06Q4/task.yaml
!La\ classe\ ``Date``\ repr\u00e9sente\ une\ date.\ Dans\ cette\ classe,\ \u00e9crivez\ la\ m\u00e9thode\ ``demain``\ qui\ permet\ de\ retourner\ la\ date\ qui\ suit\ celle-ci.\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ Une\ classe\ pour\ encoder\ une\ date\n\ \ \ \ *\n\ \ \ \ *\ @author\ Olivier\ Bonaventure\n\ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ */\n\ \ \ public\ class\ Date\n\ \ \ {\n\ \ \ \ public\ int\ jour;\ //\ le\ jour\ du\ mois\n\ \ \ \ public\ int\ mois;\ //\ le\ mois\n\ \ \ \ public\ int\ annee;\ //\ l'ann\u00e9e\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 1<\=\ jour\ <\=31,\ 1<\=\ mois\ <\=12\n\ \ \ \ \ *\ @post\ retourne\ une\ date,\ les\ mois\ commencent\ \u00e0\ 1\ pour\ janvier\n\ \ \ \ \ *\ \ \ \ \ \ \ On\ ne\ g\u00e8re\ pas\ les\ ann\u00e9es\ bissextiles,\ f\u00e9vrier\ est\ suppos\u00e9\ toujours\n\ \ \ \ \ *\ \ \ \ \ \ \ contenir\ 28\ jours\n\ \ \ \ \ */\n\n\ \ \ \ public\ Date(int\ jour,\ int\ mois,\ int\ annee)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ jour\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getJour()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ mois\ (1\=janvier,\ 2\=f\u00e9vrier,\ ...\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getMois()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ l'ann\u00e9e\n\ \ \ \ \ */\n\ \ \ \ public\ int\ getAnnee()\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ d\ correspondent\ \u00e0\ la\ m\u00eame\ date,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ identique(Date\ d)\ {\n\ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ date\ correspondant\ au\ jour\ qui\ suit\ this.\ Cette\ m\u00e9thode\n\ \ \ \ \ *\ \ \ \ \ \ \ ne\ supporte\ pas\ les\ ann\u00e9es\ bissextiles,\ f\u00e9vrier\ est\ suppos\u00e9\ avoir\ toujours\n\ \ \ \ \ *\ \ \ \ \ \ \ 28\ jours.\n\ \ \ \ \ */\n\ \ \ \ public\ Date\ demain()\ {\n\ \ \ \ //\ \u00e0\ compl\u00e9ter\n\ \ \ \ }\n\ \ \ }=

#. name
#: m06Q4/task.yaml
!Mission\ 6\ \:\ Q*\ demain=

#. name, q1, name
#: m06Q4/task.yaml
!m\u00e9thode\ demain=

#. name, q1, header
#: m06Q4/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``demain``\ (signature\ comprise)=

#. context
#: m06Q5/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Fraction``\ qui\ permet\ de\ repr\u00e9senter\ une\ date.\ Le\ squelette\ du\ code\ de\ cette\ classe\ est\ le\ suivant\ \:\n\n..\ code-block\:\:\ java\n\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ classe\ repr\u00e9sentant\ une\ fraction\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Fraction{\n\ \ \ \ \ \ \ \ private\ int\ num;\ //\ numerateur\n\ \ \ \ \ \ \ \ private\ int\ den;\ //\ denominateur\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ num>\=0,\ den>0\n\ \ \ \ \ \ \ \ \ *\ @post\ construit\ la\ fraction\ num/den\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Fraction(int\ num,\ int\ den){\n\ \ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ d\u00e9nominateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getDen(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\u00e0\ compl\u00e9ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ num\u00e9rateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getNum(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\u00e0\ compl\u00e9ter\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //...\n\ \ \ \ }=

#. name
#: m06Q5/task.yaml
!Mission\ 6\ \:\ Q*\ getter=

#. name, q1, name
#: m06Q5/task.yaml
!getters=

#. name, q1, header
#: m06Q5/task.yaml
!\u00c9crivez\ ici\ les\ deux\ m\u00e9thodes\ ``getDen``\ et\ ``getNum``=

#. context
#: m06Q6/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Fraction``\ qui\ permet\ de\ repr\u00e9senter\ une\ fraction.\ Le\ squelette\ du\ code\ de\ cette\ classe\ est\ le\ suivant\ \:\n\n..\ code-block\:\:\ java\n\n\n\ \ \ \ \ /**\n\ \ \ \ \ \ *\ Une\ classe\ repr\u00e9sentant\ une\ fraction\n\ \ \ \ \ \ *\n\ \ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ class\ Fraction{\n\ \ \ \ \ \ \ \ \ private\ int\ num;\ //\ numerateur\n\ \ \ \ \ \ \ \ \ private\ int\ den;\ //\ denominateur\n\n\ \ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ num>\=0,\ den>0\n\ \ \ \ \ \ \ \ \ \ *\ @post\ construit\ la\ fraction\ num/den\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Fraction(int\ num,\ int\ den){\n\ \ \ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ d\u00e9nominateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ int\ getDen(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ num\u00e9rateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ int\ getNum(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ valeur\ num\u00e9rique\ de\ la\ fraction\ est\ \u00e9gale\ \u00e0\ une\ valeur\ enti\u00e8re\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ //Code\ \u00e0\ compl\u00e9ter\n\n\ }=

#. name
#: m06Q6/task.yaml
!Mission\ 6\ \:\ Q*\ entier=

#. name, q1, name
#: m06Q6/task.yaml
!entier=

#. name, q1, header
#: m06Q6/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``entier``\ (signature\ comprise)\ dont\ les\ sp\u00e9cifications\ sont\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ valeur\ num\u00e9rique\ de\ la\n\ \ \ \ \ \ *\ \ \ \ \ \ \ fraction\ est\ \u00e9gale\ \u00e0\ une\ valeur\ enti\u00e8re\n\ \ \ \ \ \ */=

#. context
#: m06Q7/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Point``\ qui\ permet\ de\ repr\u00e9senter\ une\ point.\ Le\ squelette\ du\ code\ de\ cette\ classe\ est\ le\ suivant\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Point{\n\ \ \ \ \ \ \ private\ double\ x;\n\ \ \ \ \ \ \ private\ double\ y;\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ a\ construit\ le\ point\ de\ coordonn\u00e9e\ x,y\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ Point(double\ x,\ double\ y)\ {\n\ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ coordonn\u00e9e\ x\ du\ Point\ this\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ //\u00e0\ compl\u00e9ter\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ coordonn\u00e9e\ y\ du\ Point\ this\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ //\u00e0\ compl\u00e9ter\n\ \ \ \ }=

#. name
#: m06Q7/task.yaml
!Mission\ 6\ \:\ Q*\ getters\ Point=

#. name, q1, name
#: m06Q7/task.yaml
!getters\ Point=

#. name, q1, header
#: m06Q7/task.yaml
!\u00c9crivez\ ici\ les\ m\u00e9thodes\ ``getX``\ et\ ``getY``=

#. context
#: m06Q8/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Point``\ qui\ permet\ de\ repr\u00e9senter\ une\ point.\ Le\ squelette\ du\ code\ de\ cette\ classe\ est\ le\ suivant\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Point{\n\ \ \ \ \ \ \ private\ double\ x;\n\ \ \ \ \ \ \ private\ double\ y;\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ a\ construit\ le\ point\ de\ coordonn\u00e9e\ x,y\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ Point(double\ x,\ double\ y)\ {\n\ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ coordonn\u00e9e\ x\ du\ Point\ this\n\ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ double\ getX()\ {\n\ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ coordonn\u00e9e\ y\ du\ Point\ this\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ double\ getY()\ {\n\ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ p\!\=null\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ distance\ entre\ this\ et\ p\n\ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ *\ Voir\ https\://fr.wikipedia.org/wiki/Coordonn\u00e9es_cart\u00e9siennes\n\ \ \ \ \ \ \ \ *\ pour\ le\ rappel\ de\ la\ distance\ entre\ deux\ points\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ //A\ compl\u00e9ter\n\ \ \ \ }=

#. name
#: m06Q8/task.yaml
!Mission\ 6\ \:\ Q*\ distance=

#. name, q1, name
#: m06Q8/task.yaml
!distance=

#. name, q1, header
#: m06Q8/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``distance``\ dont\ les\ sp\u00e9cifications\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ p\!\=null\n\ \ \ \ \ *\ @post\ retourne\ la\ distance\ entre\ this\ et\ p\n\ \ \ \ \ *\n\ \ \ \ \ *\ Voir\ https\://fr.wikipedia.org/wiki/Coordonn\u00e9es_cart\u00e9siennes\n\ \ \ \ \ *\ pour\ le\ rappel\ de\ la\ distance\ entre\ deux\ points\n\ \ \ \ \ */=

#. context
#: m06Q9/task.yaml
!Consid\u00e9rons\ la\ classe\ ``Rectangle``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ \ *\ Un\ objet\ Java\ repr\u00e9sentant\ un\ rectangle\n\ \ \ \ \ \ *\n\ \ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ \ *\ @version\ Oct.\ 2016\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ class\ Rectangle{\n\ \ \ \ \ \ \ \ \ private\ double\ longueur;\n\ \ \ \ \ \ \ \ \ private\ double\ largeur;\n\n\ \ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ long,\ larg\ >0\n\ \ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ un\ rectangle\ de\ longueur\ lon\ et\ de\ largeur\ larg\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Rectangle(double\ lon,\ double\ larg){\n\ \ \ \ \ \ \ \ \ \ \ \ \ longueur\ \=\ lon;\n\ \ \ \ \ \ \ \ \ \ \ \ \ largeur\ \=\ larg;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ longueur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ getLongueur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ longueur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ largeur\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ double\ getLargeur(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ largeur;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ surface\ du\ rectangle\n\ \ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ }=

#. name
#: m06Q9/task.yaml
!Mission\ 6\ \:\ Q*\ surface=

#. name, q1, name
#: m06Q9/task.yaml
!surface=

#. name, q1, header
#: m06Q9/task.yaml
!\u00c9crivez\ ici\ la\ m\u00e9thode\ ``surface``\ dont\ les\ sp\u00e9cifications\ sont\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ surface\ du\ rectangle\n\ \ \ \ \ */=

#. context
#: m06_bf/task.yaml
#, python-format
!\u00c9crivez\ une\ classe\ compl\u00e8te\ ``Employe``\ dont\ les\ instances\ repr\u00e9sentent\ un\ employ\u00e9\ d\u2019entreprise.\ Un\ employ\u00e9\ est\ caract\u00e9ris\u00e9\ par\ son\ nom\ (un\ string)\ et\ son\ salaire\ (un\ entier\ positif).\ Il\ doit\ \u00eatre\ possible\ de\ cr\u00e9er\ un\ nouvel\ employ\u00e9\ avec\ un\ nom\ et\ un\ salaire\ et\ d\u2019effectuer\ les\ op\u00e9rations\ suivantes\ sur\ un\ objet\ Employe\ \:\n\n-\ obtenir\ le\ nom\ de\ l\u2019employ\u00e9\n-\ obtenir\ le\ salaire\ de\ l'employ\u00e9\n-\ obtenir\ un\ texte\ descriptif\ repr\u00e9sentant\ l\u2019employ\u00e9\ sous\ la\ forme\ ``nom\ \:\ salaire``\n-\ augmenter\ le\ salaire\ de\ l'employ\u00e9\ d'un\ certain\ pourcentage\n\nVous\ devez\ donc\ d\u00e9finir\ la\ classe\ ``Employe``\ qui\ contiendra\ les\ m\u00e9thodes\ suivantes\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ Un\ employ\u00e9\ est\ cr\u00e9\u00e9\ avec\ le\ nom\ et\ le\ salaire\ indiqu\u00e9s\ en\ param\u00e8tres\n\ \ \ \ \ */\n\ \ \ \ public\ Employe(String\ n,\ float\ s);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ Renvoie\ le\ nom\ de\ l'employ\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom();\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ Renvoie\ le\ salaire\ de\ l'employ\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ float\ getSalaire();\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ Renvoie\ une\ repr\u00e9sentation\ textuelle\ de\ l'employ\u00e9\n\ \ \ \ \ *\ \ \ \ \ \ \ au\ format\ nom\ \:\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString();\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ est\ un\ entier\ repr\u00e9sentant\ le\ pourcentage\ d'augmentation\n\ \ \ \ \ *\ @post\ Le\ salaire\ de\ l'employ\u00e9\ est\ augment\u00e9\ du\ pourcentage\ sp\u00e9cifi\u00e9\n\ \ \ \ \ *\ \ \ \ \ \ \ (ex\ \:\ un\ pourcentage\ de\ 100%\ double\ le\ salaire)\n\ \ \ \ \ */\n\ \ \ \ public\ void\ augmente(float\ pourcentage);=

#. name
#: m06_bf/task.yaml
!Mission\ 6\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, header
#: m06_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ code\ de\ la\ classe\ ``Employe``,\ conform\u00e9ment\ aux\ sp\u00e9cifications.\ Attention,\ la\ signature\ de\ la\ classe,\ ainsi\ que\ les\ crochets,\ sont\ d\u00e9j\u00e0\ \u00e9crits.\ Il\ vous\ suffit\ donc\ de\ compl\u00e9ter\ cette\ classe,\ pas\ de\ l'\u00e9crire\ enti\u00e8rement.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Employe\ {\n\ \ \ \ \ \ \ \ //\ Votre\ code\ ici\n\ \ \ \ }\n\n=

#. context
#: m06_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 6.\ Classes\ et\ Objets\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ -\ |jn5.1|_\n\n\ \ \ \ -\ |jn5.1.1|_\n\ \ \ \ -\ |jn5.1.2|_\n\ \ \ \ -\ |jn5.1.3|_\n\n\ \ -\ |jn5.2|_\n\n\ \ \ \ -\ |jn5.2.1|_\n\ \ \ \ -\ |jn5.2.2|_\n\ \ \ \ -\ |jn5.2.3|_\n\n\ \ -\ |jn5.4|_\n\n\ \ \ \ -\ |jn5.4.1|_\n\ \ \ \ -\ |jn5.4.2|_\n\ \ \ \ -\ |jn5.4.3|_\n\nainsi\ que\ l'API\ de\ la\ classe\ |TextIO|_.\ \ Les\ sections\ vues\ pr\u00e9c\u00e9demment\ restent\ bien\ entendu\ d'actualit\u00e9.\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn5.1\ \:\ http\://math.hws.edu/javanotes/c5/s1.html\n..\ |jn5.1|\ replace\:\:\ `5.1\ \:\ Objects,\ Instance\ Methods,\ and\ Instance\ Variables`\n\n..\ _jn5.1.1\ \:\ http\://math.hws.edu/javanotes/c5/s1.html\#OOP.1.1\n..\ |jn5.1.1|\ replace\:\:\ `5.1.1\ \:\ Objects,\ Classes,\ and\ Instances`\n\n..\ _jn5.1.2\ \:\ http\://math.hws.edu/javanotes/c5/s1.html\#OOP.1.2\n..\ |jn5.1.2|\ replace\:\:\ `5.1.2\ \:\ Fundamentals\ of\ Objects`\n\n..\ _jn5.1.3\ \:\ http\://math.hws.edu/javanotes/c5/s1.html\#OOP.1.3\n..\ |jn5.1.3|\ replace\:\:\ `5.1.3\ \:\ Getters\ and\ Setters`\n\n..\ _jn5.2\ \:\ http\://math.hws.edu/javanotes/c5/s2.html\n..\ |jn5.2|\ replace\:\:\ `5.2\ \:\ Constructors\ and\ Object\ Initialization`\n\n..\ _jn5.2.1\ \:\ http\://math.hws.edu/javanotes/c5/s2.html\#OOP.2.1\n..\ |jn5.2.1|\ replace\:\:\ `5.2.1\ \:\ Initializing\ Instance\ Variables`\n\n..\ _jn5.2.2\ \:\ http\://math.hws.edu/javanotes/c5/s2.html\#OOP.2.2\n..\ |jn5.2.2|\ replace\:\:\ `5.2.2\ \:\ Constructors`\n\n..\ _jn5.2.3\ \:\ http\://math.hws.edu/javanotes/c5/s2.html\#OOP.2.3\n..\ |jn5.2.3|\ replace\:\:\ `5.2.3\ \:\ Garbage\ Collection`\n\n..\ _jn5.4\ \:\ http\://math.hws.edu/javanotes/c5/s4.html\n..\ |jn5.4|\ replace\:\:\ `5.4\ \:\ Programming\ Example\:\ Card,\ Hand,\ Deck`\n\n..\ _jn5.4.1\ \:\ http\://math.hws.edu/javanotes/c5/s4.html\#OOP.4.1\n..\ |jn5.4.1|\ replace\:\:\ `5.4.1\ \:\ Designing\ the\ classes`\n\n..\ _jn5.4.2\ \:\ http\://math.hws.edu/javanotes/c5/s4.html\#OOP.4.2\n..\ |jn5.4.2|\ replace\:\:\ `5.4.2\ \:\ The\ Card\ Class`\n\n..\ _jn5.4.3\ \:\ http\://math.hws.edu/javanotes/c5/s4.html\#OOP.4.3\n..\ |jn5.4.3|\ replace\:\:\ `5.4.3\ \:\ Example\:\ A\ Simple\ Card\ Game`\n\n..\ _TextIO\ \:\ http\://math.hws.edu/eck/cs124/javanotes6/source/TextIO.java\n..\ |TextIO|\ replace\:\:\ ``TextIO``\n=

#. name
#: m06_qcm/task.yaml
!Mission\ 6\:\ QCM=

#. name, q1, name
#: m06_qcm/task.yaml
!Classe,\ objets\ et\ instances=

#. name, q1, header
#: m06_qcm/task.yaml
!\nSoit\ le\ code\ Java\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ PairOfDice\ {\n\n\ \ \ \ \ \ \ \ public\ int\ die1;\ \ \ //\ Number\ showing\ on\ the\ first\ die.\n\ \ \ \ \ \ \ \ public\ int\ die2;\ \ \ //\ Number\ showing\ on\ the\ second\ die.\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ val1,\ val2\ are\ valid\ die\ values\n\ \ \ \ \ \ \ \ \ *\ @post\ creates\ a\ pair\ of\ dice\ that\ are\ initially\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ showing\ the\ values\ val1\ and\ val2.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ PairOfDice(int\ val1,\ int\ val2)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ die1\ \=\ val1;\n\ \ \ \ \ \ \ \ \ \ \ \ \ die2\ \=\ val2;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ rolled\ the\ dice\ by\ setting\ each\ of\ the\ dice\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ to\ be\ a\ random\ number\ between\ 1\ and\ 6.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ roll()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ die1\ \=\ (int)(Math.random()*6)\ +\ 1;\n\ \ \ \ \ \ \ \ \ \ \ \ \ die2\ \=\ (int)(Math.random()*6)\ +\ 1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ }\ //\ end\ class\ PairOfDice\n\nLaquelle\ des\ propositions\ ci-dessous\ est\ correcte\u00a0?\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Ce\ code\ d\u00e9finit\ une\ classe\ ``PairOfDice``.\n*\ Chaque\ instance\ de\ ``PairOfDice``\ a\ sa\ propre\ copie\ de\ ``die1``.\n*\ ``roll()``\ est\ une\ m\u00e9thode\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Une\ instance\ de\ ``PairOfDice``\ est\ un\ objet.\n*\ ``die1``\ est\ une\ variable\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n*\ L'effet\ de\ l'ex\u00e9cution\ de\ la\ m\u00e9thode\ ``roll()``\ d\u00e9pend\ de\ l'instance\ \u00e0\ laquelle\ elle\ s'applique.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Ce\ code\ d\u00e9finit\ un\ objet\ ``PairOfDice``.\n*\ ``die1``\ est\ une\ variable\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n*\ ``roll()``\ est\ une\ m\u00e9thode\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
!\nCe\ code\ d\u00e9finit\ une\ *classe*,\ pas\ un\ objet.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Une\ instance\ de\ ``PairOfDice``\ est\ un\ objet.\n*\ ``die1``\ est\ une\ variable\ partag\u00e9e\ entre\ les\ instances\ de\ ``PairOfDice``.\n*\ ``roll()``\ est\ une\ m\u00e9thode\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
!\n``die1``\ est\ une\ variable\ d'instance,\ elle\ n'est\ pas\ partag\u00e9e.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Une\ instance\ de\ ``PairOfDice``\ est\ un\ objet.\n*\ Chaque\ instance\ de\ ``PairOfDice``\ a\ sa\ propre\ copie\ de\ ``die1``.\n*\ ``roll()``\ est\ une\ m\u00e9thode\ de\ classe\ de\ la\ classe\ ``PairOfDice``.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
!\n``roll()``\ est\ une\ m\u00e9thode\ d'instance.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Une\ instance\ de\ ``die1``\ est\ un\ entier.\n*\ Chaque\ instance\ de\ ``PairOfDice``\ a\ sa\ propre\ copie\ de\ ``die1``.\n*\ L'effet\ de\ l'ex\u00e9cution\ de\ la\ m\u00e9thode\ ``roll()``\ d\u00e9pend\ de\ l'instance\ \u00e0\ laquelle\ elle\ s'applique.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
!\nLa\ notion\ d'instance\ s'applique\ aux\ classes\ et\ aux\ objets,\ pas\ aux\ variables.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Ce\ code\ d\u00e9finit\ une\ classe\ ``PairOfDice``.\n*\ ``die1``\ est\ une\ variable\ locale\ de\ la\ classe\ ``PairOfDice``.\n*\ L'effet\ de\ l'ex\u00e9cution\ de\ la\ m\u00e9thode\ ``roll()``\ d\u00e9pend\ de\ l'instance\ \u00e0\ laquelle\ elle\ s'applique.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
!\nUne\ variable\ locale\ est\ d\u00e9finie\ \u00e0\ l'int\u00e9rieur\ du\ corps\ d'une\ m\u00e9thode.\n=

#. name, q1, text
#: m06_qcm/task.yaml
!\n*\ Une\ instance\ de\ ``PairOfDice``\ est\ un\ objet.\n*\ ``die1``\ est\ une\ variable\ d'instance\ de\ la\ classe\ ``PairOfDice``.\n*\ L'effet\ de\ l'ex\u00e9cution\ de\ la\ m\u00e9thode\ ``roll()``\ est\ ind\u00e9pendant\ de\ l'instance\ \u00e0\ laquelle\ elle\ s'applique.\n=

#. name, q1, feedback
#: m06_qcm/task.yaml
#, fuzzy
!\n``roll()``\ est\ une\ m\u00e9thode\ d'instance\ et\ utilise\ les\ variables\ d'instance\ de\ la\ classe.\n=do you correctly initialize Student class instance variables?\n

#. name, q2, name
#: m06_qcm/task.yaml
!D\u00e9finition\ de\ classe=

#. name, q2, header
#: m06_qcm/task.yaml
!\nLaquelle\ des\ d\u00e9finitions\ suivantes\ d\u00e9finit\ correctement\ une\ classe\ dont\ les\ instances\ repr\u00e9sentent\ des\ fractions\ (num\ /\ den),\ telle\ que\ les\ instructions\n\n..\ code-block\:\:\ java\n\n\ \ Fraction\ f\ \=\ new\ Fraction(3,4);\n\ \ System.out.println(f.valeur());\n\nimprime\ le\ r\u00e9sultat\ ``0.75``\ \ ?\n=

#. name, q2, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Fraction\ {\n\ \ \ \ \ \ \ private\ int\ num;\ \ //\ num\u00e9rateur\n\ \ \ \ \ \ \ private\ int\ den;\ \ //\ d\u00e9nominateur\n\n\ \ \ \ \ \ \ public\ Fraction(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ den\ \=\ d;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ public\ double\ valeur()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((double)\ num)\ /\ ((double)\ den);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Fraction\ {\n\ \ \ \ \ \ \ private\ int\ num;\ \ //\ num\u00e9rateur\n\ \ \ \ \ \ \ private\ int\ den;\ \ //\ d\u00e9nominateur\n\n\ \ \ \ \ \ \ public\ Fraction(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ den\ \=\ d;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ public\ static\ double\ valeur()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((double)\ num)\ /\ ((double)\ den);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m06_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``valeur``\ doit\ \u00eatre\ une\ m\u00e9thode\ d'instance,\ pour\ avoir\ acc\u00e8s\ aux\ variables\ d'instance\ de\ chaque\ instance\ de\ ``Fraction``.\n=

#. name, q2, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Fraction\ {\n\ \ \ \ \ \ \ private\ int\ num;\ \ //\ num\u00e9rateur\n\ \ \ \ \ \ \ private\ int\ den;\ \ //\ d\u00e9nominateur\n\n\ \ \ \ \ \ \ public\ void\ Fraction(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ den\ \=\ d;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ public\ double\ valeur()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((double)\ num)\ /\ ((double)\ den);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m06_qcm/task.yaml
!\nLa\ signature\ du\ constructeur\ est\ incorrecte.\n=

#. name, q2, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Fraction\ {\n\ \ \ \ \ \ \ private\ int\ num;\ \ //\ num\u00e9rateur\n\ \ \ \ \ \ \ private\ int\ den;\ \ //\ d\u00e9nominateur\n\n\ \ \ \ \ \ \ public\ Fraction(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ new\ Fraction(n,d);\n\ \ \ \ \ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ den\ \=\ d;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ public\ double\ valeur()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((double)\ num)\ /\ ((double)\ den);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m06_qcm/task.yaml
!\nLa\ construction\ 'new\ Fraction(n,d)'\ fait\ appel\ au\ constructeur,\ elle\ ne\ doit\ pas\ se\ trouver\ dans\ la\ d\u00e9finition\ de\ ce\ constructeur.\n=

#. name, q2, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Fraction\ {\n\ \ \ \ \ \ \ private\ int\ num\ \=\ 0;\ \ //\ num\u00e9rateur\n\ \ \ \ \ \ \ private\ int\ den\ \=\ 1;\ \ //\ d\u00e9nominateur\n\n\ \ \ \ \ \ \ public\ Fraction(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ den\ \=\ d;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ public\ double\ valeur(Fraction\ f)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((double)\ num)\ /\ ((double)\ den);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m06_qcm/task.yaml
!\nDans\ ``valeur``,\ il\ n'est\ pas\ n\u00e9cessaire\ de\ passer\ la\ fraction\ comme\ param\u00e8tre.\n=

#. name, q3, name
#: m06_qcm/task.yaml
!Initialisation\ d'objets=

#. name, q3, header
#: m06_qcm/task.yaml
!\nSur\ base\ de\ la\ d\u00e9finition\ de\ la\ question\ pr\u00e9c\u00e9dente,\ que\ se\ passe-t-il\ si\ on\ tente\ de\ compiler\ et\ d'ex\u00e9cuter\ (s\u00e9par\u00e9ment)\ les\ trois\ suites\ d'instructions\ suivantes\u00a0?\n\n1.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ Fraction\ f;\n\ \ \ \ System.out.println(f.valeur());\n\n2.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ Fraction\ f\ \=\ new\ Fraction(3,\ 4);\n\ \ \ \ System.out.println(f.valeur());\n\n3.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ Fraction\ f\ \=\ null;\n\ \ \ \ System.out.println(f.valeur());\n\n=

#. name, q3, text
#: m06_qcm/task.yaml
!\n1.\ Erreur\ \u00e0\ l'ex\u00e9cution\:\ ``f``\ est\ une\ r\u00e9f\u00e9rence\ nulle\n2.\ Imprime\ "0.75"\n3.\ Erreur\ \u00e0\ l'ex\u00e9cution\:\ ``f``\ est\ une\ r\u00e9f\u00e9rence\ nulle\n=

#. name, q3, text
#: m06_qcm/task.yaml
!\n1.\ Imprime\ "0.0"\n2.\ Imprime\ "0.75"\n3.\ Erreur\ \u00e0\ l'ex\u00e9cution\:\ ``f``\ est\ une\ r\u00e9f\u00e9rence\ nulle\n=

#. name, q3, feedback
#: m06_qcm/task.yaml
!\nDans\ le\ cas\ 1,\ ``f``\ n'est\ pas\ initialis\u00e9\ donc\ ne\ r\u00e9f\u00e9rencie\ aucun\ objet.\n=

#. name, q3, text
#: m06_qcm/task.yaml
!\n1.\ Erreur\ \u00e0\ l'ex\u00e9cution\:\ ``f``\ est\ une\ r\u00e9f\u00e9rence\ nulle\n2.\ Imprime\ "0.75"\n3.\ Imprime\ "0.0"\n=

#. name, q3, feedback
#: m06_qcm/task.yaml
!\nLa\ r\u00e9f\u00e9rence\ ``null``\ ne\ r\u00e9f\u00e9rencie\ aucun\ objet,\ le\ cas\ 3\ est\ identique\ au\ cas\ 1.\n=

#. name, q3, text
#: m06_qcm/task.yaml
!\n1.\ Erreur\ de\ compilation\n2.\ Imprime\ "0.75"\n3.\ Erreur\ de\ compilation\n=

#. name, q3, feedback
#: m06_qcm/task.yaml
!\nLes\ trois\ sont\ corrects\ par\ rapport\ \u00e0\ la\ syntaxe\ et\ aux\ types,\ la\ compilation\ ne\ pose\ pas\ de\ probl\u00e8me.\n=

#. name, q3, text
#: m06_qcm/task.yaml
!\n1.\ Imprime\ "0.0"\n2.\ Imprime\ "0.75"\n3.\ Imprime\ "0.0"\n=

#. name, q3, feedback
#: m06_qcm/task.yaml
!\nDans\ les\ cas\ 1\ et\ 3,\ ``f``\ ne\ r\u00e9f\u00e9rencie\ aucun\ objet.\n=

#. name, q4, name
#: m06_qcm/task.yaml
!Accesseurs\ et\ mutateurs=

#. name, q4, header
#: m06_qcm/task.yaml
!\nComment\ d\u00e9finirait-on\ un\ accesseur\ (getter)\ et\ un\ mutateur\ (setter)\ pour\ la\ variable\ d'instance\ ``num``\ de\ la\ classe\ ``Fraction``\ \u00e0\ la\ question\ 2,\ tels\ qu'utilis\u00e9s\ dans\ l'exemple\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ Fraction\ f\ \=\ new\ Fraction(3,\ 4);\n\ \ System.out.println(f.getNum());\ \ //\ imprime\ "3"\n\ \ f.setNum(5);\n\ \ System.out.println(f.getNum());\ \ //\ imprime\ "5"\n=

#. name, q4, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ return\ num;\n\ \ \ }\n\ \ \ public\ void\ setNum(int\ n)\ {\n\ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ }\n=

#. name, q4, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ System.out.println(num);\n\ \ \ }\n\ \ \ public\ void\ setNum()\ {\n\ \ \ \ \ \ \ num\ \=\ TextIO.getInt();\n\ \ \ }\n=

#. name, q4, feedback
#: m06_qcm/task.yaml
!\nIl\ s'agit\ de\ permettre\ au\ reste\ du\ programme\ de\ lire\ et\ modifier\ la\ variable,\ pas\ \u00e0\ l'utilisateur.\n=

#. name, q4, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ void\ getNum(int\ n)\ {\n\ \ \ \ \ \ \ n\ \=\ num;\n\ \ \ }\n\ \ \ public\ void\ setNum(int\ n)\ {\n\ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ }\n=

#. name, q4, feedback
#: m06_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``getNum()``\ ne\ sert\ \u00e0\ rien\ tel\ que\ d\u00e9finie\ ici.\n=

#. name, q4, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ return\ num;\n\ \ \ }\n\ \ \ public\ int\ setNum(int\ n)\ {\n\ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ \ \ \ \ return\ num;\n\ \ \ }\n=

#. name, q4, feedback
#: m06_qcm/task.yaml
!\nDans\ ``setNum()``,\ pourquoi\ retourner\ la\ valeur\ modifi\u00e9e?\n=

#. name, q4, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ f1()\ {\n\ \ \ \ \ \ \ return\ num;\n\ \ \ }\n\ \ \ public\ void\ f2(int\ n)\ {\n\ \ \ \ \ \ \ num\ \=\ n;\n\ \ \ }\n=

#. name, q4, feedback
#: m06_qcm/task.yaml
!\nCeci\ peut\ fonctionner,\ mais\ pourquoi\ prendre\ des\ noms\ de\ m\u00e9thode\ qui\ ne\ signifient\ rien\ et\ violent\ les\ conventions\ usuelles\u00a0?\ \ La\ lisibilit\u00e9\ du\ code\ est\ un\ facteur\ de\ qualit\u00e9\ important.\n=

#. name, q5, name
#: m06_qcm/task.yaml
!Constructeurs=

#. name, q5, header
#: m06_qcm/task.yaml
!\nSoit\ la\ classe\ suivante\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Etudiant\ {\n\ \ \ \ \ \ \ \ String\ nom;\n\ \ \ \ \ \ \ \ String\ matricule;\n\ \ \ \ \ \ \ \ boolean\ bisseur\ \=\ false;\n\n\ \ \ \ \ \ \ \ //\ ...\ m\u00e9thodes\n\ \ \ \ }\n\nParmi\ les\ d\u00e9finitions\ de\ constructeurs\ suivantes,\ laquelle\ est\ correcte\u00a0?\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ non-bisseur\n\ \ \ public\ Etudiant(String\ n,\ String\ m)\ {\n\ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ matricule\ \=\ m;\n\ \ \ }\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ anonyme\n\ \ \ public\ Etudiant(String\ m,\ boolean\ b)\ {\n\ \ \ \ \ \ \ nom\ \=\ "[anonyme]";\n\ \ \ \ \ \ \ matricule\ \=\ m;\n\ \ \ \ \ \ \ bisseur\ \=\ b;\n\ \ \ }\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ bisseur\n\ \ \ public\ Bisseur(String\ n,\ String\ m)\ {\n\ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ matricule\ \=\ m;\n\ \ \ \ \ \ \ bisseur\ \=\ true;\n\ \ \ }\n=

#. name, q5, feedback
#: m06_qcm/task.yaml
!\nLe\ constructeur\ doit\ avoir\ le\ nom\ de\ la\ classe.\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ sans\ matricule\n\ \ \ public\ static\ Etudiant(String\ n,\ boolean\ b)\ {\n\ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ matricule\ \=\ "000000";\n\ \ \ \ \ \ \ bisseur\ \=\ b;\n\ \ \ }\n=

#. name, q5, feedback
#: m06_qcm/task.yaml
!\nUn\ constructeur\ ne\ peut\ pas\ \u00eatre\ d\u00e9clar\u00e9\ ``static``.\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ anonyme\n\ \ \ public\ Etudiant(String\ m)\ {\n\ \ \ \ \ \ \ matricule\ \=\ m;\n\ \ \ \ \ \ \ bisseur\ \=\ false;\n\ \ \ }\n=

#. name, q5, feedback
#: m06_qcm/task.yaml
!\nLa\ variable\ ``nom``\ n'est\ pas\ initialis\u00e9e.\n=

#. name, q5, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ //\ un\ \u00e9tudiant\ non-bisseur\n\ \ \ public\ Etudiant(String\ n,\ String\ m)\ {\n\ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ matricule\ \=\ m;\n\ \ \ \ \ \ \ return;\n\ \ \ }\n=

#. name, q5, feedback
#: m06_qcm/task.yaml
!\nL'instruction\ ``return``\ est\ superflue\ et\ interdite\ dans\ un\ constructeur.\n=

#. name, q6, name
#: m06_qcm/task.yaml
!R\u00e9f\u00e9rences=

#. name, q6, header
#: m06_qcm/task.yaml
!\nSoit\ la\ classe\ ``Compteur``\ suivante\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Compteur\ {\n\ \ \ \ \ \ \ \ private\ int\ compte;\ \ //\ le\ compteur\n\n\ \ \ \ \ \ \ \ public\ Compteur(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ compte\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ void\ ajout(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ compte\ \=\ compte\ +\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ int\ valeur()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ compte;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nQu'imprime\ le\ programme\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ \ Compteur\ c1\ \=\ new\ Compteur(10);\n\ \ \ \ \ \ \ \ Compteur\ c2\ \=\ new\ Compteur(20);\n\ \ \ \ \ \ \ \ c1.ajout(5);\n\ \ \ \ \ \ \ \ System.out.println(c1.valeur()\ +\ ","\ +\ c2.valeur());\n\ \ \ \ \ \ \ \ c1.ajout(10);\n\ \ \ \ \ \ \ \ c1\ \=\ c2;\n\ \ \ \ \ \ \ \ c2.ajout(20);\n\ \ \ \ \ \ \ \ System.out.println(c1.valeur()\ +\ ","\ +\ c2.valeur());\n\ \ \ \ \ \ \ \ c2\ \=\ new\ Compteur(0);\n\ \ \ \ \ \ \ \ System.out.println(c1.valeur()\ +\ ","\ +\ c2.valeur());\n=

#. name, q6, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 15,20\n\ \ \ 40,40\n\ \ \ 40,0\n=

#. name, q6, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 15,20\n\ \ \ 20,40\n\ \ \ 20,0\n=

#. name, q6, feedback
#: m06_qcm/task.yaml
!\nApr\u00e8s\ l'instruction\ ``c1\ \=\ c2``,\ ``c1``\ et\ ``c2``\ sont\ des\ r\u00e9f\u00e9rences\ au\ m\u00eame\ objet;\ ``c2.ajout(20)``\ agit\ aussi\ sur\ l'objet\ r\u00e9f\u00e9renc\u00e9\ par\ ``c1``.\n=

#. name, q6, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 15,20\n\ \ \ 40,40\n\ \ \ 0,0\n=

#. name, q6, feedback
#: m06_qcm/task.yaml
!\nApr\u00e8s\ ``c2\ \=\ new\ Compteur(0)``,\ seule\ ``c2``\ r\u00e9f\u00e8re\ au\ nouvel\ objet\ cr\u00e9\u00e9;\ ``c1``\ est\ inchang\u00e9.\n=

#. name, q6, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 15,20\n\ \ \ 25,40\n\ \ \ 25,0\n=

#. name, q6, feedback
#: m06_qcm/task.yaml
!\nAttention\ \u00e0\ l'instruction\ ``c1\ \=\=\ c2``.\n=

#. name, q6, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 10,20\n\ \ \ 20,20\n\ \ \ 20,0\n=

#. name, q6, feedback
#: m06_qcm/task.yaml
!\nQue\ fait\ la\ m\u00e9thode\ ``ajout()``\ ?\n=

#. name, q7, name
#: m06_qcm/task.yaml
!toString()=

#. name, q7, header
#: m06_qcm/task.yaml
!\nComment\ \u00e9crirait-on\ une\ m\u00e9thode\ pour\ la\ classe\ ``Etudiant``\ de\ la\ question\ 5,\ telle\ que\ le\ code\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ Etudiant\ etud\ \=\ new\ Etudiant("John\ Doe",\ "987612");\n\ \ \ \ System.out.println(etud);\n\naffiche\ le\ texte\ suivant\u00a0\:\n\n\ \ \ \ ``John\ Doe\ (987612)\ non-bisseur``\n\n=

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ String\ s\ \=\ nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ non-bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ return\ s;\n\ \ \ \ \ \ \ }\n=

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ asString()\ {\n\ \ \ \ \ \ \ \ \ \ \ String\ s\ \=\ nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ non-bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ return\ s;\n\ \ \ \ \ \ \ }\n=

#. name, q7, feedback
#: m06_qcm/task.yaml
!\nLa\ m\u00e9thode\ doit\ s'appeler\ ``toString``\ pour\ pouvoir\ \u00eatre\ appel\u00e9e\ implicitement,\ par\ exemple\ dans\ ``System.out.println``.\n=

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ toString(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ s\ \=\ nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ non-bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ return\ s;\n\ \ \ \ \ \ \ }\n=

#. name, q7, feedback
#: m06_qcm/task.yaml
!\nLa\ m\u00e9thode\ doit\ avoir\ exactement\ la\ signature\ ``String\ toString()``\ pour\ pouvoir\ \u00eatre\ appel\u00e9e\ implicitement,\ par\ exemple\ dans\ ``System.out.println``.\n=

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ "\ bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ "\ non-bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n=

#. name, q7, feedback
#: m06_qcm/task.yaml
!\nSeul\ le\ premier\ ``return``\ ex\u00e9cut\u00e9\ sera\ pris\ en\ compte.\ \ R\u00e9visez\ les\ appels\ de\ m\u00e9thodes.\n=

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ System.out.println(nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("\ bisseur");\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("\ non-bisseur");\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n=

#. name, q7, feedback
#: m06_qcm/task.yaml
#, fuzzy
!\nLa\ m\u00e9thode\ ``toString()``\ doit\ retourner\ le\ string\ et\ non\ l'imprimer.\n=Your pop() method should returns null when the stack is empty.\n

#. name, q7, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ String\ s\ \=\ nom\ +\ "\ ("\ +\ matricule\ +\ ")";\n\ \ \ \ \ \ \ \ \ \ \ if\ (bisseur)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s\ \=\ s\ +\ "\ non-bisseur";\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n=

#. name, q7, feedback
#: m06_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ retourne\ rien...\n=

#. name, q8, name
#: m06_qcm/task.yaml
!\ TextIO=

#. name, q8, header
#: m06_qcm/task.yaml
!\nParmi\ les\ portions\ de\ programme\ suivantes,\ laquelle\ permet\ d'imprimer\ \u00e0\ la\ console\ le\ contenu\ du\ fichier\ ``README``\ ?\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ TextIO.readFile("README");\n\ \ \ while\ (\!TextIO.eof())\ {\n\ \ \ \ \ \ \ System.out.println(TextIO.getln());\n\ \ \ }\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ TextIO.readFile("README");\n\ \ \ while\ (true)\ {\n\ \ \ \ \ \ \ System.out.println(TextIO.getln());\n\ \ \ }\n=

#. name, q8, feedback
#: m06_qcm/task.yaml
!\nCette\ version\ produira\ une\ erreur\ \u00e0\ la\ fin\ du\ fichier.\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ while\ (\!TextIO.eof("README"))\ {\n\ \ \ \ \ \ \ System.out.println(TextIO.getln("README"));\n\ \ \ }\n=

#. name, q8, feedback
#: m06_qcm/task.yaml
!\nL'utilisation\ de\ ``eof()``\ et\ ``getln()``\ ne\ correspond\ pas\ \u00e0\ leur\ signature\ document\u00e9e\ dans\ l'API.\ \ Ce\ code\ donne\ donne\ une\ erreur\ de\ compilation.\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ TextIO.open("README");\n\ \ \ while\ (TextIO.hasNext())\ {\n\ \ \ \ \ \ \ System.out.println(TextIO.next());\n\ \ \ }\n=

#. name, q8, feedback
#: m06_qcm/task.yaml
!\nCes\ noms\ de\ m\u00e9thodes\ n'existent\ pas\ dans\ ``TextIO``.\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ TextIO.readFile("README");\n\ \ \ while\ (TextIO.eof())\ {\n\ \ \ \ \ \ \ System.out.println(TextIO.getWord());\n\ \ \ }\n=

#. name, q8, feedback
#: m06_qcm/task.yaml
!\nDeux\ erreurs\:\ un\ caract\u00e8re\ manquant\ (qui\ change\ tout)\ dans\ la\ condition\ du\ ``while``\ et\ l'utilisation\ inappropri\u00e9e\ de\ ``getWord()``.\n=

#. name, q8, text
#: m06_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ TextIO.readFile("README");\n\ \ \ String\ s\ \=\ TextIO.getln();\n\ \ \ while\ (\!TextIO.eof(s))\ {\n\ \ \ \ \ \ \ System.out.print(s);\n\ \ \ \ \ \ \ s\ \=\ TextIO.getln();\n\ \ \ }\n=

#. name, q8, feedback
#: m06_qcm/task.yaml
!\nCe\ n'est\ pas\ ainsi\ qu'on\ utilise\ ``TextIO.eof()``.\n=

#. context
#: m06dem1/task.yaml
!Maintenant\ que\ les\ objets\ sont\ une\ notion\ un\ peu\ plus\ famili\u00e8re,\ nous\ allons\ vous\ demander\ de\ travailler\ avec\ des\ classes\ en\ Java,\ qui\ ne\ sont\ maintenant\ plus\ de\ simple\ conteneurs\ \u00e0\ m\u00e9thodes\ ``static``.\n\nConsid\u00e9rez\ la\ classe\ ``Pair``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ class\ Pair{\n\ \ \ \ \ \ \ \ private\ int\ a;\ \ \ \ //\ le\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ private\ int\ b;\ \ \ \ //\ le\ second\ \u00e9l\u00e9ment\ de\ la\ paire\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ @pre\ \ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ @post\ \ \ \ cr\u00e9e\ une\ paire\ avec\ a\ et\ b\ non-initialis\u00e9s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Pair(){\n\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ cr\u00e9e\ une\ paire\ compos\u00e9e\ de\ x\ et\ y\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Pair(int\ x,\ int\ y){\n\ \ \ \ \ \ \ \ \ \ \ \ a\ \=\ x;\n\ \ \ \ \ \ \ \ \ \ \ \ b\ \=\ y;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ donne\ au\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\ la\ valeur\ nA\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ void\ setA(int\ nA){\n\ \ \ \ \ \ \ \ \ \ \ \ a\ \=\ nA;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ donne\ au\ second\ \u00e9l\u00e9ment\ de\ la\ paire\ la\ valeur\ nB\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ void\ setB(int\ nB){\n\ \ \ \ \ \ \ \ \ \ \ \ b\ \=\ nB;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ retourne\ le\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ int\ getA(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ a;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ retourne\ le\ second\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ int\ getB(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ b;\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ \ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ retourne\ une\ nouvelle\ instance\ de\ Pair\ dont\ les\ deux\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \u00e9l\u00e9ments\ sont\ les\ oppos\u00e9s\ de\ ceux\ de\ cette\ paire-ci.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ L'instance\ appelante\ reste\ inchang\u00e9e.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ Pair\ opposite(){\n\ \ \ \ \ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPrenez\ le\ temps\ d'analyser\ cette\ classe,\ puis,\ une\ fois\ que\ vous\ l'aurez\ bien\ comprise,\ impl\u00e9mentez\ le\ corps\ de\ la\ m\u00e9thode\ ``opposite``\ de\ la\ classe\ pair.\ Cette\ m\u00e9thode\ renvoie\ une\ nouvelle\ instance\ de\ la\ classe\ ``Pair``\ telle\ que\ ses\ variables\ d'instance,\ ``a``\ et\ ``b``,\ valent\ l'oppos\u00e9\ des\ variables\ ``a``\ et\ ``b``\ de\ l'instance\ qui\ y\ fait\ appel.\ Voici\ un\ exemple\ de\ l'utilisation\ de\ cette\ m\u00e9thode\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ Pair\ p,q;\n\ \ \ \ p\ \=\ new\ Pair();\n\ \ \ \ p.setA(10);\n\ \ \ \ p.setB(-2);\n\ \ \ \ q\ \=\ p.opposite();\n\ \ \ \ System.out.println(q.getA()\ +\ \ ",\ "\ +\ q.getB());\ \ \ \ //\ affiche\ "-10,\ 2"\n\n=

#. name
#: m06dem1/task.yaml
!Mission\ 6\ \:\ Question\ de\ d\u00e9marrage\ 1\ \:\ Pair.opposite()=

#. name, q1, name
#: m06dem1/task.yaml
!La\ m\u00e9thode\ opposite=

#. name, q1, header
#: m06dem1/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ opposite.\ V\u00e9rifiez\ bien\ les\ sp\u00e9cifications.\ Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ recopiez\ pas\ sa\ signature.=

#. context
#: m06dem2/task.yaml
!Consid\u00e9rez\ maintenant\ la\ classe\ ``OrderedPair``,\ qui\ prend\ comme\ variable\ d'instance\ un\ objet\ de\ type\ ``Pair``\ dont\ la\ classe\ se\ trouve\ dans\ la\ queston\ pr\u00e9c\u00e9dente.\ Voici\ la\ classe\ ``OrderedPair``\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ OrderedPair\ {\n\n\ \ \ \ \ \ \ \ private\ boolean\ ordered;\ \ /*\ vrai\ si\ p\ est\ ordonn\u00e9e\ */\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ /*\ p.getA()\ <\=\ p.getB()\ */\n\ \ \ \ \ \ \ \ private\ Pair\ p;\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ un\ paire\ ordonn\u00e9e\ (0,0)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ OrderedPair()\ {\n\ \ \ \ \ \ \ \ \ \ p\ \=\ new\ Pair(0,\ 0);\n\ \ \ \ \ \ \ \ \ \ ordered\ \=\ true;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ donne\ au\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\ la\ valeur\ nA\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setA(int\ nA)\ {\n\ \ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ donne\ au\ second\ \u00e9l\u00e9ment\ de\ la\ paire\ la\ valeur\ nB\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setB(int\ nB)\ {\n\ \ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ donne\ \u00e0\ la\ variable\ ordered\ la\ valeur\ nOrdered\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ \ public\ void\ setOrdered(boolean\ nOrdered){\n\ \ \ \ \ \ \ \ \ \ \ \ \ /*\ Pas\ donn\u00e9\ */\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ vrai\ si\ la\ paire\ est\ ordonn\u00e9e,\ faux\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ getOrdered()\ {\n\ \ \ \ \ \ \ \ \ \ return\ ordered;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getA()\ {\n\ \ \ \ \ \ \ \ \ \ return\ p.getA();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ second\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getB()\ {\n\ \ \ \ \ \ \ \ \ \ return\ p.getB();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nLe\ but\ de\ l'exercice\ est\ d'impl\u00e9menter\ les\ m\u00e9thodes\ ``setA()``\ et\ ``setB()``\ sans\ oublier\ de\ mettre\ \u00e0\ jour\ ``ordered``\ en\ fonction\ des\ nouvelles\ valeurs\ des\ nombres\ dans\ la\ paire.=

#. name
#: m06dem2/task.yaml
!Mission\ 6\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ OrderedPair=

#. name, q1, name
#: m06dem2/task.yaml
!setA()=

#. name, q1, header
#: m06dem2/task.yaml
!Impl\u00e9mentez\ le\ corps\ de\ ``setA()``.\ N'oubliez\ pas\ de\ mettre\ \u00e0\ jour\ ``ordered``.=

#. name, q2, name
#: m06dem2/task.yaml
!setB()=

#. name, q2, header
#: m06dem2/task.yaml
!Impl\u00e9mentez\ le\ corps\ de\ ``setB()``.\ N'oubliez\ pas\ de\ mettre\ \u00e0\ jour\ ``ordered``.=

#. context
#: m06dem3/task.yaml
!Un\ \u00e9tudiant\ a\ \u00e9crit\ la\ classe\ ``Drapeau``\ ci-dessous.\ Il\ aimerait\ y\ ajouter\ la\ m\u00e9thode\ ``same``\ permettant\ de\ savoir\ si\ deux\ objets\ ``Drapeau``\ sont\ dans\ le\ m\u00eame\ \u00e9tat,\ mais\ il\ ne\ sait\ pas\ bien\ comment\ s'y\ prendre\ et\ vous\ demande\ votre\ aide\ pour\ y\ arriver.\n\nVoici\ la\ classe\ ``Drapeau``\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ classe\ simple\ avec\ un\ objet\ contenant\ un\ booleen\n\ \ \ \ \ */\n\n\ \ \ \ public\ static\ class\ Drapeau\ {\n\ \ \ \ \ \ \ \ private\ boolean\ drapeau;\ //\ la\ valeur\ du\ drapeau\n\n\ \ \ \ \ \ \ \ //\ Constructeur\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ un\ objet\ de\ type\ Drapeau\ est\ cree\ et\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ represente\ le\ booleen\ passe\ en\ argument\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Drapeau(boolean\ b)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ drapeau\ \=\ b;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ drapeau\ vaut\ b\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ set(boolean\ b)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ drapeau\ \=\ b;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ valeur\ du\ drapeau\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ get()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ drapeau;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ \ \ \ @pre\ \ \ \ \ -\n\ \ \ \ \ \ \ \ \ *\ \ \ \ @post\ \ \ \ \ Retourne\ true\ si\ d.get()\ \=\=\ this.get().\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ Retourne\ false\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ same(Drapeau\ d){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nAidez\ cet\ \u00e9tudiant\ en\ d\u00e9tresse\ et\ impl\u00e9mentez\ la\ m\u00e9thode\ ``same``\ dont\ les\ sp\u00e9cifications\ sont\ fournies\ ci-dessus.\ Pensez\ \u00e0\ g\u00e9rer\ le\ cas\ o\u00f9\ ``d\ \=\=\ null``,\ car\ les\ pr\u00e9conditions\ ne\ font\ aucune\ supposition.=

#. name
#: m06dem3/task.yaml
!Mission\ 6\ \:\ Question\ de\ d\u00e9marrage\ 3\ \:\ Drapeau.same()=

#. name, q1, name
#: m06dem3/task.yaml
!La\ m\u00e9thode\ same()=

#. name, q1, header
#: m06dem3/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``public\ boolean\ same(Drapeau\ d)``=

#. context
#: m06dem4/task.yaml
!Depuis\ le\ d\u00e9but\ du\ cours,\ la\ librairie\ ``TextIO``\ (http\://math.hws.edu/eck/cs124/javanotes6/source/TextIO.java)\ vous\ permet\ de\ lire\ des\ messages\ sur\ l'entr\u00e9e\ standard.\ Cependant,\ ``TextIO``\ permet\ aussi\ de\ lire\ des\ fichiers.\ En\ analysant\ la\ librairie\ ``TextIO``,\ compl\u00e9tez\ les\ deux\ lignes\ incompl\u00e8tes\ de\ mani\u00e8re\ \u00e0\ lire\ compl\u00e8tement\ le\ fichier\ ``cotes.txt``\ qui\ contient\ les\ cotes\ de\ plusieurs\ personnes.\n\nVoici\ le\ code\ \u00e0\ compl\u00e9ter\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ lireCotes()\ {\n\ \ \ \ \ \ \ \ /*1*/\n\ \ \ \ \ \ \ \ while\ (/*2*/)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ String\ prenom\ \=\ TextIO.getWord();\n\ \ \ \ \ \ \ \ \ \ \ \ String\ nom\ \=\ TextIO.getWord();\n\ \ \ \ \ \ \ \ \ \ \ \ int\ cote\ \=\ TextIO.getInt();\n\ \ \ \ \ \ \ \ \ \ \ \ TextIO.getln();\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(nom\ +\ ",\ "\ +\ prenom\ +\ "\:\ "\ +\ cote);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ System.out.println("Le\ fichier\ a\ \u00e9t\u00e9\ lu\ enti\u00e8rement.");\n\ \ \ \ }=

#. name
#: m06dem4/task.yaml
!Mission\ 6\ \:\ Question\ de\ d\u00e9marrage\ 4\ \:\ Lecture\ de\ fichiers=

#. name, q1, name
#: m06dem4/task.yaml
!La\ ligne\ /*1*/=

#. name, q1, header
#: m06dem4/task.yaml
!\u00c9crivez\ ici\ la\ ligne\ 1\ permettant\ d'effectuer\ des\ op\u00e9rations\ sur\ le\ fichier\ "cotes.txt".=

#. name, q2, name
#: m06dem4/task.yaml
!La\ condition\ /*2*/=

#. name, q2, header
#: m06dem4/task.yaml
!\u00c9crivez\ ici\ la\ contition\ dans\ le\ while\ permettant\ \u00e0\ la\ boucle\ de\ s'arr\u00eater\ une\ fois\ le\ fichier\ cotes.txt\ enti\u00e8rement\ lu.\ Ne\ recopiez\ pas\ l'instruction\ while,\ \u00e9crivez\ juste\ la\ condition\ n\u00e9cessaire\ au\ bon\ fonctionnement\ du\ programme.=

#. context
#: m06real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 6.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ TestChanson.java\n-\ TestTemps.java\n-\ TextIO.java\n-\ Chanson.java\n-\ Temps.java\n-\ Programme.java\n-\ README.txt=

#. name
#: m06real/task.yaml
!Mission\ 6\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m06real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 6=

#. context
#: m07Q1/task.yaml
!On\ vous\ donne\ la\ classe\ Employe\ dont\ voici\ le\ corps\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Employe{\n\ \ \ \ private\ String\ nom\ ;\n\ \ \ \ private\ double\ salaire\ ;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ Constructeur\n\ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ Employe\ (\ String\ nom,\ double\ salaire){\n\ \ \ \ \ \ \ \ this.nom\ \=\ nom\ ;\n\ \ \ \ \ \ \ \ this.salaire\ \=\ salaire\ ;\n\ \ \ \ }\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ return\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ //Non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ deux\ employ\u00e9s\ qui\ ont\ le\ m\u00eame\ nom\ et\ le\ m\u00eame\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //A\ compl\u00e9ter\n\ \ \ \ }\n\ \ }=

#. name
#: m07Q1/task.yaml
!Mission\ 7\ \:\ Q*\ Employe\ -\ M\u00e9thode\ equals=

#. name, q1, name
#: m07Q1/task.yaml m07Q3/task.yaml
!M\u00e9thode\ equals=

#. name, q1, header
#: m07Q1/task.yaml m07Q3/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``equals``.=

#. context
#: m07Q10/task.yaml
!On\ vous\ donne\ la\ classe\ DeStats\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ DeStats\ extends\ De\ {\n\n\ \ \ \ \ \ \ \ private\ int\ lances;\n\ \ \ \ \ \ \ \ private\ int[]\ resultats;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ s\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ une\ instance\ de\ la\ classe\ DeStats\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ nom\ s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DeStats(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ tableau\ des\ r\u00e9sultats\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int[]\ getResultats()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 1\ <\=\ n\ <\=\ 6\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ fois\ que\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ donn\u00e9\ comme\ r\u00e9sultat\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ statistique(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.resultat[n-1];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ incr\u00e9mente\ le\ nombre\ de\ lanc\u00e9s\ et\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ fois\ qu'un\ chiffre\ est\ sorti.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ chiffre\ que\ le\ d\u00e9\ a\ donn\u00e9.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ lanc\u00e9s\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getLances()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.lances;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ description\ du\ d\u00e9\ sous\ forme\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d'un\ String.\ Le\ format\ retourn\u00e9\ est\ le\ nom\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d\u00e9\ suivi\ des\ statistique.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Par\ exemple,\ le\ d\u00e9\ avec\ le\ nom\ "D\u00e9",\ 10\ lanc\u00e9s\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ 10\ fois\ le\ 2\ aurait\ comme\ repr\u00e9sentation\ en\ String\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ "D\u00e9\ 10\ [0,\ 10,\ 0,\ 0,\ 0,\ 0]"\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ o\ sont\ deux\ DeStats\ identiques\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ De\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.util.Random;\n\n\ \ \ \ public\ class\ De\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ \ \ \ \ protected\ Random\ r;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ initilis\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ De(String\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Random\ getRandom()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n=

#. name
#: m07Q10/task.yaml
!Mission\ 7\ \:\ Q*\ DeStats\ -\ toString=

#. name, q1, name
#: m07Q10/task.yaml
!toString=

#. name, q1, header
#: m07Q10/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``toString``\ de\ la\ classe\ ``DeStats``.=

#. context
#: m07Q11/task.yaml
!On\ vous\ donne\ la\ classe\ DeStats\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ DeStats\ extends\ De\ {\n\n\ \ \ \ \ \ \ \ private\ int\ lances;\n\ \ \ \ \ \ \ \ private\ int[]\ resultats;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ s\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ une\ instance\ de\ la\ classe\ DeStats\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ nom\ s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DeStats(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ tableau\ des\ r\u00e9sultats\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int[]\ getResultats()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 1\ <\=\ n\ <\=\ 6\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ fois\ que\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ donn\u00e9\ comme\ r\u00e9sultat\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ statistique(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.resultat[n-1];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ incr\u00e9mente\ le\ nombre\ de\ lanc\u00e9s\ et\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ fois\ qu'un\ chiffre\ est\ sorti.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ chiffre\ que\ le\ d\u00e9\ a\ donn\u00e9.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ lanc\u00e9s\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getLances()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.lances;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ description\ du\ d\u00e9\ sous\ forme\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d'un\ String.\ Le\ format\ retourn\u00e9\ est\ le\ nom\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d\u00e9\ suivi\ des\ statistique\ sous\ forme\ de\ tableau\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ o\ sont\ deux\ DeStats\ identiques\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ De\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.util.Random;\n\n\ \ \ \ public\ class\ De\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ \ \ \ \ protected\ Random\ r;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ initilis\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ De(String\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Random\ getRandom()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n=

#. name
#: m07Q11/task.yaml
!Mission\ 7\ \:\ Q*\ DeStats\ -\ equals=

#. name, q1, name
#: m07Q11/task.yaml m07Q6/task.yaml
!equals=

#. name, q1, header
#: m07Q11/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``equals``\ de\ la\ classe\ ``DeStats``.=

#. context
#: m07Q2/task.yaml
!On\ vous\ donne\ la\ classe\ Employe\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Employe{\n\ \ \ \ private\ String\ nom\ ;\n\ \ \ \ private\ double\ salaire\ ;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ Constructeur\n\ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ Employe\ (\ String\ nom,\ double\ salaire){\n\ \ \ \ \ \ \ \ this.nom\ \=\ nom\ ;\n\ \ \ \ \ \ \ \ this.salaire\ \=\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ return\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ deux\ employ\u00e9s\ qui\ ont\ le\ m\u00eame\ nom\ et\ le\ m\u00eame\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ }=

#. name
#: m07Q2/task.yaml
!Mission\ 7\ \:\ Q*\ Employe\ -\ M\u00e9thode\ toString=

#. name, q1, name
#: m07Q2/task.yaml
!M\u00e9thode\ toString=

#. name, q1, header
#: m07Q2/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ toString.=

#. context
#: m07Q3/task.yaml
!On\ vous\ donne\ la\ classe\ De\ dont\ voici\ le\ corps\ \:\n\n..\ code-block\:\:\ java\n\n\ \ import\ java.util.Random;\n\n\ \ public\ class\ De{\n\ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ protected\ Random\ r\ ;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ *\ @post\ a\ cr\u00e9\u00e9\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n,\ a\ initilis\u00e9\n\ \ \ \ \ *\ \ \ \ \ \ \ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ */\n\ \ \ \ public\ De(String\ n){\n\ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ a\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ int\ lance(){\n\ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ Random\ getRandom(){\n\ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ n\!\=null\n\ \ \ \ \ *\ @post\ a\ modifi\u00e9\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ */\n\ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ r\!\=null\n\ \ \ \ \ *\ @post\ a\ modifi\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ */\n\ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ }\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ }\n\ \ }=

#. name
#: m07Q3/task.yaml
!Mission\ 7\ \:\ Q*\ D\u00e9\ -\ M\u00e9thode\ equals=

#. context
#: m07Q4/task.yaml
!On\ vous\ donne\ la\ classe\ Directeur\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Directeur\ extends\ Employe{\n\ \ \ \ private\ double\ prime;\ //\ en\ pourcents\ du\ salaire\n\n\ \ \ /*\n\ \ \ \ *\ Constructeur\n\ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0,\ 0\ <\=\ prime\ <\ 1\n\ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Directeur\n\ \ \ \ */\n\ \ \ \ public\ Directeur(String\ nom,\ double\ salaire,\ double\ prime){\n\ \ \ \ \ \ \ \ //a\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ la\ salaire\ du\ directeur.\ Ce\ salaire\ est\ (1+prime)*salaire\n\ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ }\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ identiques\n\ \ \ \ *\ \ \ \ \ \ (m\u00eame\ nom,\ m\u00eame\ salaire,\ m\u00eame\ prime)\n\ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ }\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ la\ prime\ de\ ce\ directeur\n\ \ \ \ */\n\ \ \ \ public\ double\ getPrime()\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\ \ }\n\nPour\ information,\ la\ classe\ Employ\u00e9\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Employe{\n\ \ \ \ private\ String\ nom\ ;\n\ \ \ \ private\ double\ salaire\ ;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ Constructeur\n\ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ Employe\ (String\ nom,\ double\ salaire){\n\ \ \ \ \ \ \ \ this.nom\ \=\ nom\ ;\n\ \ \ \ \ \ \ \ this.salaire\ \=\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ return\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ deux\ employ\u00e9s\n\ \ \ \ \ *\ \ \ \ \ \ \ qui\ ont\ le\ m\u00eame\ nom\ et\ le\ m\u00eame\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ }=

#. name
#: m07Q4/task.yaml
!Mission\ 7\ \:\ Q*\ Directeur\ -\ Constructeur=

#. name, q1, name
#: m07Q4/task.yaml m07Q7/task.yaml
!Constructeur=

#. name, q1, header
#: m07Q4/task.yaml
!Ecrivez\ le\ *contenu*\ du\ constructeur.=

#. context
#: m07Q5/task.yaml
!On\ vous\ donne\ la\ classe\ Directeur\ dont\ voici\ le\ corps\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Directeur\ extends\ Employe\ {\n\n\ \ \ \ \ \ \ \ private\ double\ prime;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ Constructeur\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0,\ 0\ <\=\ prime\ <\ 1\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Directeur\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Directeur(String\ nom,\ double\ salaire,\ double\ prime)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ salaire\ du\ directeur.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Ce\ salaire\ est\ (1+prime)*salaire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ a\ compl\u00e9ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ identiques\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ (m\u00eame\ nom,\ m\u00eame\ salaire,\ m\u00eame\ prime)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ prime\ de\ ce\ directeur\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ double\ getPrime()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ Employ\u00e9\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Employe\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\n\ \ \ \ \ \ \ \ private\ double\ salaire;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ Constructeur\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Employe(String\ nom,\ double\ salaire){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ nom;\n\ \ \ \ \ \ \ \ \ \ \ \ this.salaire\ \=\ salaire;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ salaire\ ;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ deux\ employ\u00e9s\ qui\ ont\ le\ m\u00eame\ nom\ et\ le\ m\u00eame\ salaire\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }=

#. name
#: m07Q5/task.yaml
!Mission\ 7\ \:\ Q*\ Directeur\ -\ getSalaire=

#. name, q1, name
#: m07Q5/task.yaml
!getSalaire=

#. name, q1, header
#: m07Q5/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``getSalaire``.=

#. context
#: m07Q6/task.yaml
!On\ vous\ donne\ la\ classe\ Directeur\ dont\ voici\ le\ corps\ \:\n\n..\ code-block\:\:\ java\n\n\ public\ class\ Directeur\ extends\ Employe\ {\n\ \ \ \ private\ double\ prime;\ //\ en\ pourcents\ du\ salaire\n\n\ \ \ /*\n\ \ \ \ *\ Constructeur\n\ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0,\ 0\ <\=\ prime\ <\ 1\n\ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Directeur\n\ \ \ \ */\n\n\ \ \ \ public\ Directeur(String\ nom,\ double\ salaire,\ double\ prime){\n\ \ \ \ \ \ \ \ //non\ fourni\n\ \ \ \ }\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ la\ salaire\ du\ directeur.\n\ \ \ \ *\ \ \ \ \ \ \ Ce\ salaire\ est\ (1+prime)*salaire\n\ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ //non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ identiques\n\ \ \ \ \ *\ \ \ \ \ \ \ (m\u00eame\ nom,\ m\u00eame\ salaire,\ m\u00eame\ prime)\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //a\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ prime\ de\ ce\ directeur\n\ \ \ \ \ */\n\ \ \ \ public\ double\ getPrime()\ {\n\ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ }\n\ \ }\n\nPour\ information,\ la\ classe\ Employ\u00e9\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Employe{\n\n\ \ \ \ private\ String\ nom;\n\ \ \ \ private\ double\ salaire;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ Constructeur\n\ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ Employe(String\ nom,\ double\ salaire){\n\ \ \ \ \ \ \ \ this.nom\ \=\ nom\ ;\n\ \ \ \ \ \ \ \ this.salaire\ \=\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ return\ salaire\ ;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ //Non\ fourni\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ sont\ deux\ employ\u00e9s\ qui\ ont\ le\ m\u00eame\ nom\ et\ le\ m\u00eame\ salaire\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ equals(Object\ other){\n\ \ \ \ \ \ \ \ //Non\ fourni\n\ \ \ \ }\n\ \ }=

#. name
#: m07Q6/task.yaml
!Mission\ 7\ \:\ Q*\ Directeur\ -\ Equals=

#. name, q1, header
#: m07Q6/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ equals.=

#. context
#: m07Q7/task.yaml
!On\ vous\ donne\ la\ classe\ DeStats\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ DeStats\ extends\ De\ {\n\n\ \ \ \ \ \ \ \ private\ int\ lances;\n\ \ \ \ \ \ \ \ private\ int[]\ resultats;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ s\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ une\ instance\ de\ la\ classe\ DeStats\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ nom\ s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DeStats(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ tableau\ des\ r\u00e9sultats\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int[]\ getResultats()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 1\ <\=\ n\ <\=\ 6\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ fois\ que\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ donn\u00e9\ comme\ r\u00e9sultat\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ statistique(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.resultat[n-1];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ incr\u00e9mente\ le\ nombre\ de\ lanc\u00e9s\ et\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ fois\ qu'un\ chiffre\ est\ sorti.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ chiffre\ que\ le\ d\u00e9\ a\ donn\u00e9.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ lanc\u00e9s\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getLances()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.lances;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ description\ du\ d\u00e9\ sous\ forme\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d'un\ String.\ Le\ format\ retourn\u00e9\ est\ le\ nom\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d\u00e9\ suivi\ des\ statistique\ sous\ forme\ de\ tableau\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ o\ sont\ deux\ DeStats\ identiques\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ De\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.util.Random;\n\n\ \ \ \ public\ class\ De\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ \ \ \ \ protected\ Random\ r;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ initilis\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ De(String\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Random\ getRandom()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n=

#. name
#: m07Q7/task.yaml
!Mission\ 7\ \:\ Q*\ DeStats\ -\ Constructeur=

#. name, q1, header
#: m07Q7/task.yaml
!Ecrivez\ le\ *contenu*\ du\ constructeur\ de\ la\ classe\ ``DeStats``.=

#. context
#: m07Q8/task.yaml
!On\ vous\ donne\ la\ classe\ DeStats\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ DeStats\ extends\ De\ {\n\n\ \ \ \ \ \ \ \ private\ int\ lances;\n\ \ \ \ \ \ \ \ private\ int[]\ resultats;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ s\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ une\ instance\ de\ la\ classe\ DeStats\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ nom\ s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DeStats(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ tableau\ des\ r\u00e9sultats\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int[]\ getResultats()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 1\ <\=\ n\ <\=\ 6\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ fois\ que\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ donn\u00e9\ comme\ r\u00e9sultat\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ statistique(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.resultat[n-1];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ incr\u00e9mente\ le\ nombre\ de\ lanc\u00e9s\ et\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ fois\ qu'un\ chiffre\ est\ sorti.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ chiffre\ que\ le\ d\u00e9\ a\ donn\u00e9.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ lanc\u00e9s\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getLances()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.lances;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ description\ du\ d\u00e9\ sous\ forme\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d'un\ String.\ Le\ format\ retourn\u00e9\ est\ le\ nom\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d\u00e9\ suivi\ des\ statistique\ sous\ forme\ de\ tableau\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ o\ sont\ deux\ DeStats\ identiques\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ De\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.util.Random;\n\n\ \ \ \ public\ class\ De\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ \ \ \ \ protected\ Random\ r;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ initilis\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ De(String\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Random\ getRandom()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n=

#. name
#: m07Q8/task.yaml
!Mission\ 7\ \:\ Q*\ DeStats\ -\ lances=

#. name, q1, name
#: m07Q8/task.yaml
!lance=

#. name, q1, header
#: m07Q8/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``lance``\ de\ la\ classe\ ``DeStats``.=

#. context
#: m07Q9/task.yaml
!On\ vous\ donne\ la\ classe\ DeStats\ dont\ voici\ le\ corps\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ DeStats\ extends\ De\ {\n\n\ \ \ \ \ \ \ \ private\ int\ lances;\n\ \ \ \ \ \ \ \ private\ int[]\ resultats;\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ s\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ une\ instance\ de\ la\ classe\ DeStats\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ nom\ s\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DeStats(String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ tableau\ des\ r\u00e9sultats\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int[]\ getResultats()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 1\ <\=\ n\ <\=\ 6\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ fois\ que\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ donn\u00e9\ comme\ r\u00e9sultat\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ statistique(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.resultat[n-1];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ incr\u00e9mente\ le\ nombre\ de\ lanc\u00e9s\ et\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ fois\ qu'un\ chiffre\ est\ sorti.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ chiffre\ que\ le\ d\u00e9\ a\ donn\u00e9.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ lanc\u00e9s\ du\ d\u00e9\ this\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getLances()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.lances;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ description\ du\ d\u00e9\ sous\ forme\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d'un\ String.\ Le\ format\ retourn\u00e9\ est\ le\ nom\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ d\u00e9\ suivi\ des\ statistique\ sous\ forme\ de\ tableau\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ o\ sont\ deux\ DeStats\ identiques\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nPour\ information,\ la\ classe\ De\ ressemble\ \u00e0\ ceci\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.util.Random;\n\n\ \ \ \ public\ class\ De\ {\n\ \ \ \ \ \ \ \ private\ String\ nom;\ //\ le\ nom\ de\ ce\ d\u00e9\ (par\ exemple\ sa\ couleur)\n\ \ \ \ \ \ \ \ protected\ Random\ r;\ //\ nombre\ al\u00e9atoire\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ l'instance\ de\ la\ classe\ De\ ayant\ comme\ nom\ la\ chaine\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ initilis\u00e9\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ De(String\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ nom\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ r\ \=\ new\ Random();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ lance\ le\ d\u00e9\ et\ retourne\ la\ valeur\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ lance()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r.nextInt(6)+1;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ utilis\u00e9\ par\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Random\ getRandom()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ du\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ nom\ du\ d\u00e9\ qui\ est\ maintenant\ n\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setNom(String\ n){\n\ \ \ \ \ \ \ \ \ \ \ \ this.nom\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ r\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ modifie\ le\ g\u00e9n\u00e9rateur\ de\ nombres\ al\u00e9atoires\ du\ d\u00e9\ qui\ est\ maintenant\ r\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setRandom(Random\ r){\n\ \ \ \ \ \ \ \ \ \ \ \ this.r\ \=\ r;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ une\ cha\u00eene\ de\ caract\u00e8res\ repr\u00e9sentant\ le\ d\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.nom;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ ssi\ other\ est\ un\ d\u00e9\ identique\ \u00e0\ celui-ci\ (m\u00eame\ nom\ et\ m\u00eame\ g\u00e9n\u00e9rateur\ al\u00e9atoire)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ /*\ Code\ non\ fourni\ */\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n=

#. name
#: m07Q9/task.yaml
!Mission\ 7\ \:\ Q*\ DeStats\ -\ resultats=

#. name, q1, name
#: m07Q9/task.yaml
!getResultats=

#. name, q1, header
#: m07Q9/task.yaml
!Ecrivez\ le\ *contenu*\ de\ la\ m\u00e9thode\ ``getResultat``\ de\ la\ classe\ ``DeStats``.=

#. context
#: m07_bf/task.yaml
!Dans\ le\ contexte\ de\ gestion\ d'une\ biblioth\u00e8que\ de\ m\u00e9dia,\ chacun\ des\ objets\ de\ cette\ biblioth\u00e8que\ est\ une\ instance\ de\ la\ classe\ Java\ ``Item``\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Item\ {\n\ \ \ \ \ \ \ private\ final\ String\ author,\ title;\n\ \ \ \ \ \ \ private\ final\ int\ serial;\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ Constructeur\n\ \ \ \ \ \ \ \ *\ @pre\ author\ \!\=\ null\ ,\ title\ \!\=\ null\ ,\ serial\ >\ 0\n\ \ \ \ \ \ \ \ *\ @post\ Une\ instance\ de\ la\ classe\ est\ cr\u00e9\u00e9e,\ et\ repr\u00e9sente\ un\ objet\ ayant\ comme\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ auteur\ author,\ comme\ titre\ title\ et\ comme\ num\u00e9ro\ de\ s\u00e9rie\ serial\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ Item\ (String\ author,\ String\ title,\ Integer\ serial)\ {\n\ \ \ \ \ \ \ \ \ \ this.author\ \=\ author;\n\ \ \ \ \ \ \ \ \ \ this.title\ \=\ title;\n\ \ \ \ \ \ \ \ \ \ this.serial\ \=\ serial;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ Retourne\ l'auteur\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getAuthor(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.author;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ Retourne\ le\ titre\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getAuthor(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.title;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ Retourne\ le\ num\u00e9ro\ de\ s\u00e9rie\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getAuthor(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.serial;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ La\ valeur\ renvoy\u00e9e\ contient\ une\ repr\u00e9sentation\ de\ cet\ objet\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ sous\ la\ forme\ \:\ [num\ s\u00e9rie]\ Auteur,\ Titre\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ String\ toString(){\n\ \ \ \ \ \ \ \ \ \ //\ \u00c0\ compl\u00e9ter\n\ \ \ \ \ \ \ }\n\ \ \ \ }\n\nVous\ devez\ tout\ d'abord\ compl\u00e9ter\ la\ m\u00e9thode\ ``toString``\ de\ la\ classe\ ``Item``.\n\nOn\ vous\ demande\ ensuite\ d'\u00e9crire\ une\ classe\ ``CD``\ permettant\ de\ repr\u00e9senter\ des\ CD.\ Un\ CD\ est\ lui\ m\u00eame\ un\ item\ de\ la\ biblioth\u00e8que\ avec\ une\ information\ suppl\u00e9mentaire\ \:\ la\ dur\u00e9e\ de\ l'album\ en\ secondes\ (cette\ dur\u00e9e\ doit\ \u00eatre\ stock\u00e9e\ dans\ un\ ``int``).\ On\ doit\ pouvoir\ cr\u00e9er\ un\ nouvel\ objet\ CD\ par\ exemple\ avec\ l'instruction\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ CD\ r\ \=\ new\ CD\ ("Radiohead",\ "The\ Bends",\ 2917);\ \ //\ auteur,\ titre\ et\ dur\u00e9e\ en\ secondes\n\net\ obtenir\ une\ repr\u00e9sentation\ textuelle\ de\ ce\ CD\ gr\u00e2ce\ \u00e0\ sa\ m\u00e9thode\ ``toString``,\ qui\ renvoie\ par\ exemple\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ [100001]\ Radiohead,\ The\ Bends\ (2917\ s)\n\nRemarquez\ que\ chaque\ ``Item``\ poss\u00e8de\ un\ serial\ qui\ est\ un\ num\u00e9ro\ de\ s\u00e9rie\ unique\ propre\ \u00e0\ l\u2019objet\ (pour\ pouvoir\ diff\u00e9rencier\ plusieurs\ exemplaires\ du\ m\u00eame\ livre\ par\ exemple).\ Il\ doit\ \u00eatre\ g\u00e9n\u00e9r\u00e9\ automatiquement\ et\ \u00eatre\ sup\u00e9rieur\ \u00e0\ 100000\ pour\ un\ CD.=

#. name
#: m07_bf/task.yaml
!Mission\ 7\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, header
#: m07_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``toString``\ de\ la\ classe\ ``Item``\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.=

#. name, q2, header
#: m07_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ classe\ ``CD``.\n\n=

#. context
#: m07_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 7.\ Extension\ et\ H\u00e9ritage\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ -\ |jn2.4|_\n\n\ \ \ \ -\ |jn2.4.4|_\n\n\ \ -\ |jn4.3|_\n\n\ \ \ \ -\ |jn4.3.3|_\n\n\ \ -\ |jn5.3|_\n\n\ \ \ \ -\ |jn5.3.3|_\n\n\ \ -\ |jn5.5|_\n\n\ \ \ \ -\ |jn5.5.1|_\n\ \ \ \ -\ |jn5.5.2|_\n\ \ \ \ -\ |jn5.5.3|_\n\ \ \ \ -\ |jn5.5.4|_\n\n\ \ -\ |jn5.6|_\n\n\ \ \ \ -\ |jn5.6.1|_\n\ \ \ \ -\ |jn5.6.2|_\n\ \ \ \ -\ |jn5.6.3|_\n\n\ \ -\ |jn5.7|_\n\n\ \ \ \ -\ |jn5.7.4|_\n\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn2.4\:\ http\://math.hws.edu/javanotes/c2/s4.html\n..\ |jn2.4|\ replace\:\:\ `2.4\ \:\ Text\ Input\ and\ Output`\n\n..\ _jn2.4.4\ \:\ http\://math.hws.edu/javanotes/c2/s4.html\#basics.4.4\n..\ |jn2.4.4|\ replace\:\:\ `2.4.4\ \:\ Formatted\ Output`\n\n..\ _jn4.3\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\n..\ |jn4.3|\ replace\:\:\ `4.3\ \:\ Parameters`\n\n..\ _jn4.3.3\ \:\ http\://math.hws.edu/javanotes/c4/s3.html\#subroutines.3.3\n..\ |jn4.3.3|\ replace\:\:\ `4.3.3\ \:\ Overloading`\n\n..\ _jn5.3\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\n..\ |jn5.3|\ replace\:\:\ `5.3\ \:\ Programming\ with\ Objects`\n\n..\ _jn5.3.3\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\#OOP.3.3\n..\ |jn5.3.3|\ replace\:\:\ `5.3.3\ \:\ The\ class\ "Object"`\n\n..\ _jn5.5\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\n..\ |jn5.5|\ replace\:\:\ `5.5\ \:\ Inheritance,\ Polymorphism,\ and\ Abstract\ Classes`\n\n..\ _jn5.5.1\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\#OOP.5.1\n..\ |jn5.5.1|\ replace\:\:\ `5.5.1\ \:\ Extending\ Existing\ Classes`\n\n..\ _jn5.5.2\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\#OOP.5.2\n..\ |jn5.5.2|\ replace\:\:\ `5.5.2\ \:\ Inheritance\ and\ Class\ Hierarchy`\n\n..\ _jn5.5.3\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\#OOP.5.3\n..\ |jn5.5.3|\ replace\:\:\ `5.5.3\ \:\ Example\:\ Vehicles`\n\n..\ _jn5.5.4\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\#OOP.5.4\n..\ |jn5.5.4|\ replace\:\:\ `5.5.4\ \:\ Polymorphism`\n\n..\ _jn5.6\ \:\ http\://math.hws.edu/javanotes/c5/s6.html\n..\ |jn5.6|\ replace\:\:\ `5.6\ \:\ this\ and\ super`\n\n..\ _jn5.6.1\ \:\ http\://math.hws.edu/javanotes/c5/s6.html\#OOP.6.1\n..\ |jn5.6.1|\ replace\:\:\ `5.6.1\ \:\ The\ Special\ Variable\ this`\n\n..\ _jn5.6.2\ \:\ http\://math.hws.edu/javanotes/c5/s6.html\#OOP.6.2\n..\ |jn5.6.2|\ replace\:\:\ `5.6.2\ \:\ The\ Special\ Variable\ super`\n\n..\ _jn5.6.3\ \:\ http\://math.hws.edu/javanotes/c5/s6.html\#OOP.6.3\n..\ |jn5.6.3|\ replace\:\:\ `5.6.3\ \:\ Constructors\ in\ Subclasses`\n\n..\ _jn5.7\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\n..\ |jn5.7|\ replace\:\:\ `5.7\ \:\ Interfaces,\ Nested\ Classes,\ and\ Other\ Details`\n\n..\ _jn5.7.4\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\#OOP.7.4\n..\ |jn5.7.4|\ replace\:\:\ `5.7.4\ \:\ Mixing\ Static\ and\ Non-static`\n=

#. name
#: m07_qcm/task.yaml
!Mission\ 7\:\ QCM=

#. name, q1, name
#: m07_qcm/task.yaml
!H\u00e9ritage\ \:\ vocabulaire=

#. name, q1, header
#: m07_qcm/task.yaml
!\nSi\ la\ classe\ ``C3``\ \u00e9tend\ la\ classe\ ``C2``,\ qui\ \u00e9tend\ elle-m\u00eame\ la\ classe\ ``C1``,\ quel\ groupe\ d'affirmations\ est\ correct\ ?\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C1``\ est\ une\ super-classe\ de\ ``C3``\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C1``\n-\ Toute\ instance\ de\ ``C3``\ est\ une\ instance\ de\ ``C1``\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C3``\ est\ une\ sous-classe\ de\ ``C2``\n-\ ``C2``\ est\ la\ classe-m\u00e8re\ de\ ``C3``\n-\ Toute\ instance\ de\ ``C2``\ est\ une\ instance\ de\ ``C1``\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C1``\ est\ une\ sous-classe\ de\ ``C3``\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C1``\n-\ Toute\ instance\ de\ ``C2``\ est\ une\ instance\ de\ ``C1``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\n``C1``\ n'est\ pas\ une\ sous-classe\ de\ ``C3``.\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C1``\ est\ une\ super-classe\ de\ ``C3``\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C3``\n-\ Toute\ instance\ de\ ``C3``\ est\ une\ instance\ de\ ``C1``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\n``C2``\ n'est\ pas\ une\ classe-fille\ de\ ``C3``.\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C1``\n-\ Toute\ instance\ de\ ``C1``\ est\ une\ instance\ de\ ``C3``\n-\ ``C3``\ est\ une\ sous-classe\ de\ ``C2``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\nToute\ instance\ de\ ``C1``\ n'est\ pas\ une\ instance\ de\ ``C3``.\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C1``\n-\ Toute\ instance\ de\ ``C3``\ est\ une\ instance\ de\ ``C1``\n-\ ``C1``\ est\ une\ sous-classe\ de\ ``C2``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\n``C1``\ n'est\ pas\ une\ sous-classe\ de\ ``C2``\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C1``\ est\ une\ super-classe\ de\ ``C3``\n-\ ``C2``\ est\ la\ classe-fille\ de\ ``C3``\n-\ Toute\ instance\ de\ ``C2``\ est\ une\ instance\ de\ ``C1``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\n``C2``\ n'est\ pas\ la\ classe-fille\ de\ ``C3``\n=

#. name, q1, text
#: m07_qcm/task.yaml
!\n\n-\ ``C2``\ est\ une\ classe-fille\ de\ ``C1``\n-\ ``C3``\ est\ une\ sous-classe\ de\ ``C2``\n-\ Toute\ instance\ de\ ``C2``\ est\ une\ instance\ de\ ``C3``\n=

#. name, q1, feedback
#: m07_qcm/task.yaml
!\nToute\ instance\ de\ ``C2``\ n'est\ pas\ une\ instance\ de\ ``C3``\n=

#. name, q2, name
#: m07_qcm/task.yaml
!Extension\ de\ classe=

#. name, q2, header
#: m07_qcm/task.yaml
!\nSoit\ la\ classe\ ``C1``\ d\u00e9finie\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C1\ {\n\ \ \ \ \ \ \ \ private\ String\ s;\n\ \ \ \ \ \ \ \ private\ int\ n;\n\ \ \ \ \ \ \ \ public\ C1(String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.s\ \=\ s;\n\ \ \ \ \ \ \ \ \ \ \ \ this.n\ \=\ n;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ n\ *\ n;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nLaquelle\ des\ d\u00e9finitions\ suivantes\ d\u00e9finit\ correctement\ une\ extension\ de\ ``C1``\ ?\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(s,\ n);\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ C1(s,\ n);\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ C2.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nIl\ faut\ utiliser\ ``super``\ pour\ r\u00e9f\u00e9rer\ \u00e0\ la\ classe-m\u00e8re\ et\ non\ ``C2``.\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(s,\ n);\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nLa\ d\u00e9claration\ ne\ mentionne\ pas\ que\ ``C2``\ \u00e9tend\ ``C1``.\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(s,\ n);\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ override\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nDans\ la\ signature\ de\ ``m``,\ le\ ``override``\ est\ incorrect\ et\ inutile\ (il\ existe\ une\ annotation\ ``@override``\ mais\ elle\ n'est\ pas\ indispensable).\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(s,\ n);\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ n1\ *\ n1\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nDans\ le\ corps\ de\ ``m``,\ la\ variable\ ``n``\ de\ ``C1``\ n'est\ pas\ accessible\ (``private``).\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ this.s\ \=\ s;\n\ \ \ \ \ \ \ \ \ \ \ this.n\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nDans\ le\ constructeur\ de\ ``C2``,\ il\ faut\ appeler\ le\ constructeur\ de\ ``C1``\ pour\ initialiser\ les\ variables\ de\ ``C1``.\n=

#. name, q2, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ private\ int\ n2;\n\ \ \ \ \ \ \ public\ C2\ (String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ this.n2\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ super(s,\ n);\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ m()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m()\ +\ n2\ *\ n2;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m07_qcm/task.yaml
!\nDans\ le\ constructeur,\ l'appel\ au\ constructeur\ de\ ``C1``\ doit\ venir\ en\ premier\ lieu.\n=

#. name, q3, name
#: m07_qcm/task.yaml
!Extension\ et\ types=

#. name, q3, header
#: m07_qcm/task.yaml
!\nSoit\ les\ classes\ ``C1``,\ ``C2``,\ ``C3``\ et\ ``C4``\ d\u00e9finies\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C1\ {\n\ \ \ \ \ \ \ \ public\ C1()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ \ public\ C2()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C3\ extends\ C2\ {\n\ \ \ \ \ \ \ \ public\ C3()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C4\ extends\ C2\ {\n\ \ \ \ \ \ \ \ public\ C4()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\nParmi\ les\ portions\ de\ code\ suivantes,\ laquelle\ est\ valide\ pour\ le\ compilateur\ Java\ ?\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ C2\ obj2\ \=\ new\ C3();\n\ \ \ C4\ obj4\ \=\ new\ C4();\n\ \ \ C1\ obj1\ \=\ obj3;\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C4\ obj4\ \=\ new\ C4();\n\ \ \ C2\ obj2\ \=\ obj4;\n\ \ \ C1\ obj1\ \=\ new\ C2();\n\ \ \ C3\ obj3\ \=\ null;\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C4\ obj4\ \=\ new\ C4();\n\ \ \ C3\ obj3\ \=\ new\ C2();\n\ \ \ C2\ obj2\ \=\ new\ C3();\n\ \ \ C1\ obj1\ \=\ obj3;\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C3\ obj3``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C2``.\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ C2\ obj2\ \=\ new\ C3();\n\ \ \ C1\ obj1\ \=\ obj3;\n\ \ \ C4\ obj4\ \=\ obj2;\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C4\ obj4``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C2``.\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C4\ obj4\ \=\ new\ C4();\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ C1\ obj1\ \=\ obj3;\n\ \ \ C2\ obj2\ \=\ obj1;\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C2\ obj2``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C1``\ (m\u00eame\ si\ l'objet\ qu'elle\ d\u00e9signe\ est\ en\ fait\ de\ type\ ``C3``).\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ null;\n\ \ \ C2\ obj2\ \=\ obj4;\n\ \ \ C4\ obj4\ \=\ obj3;\n\ \ \ C1\ obj1\ \=\ new\ C2();\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C4\ obj4``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C3``\ (m\u00eame\ si\ elle\ produit\ la\ r\u00e9f\u00e9rence\ ``null``).\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C4\ obj4\ \=\ new\ C4();\n\ \ \ C2\ obj2\ \=\ obj4;\n\ \ \ C3\ obj3\ \=\ new\ C1();\n\ \ \ C1\ obj1\ \=\ new\ C2();\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C3\ obj3``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C1``.\n=

#. name, q3, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ obj2\ \=\ new\ C3();\n\ \ \ C1\ obj1\ \=\ new\ C2();\n\ \ \ C3\ obj3\ \=\ obj2;\n\ \ \ C4\ obj4\ \=\ new\ C4();\n=

#. name, q3, feedback
#: m07_qcm/task.yaml
!\n``C3\ obj3``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C3``\ (m\u00eame\ si\ l'objet\ qu'elle\ d\u00e9signe\ est\ en\ fait\ de\ type\ ``C3``).\n=

#. name, q4, name
#: m07_qcm/task.yaml
!Conversions\ de\ type=

#. name, q4, header
#: m07_qcm/task.yaml
!\nSoit\ les\ classes\ ``C1``\ et\ ``C2``\ d\u00e9finies\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C1\ {\n\ \ \ \ \ \ \ \ public\ C1()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ \ public\ C2()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\nOn\ consid\u00e8re\ ensuite\ les\ instructions\ suivantes\n\n..\ code-block\:\:\ java\n\n\ \ \ \ C1\ obj1\ \=\ new\ C1();\n\ \ \ \ C2\ obj2\ \=\ new\ C2();\n\ \ \ \ C1\ obj3\ \=\ new\ C2();\n\n\ \ \ \ C2\ conv12\ \=\ obj1;\n\ \ \ \ C1\ conv21\ \=\ obj2;\n\ \ \ \ C2\ conv32\ \=\ obj3;\n\ \ \ \ C2\ cast12\ \=\ (C2)\ obj1;\n\ \ \ \ C1\ cast21\ \=\ (C1)\ obj2;\n\ \ \ \ C2\ cast32\ \=\ (C2)\ obj3;\n\nParmi\ ces\ instructions,\ certaines\ causent\ une\ erreur\ \u00e0\ le\ compilation\ ou\ \u00e0\ l'ex\u00e9cution.\ \ Parmi\ les\ propositions\ ci-dessous,\ laquelle\ identifie\ correctement\ ces\ erreurs\ ?\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\nLa\ variable\ ``obj3``\ est\ de\ type\ ``C1``\ \:\ erreur\ de\ compilation\ \u00e0\ la\ ligne\ 3.\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ OK\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\n``obj1``\ r\u00e9f\u00e8re\ \u00e0\ une\ instance\ de\ ``C1``\ \:\ erreur\ de\ type-cast\ \u00e0\ l'ex\u00e9cution\ \u00e0\ la\ ligne\ 4.\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\n``obj3``\ r\u00e9f\u00e8re\ bien\ \u00e0\ une\ instance\ de\ ``C2``\ \:\ pas\ d'erreur\ \u00e0\ la\ ligne\ 6.\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\nLa\ ligne\ 4\ est\ correcte\ du\ point\ de\ vue\ des\ types\ mais\ causera\ erreur\ de\ type-cast\ \u00e0\ l'ex\u00e9cution.\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ OK\ mais\ type-cast\ inutile\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\nLa\ variable\ ``obj2``\ est\ de\ type\ ``C2``\ qui\ est\ une\ sous-classe\ de\ ``C1``\ \:\ pas\ d'erreur\ \u00e0\ la\ ligne\ 2.\n=

#. name, q4, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ conv12\ \=\ obj1;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C1\ conv21\ \=\ obj2;\ \ \ \ \ \ \ //\ \=>\ OK\n\ \ \ C2\ conv32\ \=\ obj3;\ \ \ \ \ \ \ //\ \=>\ erreur\ \u00e0\ la\ compilation\n\ \ \ C2\ cast12\ \=\ (C2)\ obj1;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C1\ cast21\ \=\ (C1)\ obj2;\ \ //\ \=>\ erreur\ \u00e0\ l'ex\u00e9cution\n\ \ \ C2\ cast32\ \=\ (C2)\ obj3;\ \ //\ \=>\ OK\n=

#. name, q4, feedback
#: m07_qcm/task.yaml
!\n``obj2``\ r\u00e9f\u00e8re\ \u00e0\ une\ instance\ de\ ``C2``\ qui\ est\ bien\ une\ sous-classe\ de\ ``C1``\ \:\ pas\ d'erreur\ \u00e0\ la\ ligne\ 5.\n=

#. name, q5, name
#: m07_qcm/task.yaml
!Re-d\u00e9finition\ et\ surcharge=

#. name, q5, header
#: m07_qcm/task.yaml
!\n\nSoit\ les\ classes\ ``C1``\ et\ ``C2``\ d\u00e9finies\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C1\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ public\ int\ m1(String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\nParmi\ les\ d\u00e9finitions\ suivantes\ dans\ ``C2``,\ laquelle\ constitue\ une\ *re-d\u00e9finition*\ (overriding)\ correcte\ de\ la\ m\u00e9thode\ ``m1``\ de\ la\ classe\ ``C1``\ et\ non\ une\ *surcharge*\ (overloading)\ ?\n=

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ int\ m1(String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m1(s,\ n\ *\ 2)\ +\ 10;\n\ \ \ \ \ \ \ }\n=

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ int\ m1(String\ x,\ int\ i)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m1(x,\ i\ *\ 2)\ +\ 10;\n\ \ \ \ \ \ \ }\n=

#. name, q5, feedback
#: m07_qcm/task.yaml
!\nLes\ param\u00e8tres\ peuvent\ avoir\ un\ nom\ diff\u00e9rent,\ pour\ autant\ que\ types\ correspondent\ exactement.\n=

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ int\ m1(int\ n,\ String\ s)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m1(s,\ n\ *\ 2)\ +\ 10;\n\ \ \ \ \ \ \ }\n=

#. name, q5, feedback
#: m07_qcm/task.yaml
!\nLes\ param\u00e8tres\ doivent\ \u00eatre\ dans\ le\ m\u00eame\ ordre.\n=

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ double\ m1(String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m1(s,\ n\ *\ 2)\ +\ 10.0;\n\ \ \ \ \ \ \ }\n=

#. name, q5, feedback
#: m07_qcm/task.yaml
!\nLe\ type\ de\ r\u00e9sultat\ doit\ \u00eatre\ le\ m\u00eame.\n=

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ int\ m1(String\ s,\ int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super(s,\ n\ *\ 2)\ +\ 10;\n\ \ \ \ \ \ \ }\n=

#. name, q5, feedback
#: m07_qcm/task.yaml
#, fuzzy
!\nErreur\ de\ syntaxe\ \:\ utiliser\ ``super.m1``\ pour\ appeler\ la\ m\u00e9thode\ ``m1``\ de\ la\ classe-m\u00e8re.\n={0}\: Your code does not seem to call the lance() method from the parent class

#. name, q5, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ public\ int\ m1(String\ s,\ int\ n,\ int\ n2)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ super.m1(s,\ n\ *\ 2)\ +\ n2;\n\ \ \ \ \ \ \ }\n=

#. name, q5, feedback
#: m07_qcm/task.yaml
!\nIl\ faut\ conserver\ le\ m\u00eame\ nombre\ de\ param\u00e8tres.\n=

#. name, q6, name
#: m07_qcm/task.yaml
!Modificateurs\ de\ visibilit\u00e9=

#. name, q6, header
#: m07_qcm/task.yaml
!\nConsid\u00e9rez\ les\ classes\ ``C1``,\ ``C2``,\ ``C3``\ d\u00e9finies\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C1\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ public\ \ \ \ int\ publ()\ {\ /*\ ...\ */\ }\n\ \ \ \ \ \ \ \ protected\ int\ prot()\ {\ /*\ ...\ */\ }\n\ \ \ \ \ \ \ \ private\ \ \ int\ priv()\ {\ /*\ ...\ */\ }\n\ \ \ \ \ \ \ \ public\ int\ m1()\ {\ /*\ ...\ */\ }\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C2\ extends\ C1\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ public\ int\ m2()\ {\ /*\ ...\ */\ }\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C3\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ public\ int\ m3()\ {\ /*\ ...\ */\ }\n\ \ \ \ }\n\nParmi\ les\ groupes\ d'affirmation\ suivants,\ lequel\ est\ correct\ ?\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``prot``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``priv``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``prot``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``prot``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, feedback
#: m07_qcm/task.yaml
!\n``publ``\ a\ la\ visibilit\u00e9\ ``public``,\ elle\ peut\ \u00eatre\ appel\u00e9e\ partout.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``prot``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, feedback
#: m07_qcm/task.yaml
!\n``prot``\ a\ la\ visibilit\u00e9\ ``protected``,\ elle\ peut\ \u00eatre\ appel\u00e9e\ dans\ la\ classe\ ``C2``\ qui\ \u00e9tend\ ``C1``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``prot``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n=

#. name, q6, feedback
#: m07_qcm/task.yaml
!\n``priv``\ a\ la\ visibilit\u00e9\ ``private``,\ elle\ peut\ \u00eatre\ appel\u00e9e\ uniquement\ dans\ sa\ propre\ classe\ ``C1``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``prot``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``publ``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``prot``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``priv``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, feedback
#: m07_qcm/task.yaml
!\n``prot``\ a\ la\ visibilit\u00e9\ ``protected``,\ elle\ ne\ peut\ pas\ \u00eatre\ appel\u00e9e\ dans\ ``C3``\ qui\ n'\u00e9tend\ pas\ ``C1``.\n=

#. name, q6, text
#: m07_qcm/task.yaml
!\n\n-\ ``publ``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m3``.\n-\ ``prot``\ peut\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m2``.\n-\ ``priv``\ NE\ peut\ PAS\ \u00eatre\ appel\u00e9e\ dans\ le\ corps\ de\ ``m1``.\n=

#. name, q6, feedback
#: m07_qcm/task.yaml
!\n``priv``\ peut\ toujours\ \u00eatre\ appel\u00e9e\ dans\ la\ classe\ o\u00f9\ elle\ est\ d\u00e9finie.\n=

#. name, q7, name
#: m07_qcm/task.yaml
!Variables\ et\ m\u00e9thodes\ de\ classe=

#. name, q7, header
#: m07_qcm/task.yaml
!\nOn\ consid\u00e8re\ le\ code\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C\ {\n\ \ \ \ \ \ \ \ private\ static\ int\ svar;\n\ \ \ \ \ \ \ \ private\ int\ var;\n\n\ \ \ \ \ \ \ \ public\ void\ m1()\ {\ var\ \=\ var\ +\ 1;\ }\n\ \ \ \ \ \ \ \ public\ void\ m2()\ {\ svar\ \=\ svar\ +\ 1;\ }\n\ \ \ \ \ \ \ \ public\ static\ void\ m3()\ {\ var\ \=\ var\ +\ 1;\ }\n\ \ \ \ \ \ \ \ public\ static\ void\ m4()\ {\ svar\ \=\ svar\ +\ 1;\ }\n\ \ \ \ }\n\nParmi\ ces\ d\u00e9finitions\ de\ m\u00e9thode,\ lesquelles\ produisent\ une\ erreur\ de\ compilation\ ?\n=

#. name, q7, text
#: m07_qcm/task.yaml
!La\ m\u00e9thode\ ``m3``\n=

#. name, q7, feedback
#: m07_qcm/task.yaml
!\nUne\ m\u00e9thode\ de\ classe\ (``static``)\ ne\ peut\ pas\ acc\u00e9der\ \u00e0\ la\ variable\ d'instance\ ``var``.\n=

#. name, q7, text
#: m07_qcm/task.yaml
!Les\ m\u00e9thodes\ ``m2``\ et\ ``m3``\n=

#. name, q7, feedback
#: m07_qcm/task.yaml
!\n``m2``\ peut\ parfaitement\ acc\u00e9der\ \u00e0\ la\ variable\ de\ classe\ ``svar``.\n=

#. name, q7, text
#: m07_qcm/task.yaml
!Les\ m\u00e9thodes\ ``m3``\ et\ ``m4``\n=

#. name, q7, feedback
#: m07_qcm/task.yaml
!\n``m4``\ est\ parfaitement\ valide.\n=

#. name, q7, text
#: m07_qcm/task.yaml
!La\ m\u00e9thode\ ``m2``\n=

#. name, q7, text
#: m07_qcm/task.yaml
!La\ m\u00e9thode\ ``m4``\n=

#. name, q7, text
#: m07_qcm/task.yaml
!Aucune\n=

#. name, q7, feedback
#: m07_qcm/task.yaml
!\nLa\ m\u00e9thode\ de\ classe\ (``static``)\ ``m3``\ ne\ peut\ pas\ acc\u00e9der\ \u00e0\ la\ variable\ d'instance\ ``var``.\n=

#. name, q8, name
#: m07_qcm/task.yaml
!Variables\ de\ classe\ et\ d'instance=

#. name, q8, header
#: m07_qcm/task.yaml
!\nOn\ consid\u00e8re\ la\ classe\ ``C``\ suivante\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ C\ {\n\ \ \ \ \ \ \ \ private\ static\ int\ svar\ \=\ 0;\n\ \ \ \ \ \ \ \ private\ int\ var;\n\n\ \ \ \ \ \ \ \ public\ C()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ var\ \=\ 0;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ void\ m1()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ var\ \=\ var\ +\ 1;\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(var);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ void\ m2()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ svar\ \=\ svar\ +\ 10;\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(svar);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nOn\ ex\u00e9cute\ les\ instructions\ suivantes\n\n..\ code-block\:\:\ java\n\n\ \ \ \ C\ c1\ \=\ new\ C();\n\ \ \ \ c1.m1();\n\ \ \ \ c1.m2();\n\ \ \ \ C\ c2\ \=\ new\ C();\n\ \ \ \ c2.m1();\n\ \ \ \ c2.m2();\n\nQuel\ est\ le\ r\u00e9sultat\ affich\u00e9\ ?\n=

#. name, q8, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 1\n\ \ \ 10\n\ \ \ 1\n\ \ \ 20\n=

#. name, q8, feedback
#: m07_qcm/task.yaml
!\n``m1``\ affecte\ des\ variables\ d'instance\ distinctes\ de\ ``c1``\ et\ ``c2``\ tandis\ que\ ``m2``\ affecte\ une\ variable\ de\ classe\ commune.\n=

#. name, q8, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 1\n\ \ \ 10\n\ \ \ 1\n\ \ \ 10\n=

#. name, q8, feedback
#: m07_qcm/task.yaml
!\n``m2``\ affecte\ une\ variable\ de\ classe\ commune.\n=

#. name, q8, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 1\n\ \ \ 10\n\ \ \ 2\n\ \ \ 20\n=

#. name, q8, feedback
#: m07_qcm/task.yaml
!\n``m1``\ affecte\ des\ variables\ d'instance\ distinctes\ de\ ``c1``\ et\ ``c2``.\n=

#. name, q8, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 1\n\ \ \ 11\n\ \ \ 12\n\ \ \ 22\n=

#. name, q8, feedback
#: m07_qcm/task.yaml
!\n``m1``\ et\ ``m2``\ affectent\ des\ variables\ diff\u00e9rentes\ ``var``\ et\ ``svar``\n=

#. name, q8, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ 1\n\ \ \ 2\n\ \ \ 1\n\ \ \ 2\n=

#. name, q8, feedback
#: m07_qcm/task.yaml
!\nAttention,\ on\ appelle\ deux\ m\u00e9thodes\ diff\u00e9rentes\ ``m1``\ et\ ``m2``.\n=

#. name, q9, name
#: m07_qcm/task.yaml
!La\ m\u00e9thode\ equals=

#. name, q9, header
#: m07_qcm/task.yaml
!\nSoit\ la\ classe\ ``Point``\ d\u00e9finie\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ class\ Point\ {\n\ \ \ \ \ \ \ \ private\ int\ x;\n\ \ \ \ \ \ \ \ private\ int\ y;\n\ \ \ \ \ \ \ \ public\ C1(int\ x,\ int\ y)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.x\ \=\ x;\n\ \ \ \ \ \ \ \ \ \ \ \ this.y\ \=\ y;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\nDans\ cette\ classe,\ laquelle\ des\ d\u00e9finitions\ suivantes\ re-d\u00e9finirait\ correctement\ la\ m\u00e9thode\ ``equals``\ de\ la\ classe\ ``Object``\ ?\n=

#. name, q9, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ if\ (other\ \!\=\ null\ &&\ other\ instanceof\ Point)\ {\n\ \ \ \ \ \ \ \ \ \ \ Point\ p\ \=\ (Point)\ other;\n\ \ \ \ \ \ \ \ \ \ \ return\ ((this.x\ \=\=\ p.x)\ &&\ (this.y\ \=\=\ p.y));\n\ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q9, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ if\ (other\ \!\=\ null\ &&\ other\ instanceof\ Point)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ ((this.x\ \=\=\ other.x)\ &&\ (this.y\ \=\=\ other.y));\n\ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q9, feedback
#: m07_qcm/task.yaml
!\n``other``\ est\ de\ type\ ``Object``,\ ``other.x``\ n'est\ pas\ correct.\n=

#. name, q9, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ if\ (other\ instanceof\ Point)\ {\n\ \ \ \ \ \ \ \ \ \ \ Point\ p\ \=\ (Point)\ other;\n\ \ \ \ \ \ \ \ \ \ \ return\ ((this.x\ \=\=\ p.x)\ &&\ (this.y\ \=\=\ p.y));\n\ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q9, feedback
#: m07_qcm/task.yaml
!\n``other``\ pourrait\ \u00eatre\ ``null``.\n=

#. name, q9, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ boolean\ equals(Point\ other)\ {\n\ \ \ \ \ \ \ return\ ((this.x\ \=\=\ other.x)\ &&\ (this.y\ \=\=\ other.y));\n\ \ \ }\n=

#. name, q9, feedback
#: m07_qcm/task.yaml
!\nCeci\ fonctionne\ mais\ ne\ correspond\ pas\ \u00e0\ la\ m\u00e9thode\ ``equals``\ de\ ``Object``.\ \ Le\ param\u00e8tre\ doit\ \u00eatre\ de\ type\ ``Object``.\n=

#. name, q9, text
#: m07_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ Point\ p\ \=\ (Point)\ other;\n\ \ \ \ \ \ \ return\ ((this.x\ \=\=\ p.x)\ &&\ (this.y\ \=\=\ p.y));\n\ \ \ }\n=

#. name, q9, feedback
#: m07_qcm/task.yaml
!\nCeci\ produira\ une\ erreur\ \u00e0\ l'ex\u00e9cution\ si\ ``other``\ est\ ``null``\ ou\ n'est\ pas\ de\ type\ ``Point``.\n=

#. author
#: m07dem1/task.yaml m07dem2/task.yaml
!Alexandre\ Dubray=

#. context
#: m07dem1/task.yaml
!Consid\u00e9rez\ la\ classe\ ``Pair``\ suivante\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ paire\ d'entiers\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Pair\ {\n\ \ \ \ \ \ \ \ private\ int\ a;\ //\ le\ premier\ \u00e9l\u00e9ment\ de\ la\ paire\n\ \ \ \ \ \ \ \ private\ int\ b;\ //\ le\ second\ \u00e9l\u00e9ment\ de\ la\ paire\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ cr\u00e9e\ un\ paire\ compos\u00e9e\ de\ x\ et\ y\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Pair(int\ x,\ int\ y)\ {\n\ \ \ \ \ \ \ \ \ \ a\ \=\ x;\n\ \ \ \ \ \ \ \ \ \ b\ \=\ y;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ RESTE\ NON\ FOURNI\n\ \ \ \ }\n\nD\u00e9finissez\ une\ m\u00e9thode\ ``equals``\ pour\ cette\ classe,\ **qui\ re-d\u00e9finit\ celle\ de\ la\ classe**\ Object_\ telle\ que\ deux\ paires\ sont\ \u00e9gales\ si\ leur\ deux\ composantes\ sont\ \u00e9gales.\n\n..\ _Object\:\ http\://docs.oracle.com/javase/7/docs/api/java/lang/Object.html\n\n=

#. name
#: m07dem1/task.yaml
!Mission\ 7\ \:\ Question\ de\ D\u00e9marrage\ 1\ \:\ Paire\ d'entiers=

#. name, q1, header
#: m07dem1/task.yaml
!Ecrivez\ ici\ **la\ signature\ et\ le\ corps**\ de\ la\ m\u00e9thode\ ``equals``.=

#. context
#: m07dem2/task.yaml
!\ Compl\u00e9tez\ la\ classe\ ``Ticket``\ ci-dessous\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ \ /**\n\ \ \ \ \ *\ Un\ ticket\ de\ parking\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Ticket\ {\n\n\ \ \ \ \ \ \ \ //\ A\ COMPLETER\ (1)\n\ \ \ \ \ \ \ \ private\ int\ numero;\ \ //\ num\u00e9ro\ du\ ticket\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Cr\u00e9e\ un\ ticket\ avec\ un\ nouveau\ num\u00e9ro.\ Les\ num\u00e9ros\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ sont\ attribu\u00e9s\ s\u00e9quentiellement\ \u00e0\ partir\ de\ 1.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Ticket()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ COMPLETER\ (2)\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ numero\ de\ billet\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getNumero()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ numero;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }=

#. name
#: m07dem2/task.yaml
!Mission\ 7\ \:\ Question\ de\ D\u00e9marrage\ 2\ \:\ Tickets\ de\ Parking=

#. name, q1, header
#: m07dem2/task.yaml
!Compl\u00e9tez\ le\ fragment\ de\ code\ **(1)**\ ici.=

#. name, q2, header
#: m07dem2/task.yaml
!Compl\u00e9tez\ le\ fragment\ de\ code\ **(2)**\ ici.=

#. author
#: m07real/task.yaml m09real/task.yaml m11real/task.yaml
!Fran\u00e7ois\ MICHEL,\ Bastien\ BODART=

#. context
#: m07real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 7.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ Article.java\n-\ ArticlePiece.java\n-\ ArticleReparation.java\n-\ Facture.java\n-\ Piece.java\n-\ TestFacture.java\n-\ TestFactureInitial.java\n-\ README.txt=

#. name
#: m07real/task.yaml
!Mission\ 7\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m07real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 7=

#. context
#: m08Q1/task.yaml
!On\ vous\ donne\ l'interface\ ``MyString``\ suivante\:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ MyString\ {\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ longueur\ de\ la\ cha\u00eene\ de\ caract\u00e8re\n\ \ \ \ \ */\n\ \ \ \ public\ int\ length();\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 0<\=i<this.length()\n\ \ \ \ \ *\ @post\ retourne\ le\ caract\u00e8re\ \u00e0\ l'indice\ i\ de\ this\n\ \ \ \ \ */\n\ \ \ \ public\ char\ charAt(int\ i);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\!\=null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ chaine\ de\ carat\u00e8res\ s\ est\ comprise\ dans\ la\ chaine\ this,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ contains(MyString\ s);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ chaine\ de\ caract\u00e8res\ qui\ est\ la\ concat\u00e9nation\ entre\ this\ et\ le\ caract\u00e8re\ c\n\ \ \ \ \ */\n\ \ \ \ public\ MyString\ concat(char\ c);\n\ \ }\n\nAinsi\ que\ la\ classe\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ StringTab\ implements\ MyString\ {\n\ \ \ \ private\ char[]\ s;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ construit\ une\ instance\ de\ la\ classe\ StringTab\n\ \ \ \ \ */\n\ \ \ \ public\ StringTab(char\ c)\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ \ \ \ //\ Constructeur\ 1\n\ \ \ \ }\n\n\ \ \ \ public\ StringTab(char[]\ c)\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ \ \ \ //\ Constructeur\ 2\n\ \ \ \ }\n\n\ \ \ \ public\ MyString\ concat(char\ c){\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ public\ boolean\ contains(MyString\ s)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ }=

#. name
#: m08Q1/task.yaml
!Mission\ 8\ \:\ Q*\ MyString\ -\ Constructeur=

#. name, q1, name
#: m08Q1/task.yaml m08Q4/task.yaml
!Premier\ constrcuteur=

#. name, q1, header
#. name, q2, header
#: m08Q1/task.yaml
!Ecrivez\ le\ constructeur=

#. name, q2, name
#: m08Q1/task.yaml m08Q4/task.yaml
!Deuxi\u00e8me\ constrcuteur=

#. name, q3, name
#. name, q1, name
#: m08Q1/task.yaml m08Q4/task.yaml m08Q5/task.yaml m08Q6/task.yaml
#: m08Q7/task.yaml
!Compl\u00e9tez\ votre\ classe=

#. name, q3, header
#. name, q1, header
#: m08Q1/task.yaml m08Q4/task.yaml m08Q5/task.yaml m08Q6/task.yaml
#: m08Q7/task.yaml
!Ecrivez\ ici\ les\ m\u00e9thodes\ qui\ pourraient\ manquer=

#. context
#: m08Q2/task.yaml
!On\ vous\ donne\ l'interface\ ``MyString``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ MyString\ {\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ longueur\ de\ la\ cha\u00eene\ de\ caract\u00e8re\n\ \ \ \ \ */\n\ \ \ \ public\ int\ length();\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 0<\=i<this.length()\n\ \ \ \ \ *\ @post\ retourne\ le\ caract\u00e8re\ \u00e0\ l'indice\ i\ de\ this\n\ \ \ \ \ */\n\ \ \ \ public\ char\ charAt(int\ i);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ chaine\ de\ carat\u00e8res\ s\ est\ comprise\ dans\ la\ chaine\ this,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ contains(MyString\ s);\n\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ chaine\ de\ caract\u00e8res\ qui\ est\ la\ concat\u00e9nation\ entre\ this\ et\ le\ caract\u00e8re\ c\n\ \ \ \ \ */\n\ \ \ \ \ public\ MyString\ concat(char\ c);\n\ \ }\n\nAinsi\ que\ la\ classe\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ StringTab\ implements\ MyString\ {\n\ \ \ \ private\ char[]\ s;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ construit\ une\ instance\ de\ la\ classe\ StringTab\n\ \ \ \ \ */\n\ \ \ \ public\ StringTab(char\ c)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ public\ StringTab(char[]\ c)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ //Partie\ de\ code\ non\ fournie\n\n\ \ \ \ public\ MyString\ concat(char\ c)\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ }\n\ \ \ \ public\ boolean\ contains(MyString\ s)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ }=

#. name
#: m08Q2/task.yaml
!Mission\ 8\ \:\ Q*\ MyString\ -\ Concat=

#. name, q1, name
#: m08Q2/task.yaml
!M\u00e9thode\ Concat=

#. name, q1, header
#: m08Q2/task.yaml
!Ecrivez\ ici\ le\ contenu\ de\ la\ m\u00e9thode=

#. context
#: m08Q3/task.yaml
!On\ vous\ donne\ l'interface\ ``MyString``\ suivante\:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ MyString\ {\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ longueur\ de\ la\ cha\u00eene\ de\ caract\u00e8re\n\ \ \ \ \ */\n\ \ \ \ public\ int\ length();\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ 0<\=i<this.length()\n\ \ \ \ \ *\ @post\ retourne\ le\ caract\u00e8re\ \u00e0\ l'indice\ i\ de\ this\n\ \ \ \ \ */\n\ \ \ \ public\ char\ charAt(int\ i);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ s\ \!\=\ null\n\ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ chaine\ de\ carat\u00e8res\ s\ est\ comprise\ dans\ la\ chaine\ this,\ false\ sinon\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ contains(MyString\ s);\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ chaine\ de\ caract\u00e8res\ qui\ est\ la\ concat\u00e9nation\ entre\ this\ et\ le\ caract\u00e8re\ c\n\ \ \ \ \ */\n\ \ \ \ public\ MyString\ concat(char\ c);\n\ \ }\n\nAinsi\ que\ la\ classe\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ StringTab\ implements\ MyString\ {\n\ \ \ \ private\ char[]\ s;\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ construit\ une\ instance\ de\ la\ classe\ StringTab\n\ \ \ \ \ */\n\ \ \ \ public\ StringTab(char\ c)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ public\ StringTab(char[]\ c)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ //Partie\ de\ code\ non\ fournie\n\n\ \ \ \ public\ MyString\ concat(char\ c)\ {\n\ \ \ \ \ \ \ \ //\ Non\ fourni\n\ \ \ \ }\n\ \ \ \ public\ boolean\ contains(MyString\ s)\ {\n\ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ }\n\ \ }=

#. name
#: m08Q3/task.yaml
!Mission\ 8\ \:\ Q*\ MyString\ -\ Contains=

#. name, q1, name
#: m08Q3/task.yaml
!M\u00e9thode\ Contains=

#. name, q1, header
#: m08Q3/task.yaml
#, fuzzy
!Ecrivez\ ici\ le\ contenu\ de\ la\ m\u00e9thode\ ``contains``\ de\ la\ classe\ ``StringTab``=It is forbidden to use the contains() method of the String class, even in comments

#. context
#: m08Q4/task.yaml
!On\ vous\ donne\ linterface\ ``Byte``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ Byte\ {\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ On\ retourne\ la\ valeur\ du\ bit\ \u00e0\ la\ position\ i\n\ \ \ \ */\n\ \ \ \ public\ int\ getBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ \ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ le\ bit\ \u00e0\ la\ position\ i\ est\ mis\ \u00e0\ 1\n\ \ \ \ */\n\ \ \ \ public\ void\ setBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ \ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ le\ bit\ \u00e0\ la\ position\ i\ est\ remis\ \u00e0\ 0\n\ \ \ \ */\n\ \ \ \ public\ void\ resetBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ La\ cha\u00eene\ est\ d\u00e9call\u00e9e\ d'un\ bit\ vers\ la\ droite\n\ \ \ \ *\ (attention\ \u00e0\ la\ structure\ interne)\n\ \ \ \ *\ Le\ bit\ de\ poids\ faible\ est\ mis\ \u00e0\ 0.\n\ \ \ \ */\n\ \ \ \ public\ void\ shiftLeft();\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ La\ cha\u00eene\ est\ d\u00e9call\u00e9e\ d'un\ bit\ vers\ la\ gauche\n\ \ \ \ *\ (attention\ \u00e0\ la\ structure\ interne)\n\ \ \ \ *\ Le\ bit\ de\ poids\ fort\ prend\ la\ valeur\ du\ bit\ de\ poids\ faible\ avant\ rotation\n\ \ \ \ */\n\ \ \ \ public\ void\ rotateRight();\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ On\ effectue\ un\ ET\ logique\ entre\ chaque\ bit\ de\ b\ et\ b1\n\ \ \ \ */\n\ \ \ \ public\ Byte\ and(Byte\ b1);\n\ \ }\n\nAinsi\ que\ la\ classe\ (\u00e0\ compl\u00e9ter)\ ``ByteString``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ ByteString\ implements\ Byte\ {\n\ \ \ private\ StringBuilder\ b;\ //\ contient\ les\ caract\u00e8res\ repr\u00e9sentant\ le\ byte\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ a\ construit\ un\ byte\ dont\ les\ huit\ bits\ sont\ mis\ \u00e0\ z\u00e9ro\n\ \ \ \ *\ \ \ \ \ \ \ le\ bit\ de\ poids\ fort\ est\ en\ position\ 7\ dans\ le\ StringBuilder\n\ \ \ \ */\n\ \ \ public\ ByteString()\ {\n\ \ \ \ \ \ \ //A\ COMPLETER\n\ \ \ }\n\n\ \ \ /*\n\ \ \ \ *\ @pre\ s.length\=\=8,\ s\ ne\ contient\ que\ des\ caract\u00e8res\ 0\ et\ 1\n\ \ \ \ *\ @post\ a\ construit\ un\ byte\ dont\ la\ repr\u00e9sentation\ naturelle\ en\ String\ est\ s\n\ \ \ \ *\ \ \ \ \ \ \ La\ repr\u00e9sentation\ naturelle\ d'un\ byte\ sous\ la\ forme\ d'un\ String\ est\n\ \ \ \ *\ \ \ \ \ \ \ le\ bit\ de\ poids\ fort\ \u00e0\ gauche.\ Dans\ le\ StringBuilder,\ on\ stocke\n\ \ \ \ *\ \ \ \ \ \ \ le\ byte\ de\ fa\u00e7on\ \u00e0\ avoir\ le\ bit\ de\ poids\ faible\ (resp.\ fort)\n\ \ \ \ *\ \ \ \ \ \ \ en\ position\ 0\ (resp.\ 7).\n\ \ \ \ *\n\ \ \ \ *\ \ \ \ \ \ \ Exemple\n\ \ \ \ *\n\ \ \ \ *\ \ \ \ \ \ \ 5\ en\ d\u00e9cimal\ correspond\ \u00e0\ 00000101\ en\ binaire\ et\n\ \ \ \ *\ \ \ \ \ \ \ sera\ stock\u00e9\ dans\ le\ StringBuilder\ 10100000\n\ \ \ \ */\n\ \ \ public\ ByteString(String\ s)\ {\n\ \ \ \ \ \ \ //A\ COMPLETER\n\ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ repr\u00e9sentation\ naturelle\ du\ nombre\ binaire\n\ \ \ \ \ *\ \ \ \ \ \ \ c'est-\u00e0-dire\ celle\ o\u00f9\ le\ bit\ de\ poids\ fort\ est\ \u00e0\ gauche\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ String\ r\="";\n\ \ \ \ \ \ \ \ for(int\ i\=b.length()-1;\ i>\=0;i--)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ r\=r+b.charAt(i);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ }\n\n\ \ \ //A\ COMPLETER\n\ \ }=

#. name
#: m08Q4/task.yaml
!Mission\ 8\ \:\ Q*\ ByteString=

#. name, q1, header
#: m08Q4/task.yaml
!Ecrivez\ le\ corps\ du\ premier\ constructeur=

#. name, q2, header
#: m08Q4/task.yaml
!Ecrivez\ le\ corps\ du\ second\ constructeur=

#. context
#: m08Q5/task.yaml
!On\ vous\ donne\ linterface\ ``Byte``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ Byte\ {\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ On\ retourne\ la\ valeur\ du\ bit\ \u00e0\ la\ position\ i\n\ \ \ \ */\n\ \ \ \ public\ int\ getBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ \ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ le\ bit\ \u00e0\ la\ position\ i\ est\ mis\ \u00e0\ 1\n\ \ \ \ */\n\ \ \ \ public\ void\ setBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ i\ est\ un\ entier\ positif\ \ et\ 0<\=i<\=7\n\ \ \ \ *\ @post\ le\ bit\ \u00e0\ la\ position\ i\ est\ remis\ \u00e0\ 0\n\ \ \ \ */\n\ \ \ \ public\ void\ resetBit(int\ i);\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ Le\ tableau\ est\ d\u00e9call\u00e9e\ d'un\ bit\ vers\ la\ droite\n\ \ \ \ *\ (attention\ \u00e0\ la\ structure\ interne)\n\ \ \ \ *\ Le\ bit\ de\ poids\ faible\ est\ mis\ \u00e0\ 0.\n\ \ \ \ */\n\ \ \ \ public\ void\ shiftLeft();\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ Le\ tableau\ est\ d\u00e9call\u00e9e\ d'un\ bit\ vers\ la\ gauche\n\ \ \ \ *\ (attention\ \u00e0\ la\ structure\ interne)\n\ \ \ \ *\ Le\ bit\ de\ poids\ fort\ prend\ la\ valeur\ du\ bit\ de\ poids\ faible\ avant\ rotation\n\ \ \ \ */\n\ \ \ \ public\ void\ rotateRight();\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ On\ effectue\ un\ ET\ logique\ entre\ chaque\ bit\ de\ b\ et\ b1\n\ \ \ \ */\n\ \ \ \ public\ Byte\ and(Byte\ b1);\n\ \ }\n\nAinsi\ que\ la\ classe\ (\u00e0\ compl\u00e9ter)\ ``ByteTab``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ ByteTab\ implements\ Byte\ {\n\ \ \ \ private\ boolean\ b[];\n\ \ \ \ //\ true\ signifie\ 1\n\ \ \ \ //\ false\ signifie\ 0\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ a\ construit\ un\ Byte\ dont\ tous\ les\ bits\ sont\ mis\ \u00e0\ 0\n\ \ \ \ \ */\n\ \ \ \ public\ ByteTab()\ {\n\ \ \ \ \ \ \ \ b\=new\ boolean[8];\n\ \ \ \ \ \ \ \ for(int\ i\=0;i<b.length;i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ b[i]\=false;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ s.length\=\=8,\ s\ ne\ contient\ que\ des\ caract\u00e8res\ 0\ et\ 1\n\ \ \ \ *\ @post\ a\ construit\ un\ byte\ dont\ la\ repr\u00e9sentation\ naturelle\ en\ String\ est\ s\n\ \ \ \ *\ \ \ \ \ \ \ La\ repr\u00e9sentation\ naturelle\ d'un\ byte\ sous\ la\ forme\ d'un\ String\ est\n\ \ \ \ *\ \ \ \ \ \ \ le\ bit\ de\ poids\ fort\ \u00e0\ gauche.\ Dans\ le\ tableau\ de\ char,\ on\ stocke\n\ \ \ \ *\ \ \ \ \ \ \ le\ byte\ de\ fa\u00e7on\ \u00e0\ avoir\ le\ bit\ de\ poids\ faible\ (resp.\ fort)\n\ \ \ \ *\ \ \ \ \ \ \ en\ position\ 0\ (resp.\ 7).\n\ \ \ \ *\n\ \ \ \ *\ \ \ \ \ \ \ Exemple\n\ \ \ \ *\n\ \ \ \ *\ \ \ \ \ \ \ 5\ en\ d\u00e9cimal\ correspond\ \u00e0\ 00000101\ en\ binaire\ et\n\ \ \ \ *\ \ \ \ \ \ \ sera\ stock\u00e9\ dans\ le\ tableau\ 10100000\n\ \ \ \ */\n\ \ \ \ public\ ByteTab(String\ s)\ {\n\ \ \ \ \ \ \ \ b\=new\ boolean[8];\n\ \ \ \ \ \ \ \ for(int\ i\=0;i<s.length();i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(s.charAt(i)\=\='0')\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ b[7-i]\=false;\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ b[7-i]\=true;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ la\ repr\u00e9sentation\ naturelle\ du\ nombre\ binaire\n\ \ \ \ \ *\ \ \ \ \ \ \ c'est-\u00e0-dire\ celle\ o\u00f9\ le\ bit\ de\ poids\ fort\ est\ \u00e0\ gauche\n\ \ \ \ \ */\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ String\ r\="";\n\ \ \ \ \ \ \ \ for(int\ i\=b.length-1;i>\=0;i--)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(b[i])\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r+\='1';\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ r+\='0';\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ r;\n\ \ \ \ }\n\n\ \ \ \ //A\ compl\u00e9ter\n\ \ }=

#. name
#: m08Q5/task.yaml
!Mission\ 8\ \:\ Q*\ ByteTab=

#. context
#: m08Q6/task.yaml
!On\ vous\ donne\ l'interface\ ``Stat``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ Stat\ {\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ grand\ nombre\ de\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ max();\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ petit\ nombre\ de\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ min();\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ la\ moyenne\ des\ nombres\ pr\u00e9sents\ dans\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ moyenne();\n\ \ }\n\nAinsi\ que\ la\ classe\ (\u00e0\ compl\u00e9ter)\ ``Vecteur``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Vecteur\ implements\ Stat\ {\n\ \ \ \ \ \ private\ double[]\ v;\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ \ \ *\ @post\ construit\ un\ vecteur\ contenant\ n\ r\u00e9els\n\ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ Vecteur(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ v\=new\ double[n];\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ 0\ <\=\ i\ <\ n\n\ \ \ \ \ \ \ *\ @post\ stocke\ la\ valeur\ d\ en\ position\ i\ du\ vecteur\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ void\ set(int\ i,\ double\ d){\n\ \ \ \ \ \ \ \ \ \ v[i]\=d;\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ 0\ <\=\ i\ <\ n\n\ \ \ \ \ \ \ *\ @post\ retourne\ la\ valeur\ se\ trouvant\ en\ position\ i\ du\ vecteur\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ get(int\ i)\ {\n\ \ \ \ \ \ \ \ \ \ return\ v[i];\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ //A\ COMPLETER\n\ \ }=

#. name
#: m08Q6/task.yaml
!Mission\ 8\ \:\ Q*\ Vecteur=

#. context
#: m08Q7/task.yaml
!On\ vous\ donne\ l'interface\ ``Stat``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ interface\ Stat\ {\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ grand\ nombre\ de\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ max();\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ petit\ nombre\ de\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ min();\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ *\ @post\ retourne\ la\ moyenne\ des\ nombres\ pr\u00e9sents\ dans\ l'ensemble\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ moyenne();\n\ \ }\n\nAinsi\ que\ la\ classe\ (\u00e0\ compl\u00e9ter)\ ``MatriceCarree``\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ MatriceCarree\ implements\ Stat\ {\n\n\ \ \ \ \ \ public\ double[][]\ m;\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ n\ >\ 0\n\ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ matrice\ carr\u00e9e\ de\ taille\ n*n\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ MatriceCarree(int\ n)\ {\n\ \ \ \ \ \ \ \ \ \ m\ \=\ new\ double[n][n];\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ 0\ <\=\ i\ <\ n,\ 0\ <\=\ j\ <\ n\n\ \ \ \ \ \ \ *\ @post\ stocke\ la\ valeur\ d\ en\ position\ i,j\ de\ la\ matrice\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ void\ set(int\ i,\ int\ j,\ double\ d)\ {\n\ \ \ \ \ \ \ \ \ \ m[i][j]\ \=\ d;\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ /*\n\ \ \ \ \ \ \ *\ @pre\ 0\ <\=\ i\ <\ n,\ 0\ <\=\ j\ <\ n\n\ \ \ \ \ \ \ *\ @post\ retourne\ la\ valeur\ se\ trouvant\ en\ position\ i,j\ de\ la\ matrice\n\ \ \ \ \ \ \ */\n\ \ \ \ \ \ public\ double\ get(int\ i,\ int\ j){\n\ \ \ \ \ \ \ \ \ \ return\ m[i][j];\n\ \ \ \ \ \ }\n\n\ \ \ \ \ \ //A\ COMPLETER\n\ \ }=

#. name
#: m08Q7/task.yaml
!Mission\ 8\ \:\ Q*\ Matrice\ Carr\u00e9e=

#. context
#: m08_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 8.\ Interfaces\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ \ \ -\ |jn4.5|_\n\ \ \ \ \ \ \ \ -\ |jn4.5.1|_\n\ \ \ \ \ \ \ \ -\ |jn4.5.2|_\n\ \ \ \ \ \ \ \ -\ |jn4.5.3|_\n\ \ \ \ \ \ \ \ -\ |jn4.5.4|_\n\ \ \ \ -\ |jn5.3|_\n\ \ \ \ \ \ \ \ -\ |jn5.3.1|_\n\ \ \ \ \ \ \ \ -\ |jn5.3.2|_\n\ \ \ \ \ \ \ \ -\ |jn5.3.3|_\n\ \ \ \ \ \ \ \ -\ |jn5.3.4|_\n\ \ \ \ -\ |jn5.5|_\n\ \ \ \ \ \ \ \ -\ |jn5.5.5|_\n\ \ \ \ -\ |jn5.7|_\n\ \ \ \ \ \ \ \ -\ |jn5.7.1|_\n\ \ \ \ \ \ \ \ -\ |jn5.7.2|_\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn4.5\ \:\ http\://math.hws.edu/javanotes/c4/s5.html\n..\ |jn4.5|\ replace\:\:\ `4.5\ \:\ APIs,\ Packages,\ and\ Javadoc`\n\n..\ _jn4.5.1\ \:\ http\://math.hws.edu/javanotes/c4/s5.html\#subroutines.5.1\n..\ |jn4.5.1|\ replace\:\:\ `4.5.2\ \:\ Toolboxes`\n\n..\ _jn4.5.2\ \:\ http\://math.hws.edu/javanotes/c4/s5.html\#subroutines.5.2\n..\ |jn4.5.2|\ replace\:\:\ `4.5.3\ \:\ Java's\ Standard\ Packages`\n\n..\ _jn4.5.3\ \:\ http\://math.hws.edu/javanotes/c4/s5.html\#subroutines.5.3\n..\ |jn4.5.3|\ replace\:\:\ `4.5.4\ \:\ Using\ Classes\ from\ Packages`\n\n..\ _jn4.5.4\ \:\ http\://math.hws.edu/javanotes/c4/s5.html\#subroutines.5.4\n..\ |jn4.5.4|\ replace\:\:\ `4.5.4\ \:\ Javadoc`\n\n..\ _jn5.3\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\n..\ |jn5.3|\ replace\:\:\ `5.3\ \:\ Programming\ with\ Objects`\n\n..\ _jn5.3.1\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\#OOP.3.1\n..\ |jn5.3.1|\ replace\:\:\ `5.3.1\ \:\ Some\ Built-in\ Classes`\n\n..\ _jn5.3.2\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\#OOP.3.2\n..\ |jn5.3.2|\ replace\:\:\ `5.3.2\ \:\ Wrapper\ Classes\ and\ Autoboxing`\n\n..\ _jn5.3.3\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\#OOP.3.3\n..\ |jn5.3.3|\ replace\:\:\ `5.3.3\ \:\ The\ class\ "Object"`\n\n..\ _jn5.3.4\ \:\ http\://math.hws.edu/javanotes/c5/s3.html\#OOP.3.4\n..\ |jn5.3.4|\ replace\:\:\ `5.3.4\ \:\ Object-oriented\ Analysis\ and\ Design`\n\n..\ _jn5.5\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\n..\ |jn5.5|\ replace\:\:\ `5.5\ \:\ Inheritance,\ Polymorphism,\ and\ Abstract\ Classes`\n\n..\ _jn5.5.5\ \:\ http\://math.hws.edu/javanotes/c5/s5.html\#OOP.5.5\n..\ |jn5.5.5|\ replace\:\:\ `5.5.5\ \:\ Abstract\ Classes`\n\n..\ _jn5.7\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\n..\ |jn5.7|\ replace\:\:\ `5.7\ \:\ Interfaces,\ Nested\ Classes,\ and\ Other\ Details`\n\n..\ _jn5.7.1\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\#OOP.7.1\n..\ |jn5.7.1|\ replace\:\:\ `5.7.1\ \:\ Interfaces`\n\n..\ _jn5.7.2\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\#OOP.7.2\n..\ |jn5.7.2|\ replace\:\:\ `5.7.2\ \:\ Nested\ Classes`\n=

#. name
#: m08_qcm/task.yaml
!Mission\ 8\:\ QCM=

#. name, q1, name
#: m08_qcm/task.yaml
!Packages=

#. name, q1, header
#: m08_qcm/task.yaml
!\nLe\ package\ ``java.util``\ d\u00e9finit\ (entre\ autres)\ l'interface\ ``List``\ et\ une\ classe\ ``ArrayList``\ qui\ impl\u00e9mente\ ``List``.\ \ Sachant\ cela,\ parmi\ les\ fragments\ de\ programmes\ suivants,\ lequel\ est\ correct\ pour\ le\ compilateur\ Java\ ?\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.List;\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ java.util.ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ Class\ MyList\ implements\ java.util.List\ {\n\ \ \ \ \ \ \ private\ java.util.List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ java.util.ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.List;\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\nIl\ faut\ soit\ importer\ ``ArrayList``,\ soit\ mettre\ ``java.util.ArrayList``\ dans\ le\ constructeur.\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.ArrayList;\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ java.util.ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\nIl\ faut\ importer\ ``List``\ et\ non\ ``ArrayList``.\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.*;\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\n``import\ java.*``\ importe\ les\ classes\ (inexistantes)\ du\ package\ ``java``\ ,\ pas\ celles\ de\ ``java.util``.\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ java.util.List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ java.util.ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\nIl\ faut\ soit\ importer\ ``List``,\ soit\ mettre\ ``java.util.List``\ dans\ la\ d\u00e9claration\ de\ classe.\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ Class\ MyList\ implements\ List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\nIl\ faut\ importer\ ``List``\ et\ ``ArrayList``.\n=

#. name, q1, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ Class\ MyList\ implements\ java.util.List\ {\n\ \ \ \ \ \ \ private\ List\ l;\n\ \ \ \ \ \ \ public\ MyList()\ {\n\ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ java.util.ArrayList();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ //\ ...\ autres\ m\u00e9thodes\ de\ l'interface\ List\n\ \ \ }\n=

#. name, q1, feedback
#: m08_qcm/task.yaml
!\nIl\ faut\ soit\ importer\ ``List``,\ soit\ mettre\ ``java.util.List``\ dans\ la\ d\u00e9claration\ de\ la\ variable\ ``l``.\n=

#. name, q2, name
#: m08_qcm/task.yaml
!Extension\ et\ impl\u00e9mentation=

#. name, q2, header
#: m08_qcm/task.yaml
!\nParmi\ les\ ensembles\ d'affirmations\ suivantes,\ lequel\ est\ correct\ ?\n=

#. name, q2, text
#: m08_qcm/task.yaml
!\n\n-\ Une\ classe\ ne\ peut\ \u00e9tendre\ qu'une\ seule\ classe.\n-\ Une\ classe\ peut\ impl\u00e9menter\ plusieurs\ interfaces.\n=

#. name, q2, text
#: m08_qcm/task.yaml
!\n\n-\ Une\ classe\ peut\ \u00e9tendre\ plusieurs\ classes.\n-\ Une\ classe\ peut\ impl\u00e9menter\ plusieurs\ interfaces.\n=

#. name, q2, feedback
#: m08_qcm/task.yaml
!\nUne\ classe\ ne\ peut\ pas\ \u00e9tendre\ plusieurs\ classes.\n=

#. name, q2, text
#: m08_qcm/task.yaml
!\n\n-\ Une\ classe\ ne\ peut\ \u00e9tendre\ qu'une\ seule\ classe.\n-\ Une\ classe\ ne\ peut\ impl\u00e9menter\ qu'une\ seule\ interface.\n=

#. name, q2, feedback
#: m08_qcm/task.yaml
!\nUne\ classe\ peut\ impl\u00e9menter\ plusieurs\ interfaces.\n=

#. name, q2, text
#: m08_qcm/task.yaml
!\n\n-\ Une\ classe\ peut\ impl\u00e9menter\ plusieurs\ interfaces.\n-\ Une\ interface\ peut\ impl\u00e9menter\ une\ autre\ interface.\n=

#. name, q2, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ peut\ rien\ impl\u00e9menter.\n=

#. name, q2, text
#: m08_qcm/task.yaml
!\n\n-\ Une\ classe\ peut\ impl\u00e9menter\ plusieurs\ interfaces.\n-\ Une\ interface\ peut\ \u00e9tendre\ une\ classe.\n=

#. name, q2, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ peut\ pas\ \u00e9tendre\ une\ classe.\n\n\n=

#. name, q3, name
#: m08_qcm/task.yaml
!Interface=

#. name, q3, header
#: m08_qcm/task.yaml
!\nParmi\ les\ d\u00e9finitions\ de\ l'interface\ ``Direction``\ ci-dessous,\ laquelle\ est\ correcte\ pour\ le\ compilateur\ Java?\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ int\ value();\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ void\ pivote(int\ angle);\n\ \ \ }\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ value();\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ pivote(int\ angle);\n\ \ \ }\n=

#. name, q3, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ contient\ des\ signatures\ de\ m\u00e9thodes,\ pas\ uniquement\ des\ noms.\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ private\ int\ value;\ \ //\ la\ direction\ courante\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ int\ value();\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ void\ pivote(int\ angle);\n\ \ \ }\n=

#. name, q3, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ contient\ pas\ de\ variables\ d'instance.\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ Direction(int\ val);\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ int\ value();\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ void\ pivote(int\ angle);\n\ \ \ }\n=

#. name, q3, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ contient\ pas\ de\ constructeur.\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ int\ value()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ void\ pivote(int\ angle)\ {\n\ \ \ \ \ \ \ \ \ \ \ //\ rien\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q3, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ contient\ que\ des\ signatures,\ pas\ de\ corps\ de\ m\u00e9thodes.\n=

#. name, q3, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ interface\ Direction\ {\n\ \ \ \ \ \ \ private\ int\ value;\ \ //\ la\ direction\ courante\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ Direction(int\ val);\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ int\ value();\n\n\ \ \ \ \ \ \ /**\ ...\ */\n\ \ \ \ \ \ \ public\ void\ pivote(int\ angle);\n\ \ \ }\n=

#. name, q3, feedback
#: m08_qcm/task.yaml
!\nUne\ interface\ ne\ contient\ in\ variable\ d'instance,\ ni\ constructeur.\n=

#. name, q4, name
#: m08_qcm/task.yaml
!Interface\ et\ impl\u00e9mentation=

#. name, q4, header
#: m08_qcm/task.yaml
!\nOn\ consid\u00e8re\ l'interface\ ``Prix``\ d\u00e9finie\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ interface\ Prix\ {\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ montant\ du\ prix\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getVal();\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ \ *\ @post\ change\ le\ montant\ du\ prix\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ setVal(int\ x);\n\ \ \ \ }\n\nParmi\ les\ classes\ suivantes,\ laquelle\ est\ une\ impl\u00e9mentation\ correcte\ de\ ``Prix``\ ?\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ MyPrix\ implements\ Prix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal(double\ tax)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ (int)\ (val\ *\ (1\ +\ tax));\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(double\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ (int)\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ MyPrix\ implements\ Prix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ MyPrix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m08_qcm/task.yaml
!\nIl\ manque\ la\ clausse\ ``implements``\ dans\ l'en-t\u00eate\ de\ classe.\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ MyPrix\ implements\ Prix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal(double\ tax)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ (int)\ (val\ *\ (1\ +\ tax));\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(double\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ (int)\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m08_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``void\ setVal(int\ x)``\ n'est\ pas\ impl\u00e9ment\u00e9e,\ attention\ \u00e0\ la\ signature\!\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\n\ \ \ public\ class\ MyPrix\ implements\ Prix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal(double\ tax)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ (int)\ (val\ *\ (1\ +\ tax));\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m08_qcm/task.yaml
!\nLa\ m\u00e9thode\ ``int\ getVal()``\ n'est\ pas\ impl\u00e9ment\u00e9e,\ attention\ \u00e0\ la\ signature\!\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\n\ \ \ public\ class\ Prix\ implements\ MyPrix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ void\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m08_qcm/task.yaml
!\nC'est\ ``MyPrix``\ qui\ impl\u00e9mente\ ``Prix``\ et\ non\ l'inverse.\n=

#. name, q4, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ MyPrix\ implements\ Prix\ {\n\ \ \ \ \ \ \ private\ it\ val;\ \ //\ montant\ du\ prix\n\ \ \ \ \ \ \ public\ MyPrix(int\ v)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ v;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal()\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ val;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ getVal(double\ tax)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ (int)\ (val\ *\ (1\ +\ tax));\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ public\ int\ setVal(int\ x)\ {\n\ \ \ \ \ \ \ \ \ \ \ val\ \=\ x;\n\ \ \ \ \ \ \ \ \ \ \ return\ x;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q4, feedback
#: m08_qcm/task.yaml
!\nLa\ signature\ de\ ``setVal``\ ne\ correspond\ pas\ \u00e0\ celle\ de\ l'interface.\n=

#. name, q5, name
#: m08_qcm/task.yaml
!\ Interfaces\ et\ types=

#. name, q5, header
#: m08_qcm/task.yaml
!\n\nSoit\ l'interface\ ``I1``\ et\ les\ classes\ ``C2``\ et\ ``C3``\ d\u00e9finies\ comme\ suit\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ interface\ I1\ {\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C2\ implements\ I1\ {\n\ \ \ \ \ \ \ \ public\ C2()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\n\ \ \ \ public\ class\ C3\ extends\ C2\ {\n\ \ \ \ \ \ \ \ public\ C3()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ ...\n\ \ \ \ }\n\nParmi\ les\ portions\ de\ code\ suivantes,\ laquelle\ est\ valide\ pour\ le\ compilateur\ Java\ ?\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ obj2\ \=\ new\ C2();\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ I1\ ojb1\ \=\ obj2;\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ I1\ obj1\ \=\ new\ C3();\n\ \ \ C2\ obj2\ \=\ new\ C2();\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ I1\ ojb1\ \=\ new\ C2();\n\ \ \ C2\ obj2\ \=\ obj1;\n\ \ \ C3\ obj3\ \=\ new\ C3();\n=

#. name, q5, feedback
#: m08_qcm/task.yaml
!\n``C2\ obj2``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``I1``.\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ new\ C2();\n\ \ \ I1\ obj1\ \=\ new\ C2();\n\ \ \ C2\ obj2\ \=\ obj3;\n=

#. name, q5, feedback
#: m08_qcm/task.yaml
!\n``I1\ obj1``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``C2``.\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C2\ obj2\ \=\ new\ C2();\n\ \ \ I1\ ojb1\ \=\ obj2;\n\ \ \ C3\ obj3\ \=\ obj2;\n=

#. name, q5, feedback
#: m08_qcm/task.yaml
!\n``C3\ obj3``\ ne\ peut\ pas\ recevoir\ une\ expression\ de\ type\ ``I2``.\n=

#. name, q5, text
#: m08_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ C3\ obj3\ \=\ new\ C3();\n\ \ \ I1\ obj1\ \=\ new\ C2();\n\ \ \ C2\ obj2\ \=\ obj1;\n=

#. context
#: m08dem1/task.yaml
!Les\ interfaces\ sont\ tr\u00e8s\ pratiques\ en\ termes\ de\ conception\ orient\u00e9e\ objet\ et\ permettent\ d'avoir\ une\ vision\ globale\ coh\u00e9rente\ du\ fonctionnement\ d'un\ programme,\ de\ ses\ diff\u00e9rents\ acteurs\ et\ de\ la\ mani\u00e8re\ dont\ ils\ interagissent.\ Il\ est\ donc\ important\ de\ savoir\ impl\u00e9menter\ des\ interfaces\ en\ respectant\ leurs\ sp\u00e9cifications.\ Voici\ l'interface\ ``DrapeauIF``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ //\ Une\ interface\ simple\ correspondant\ \u00e0\ un\ drapeau\n\ \ \ \ public\ interface\ DrapeauIF\ {\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ le\ drapeau\ prend\ la\ valeur\ pass\u00e9e\ en\ argument\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ set(boolean\ drapeau);\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ Si\ l'argument\ est\ 'V'\ ou\ 'v',\ le\ drapeau\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ prend\ la\ valeur\ vrai\ et\ faux\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ set(char\ c);\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ retourne\ le\ drapeau\ sous\ forme\ d'un\ bool\u00e9en\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ toBoolean();\n\ \ \ \ }\n\nPrenez\ connaissance\ de\ sont\ fonctionnement\ et\ de\ ses\ sp\u00e9cifications.\ Voici\ maintenant\ la\ classe\ ``Drapeau``\ qui\ impl\u00e9mente\ l'interface\ ``DrapeauIF``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ //\ Une\ classe\ simple\ avec\ un\ objet\ contenant\ un\ bool\u00e9en\n\ \ \ \ public\ class\ Drapeau\ implements\ DrapeauIF\ {\n\n\ \ \ \ \ \ \ \ private\ boolean\ drapeau;\ //\ la\ valeur\ du\ drapeau\n\n\ \ \ \ \ \ \ \ //\ Constructeurs\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ un\ objet\ de\ type\ Drapeau\ est\ cr\u00e9\u00e9\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ et\ repr\u00e9sente\ le\ drapeau\ 'false'\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Drapeau()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ drapeau\ \=\ false;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ un\ objet\ de\ type\ Drapeau\ est\ cr\u00e9\u00e9\ et\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ repr\u00e9sente\ le\ booleen\ pass\u00e9\ en\ argument\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Drapeau(boolean\ drapeau)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.drapeau\ \=\ drapeau;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ \:\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ \:\ un\ objet\ de\ type\ Drapeau\ est\ cr\u00e9\u00e9.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ Si\ l'argument\ est\ 'V'\ ou\ 'v',\ il\ repr\u00e9sente\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ drapeau\ true.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ Sinon,\ il\ repr\u00e9sente\ le\ drapeau\ false\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Drapeau(char\ c)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ drapeau\ \=\ (c\ \=\=\ 'V'\ ||\ c\ \=\=\ 'v');\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ void\ set(boolean\ drapeau)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ Compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ void\ set(char\ c)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ A\ Compl\u00e8ter\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ boolean\ toBoolean()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ drapeau;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nImpl\u00e9mentez\ les\ deux\ alternatives\ de\ la\ m\u00e9thode\ ``set()``\ de\ la\ classe\ ``Drapeau``\ en\ vous\ r\u00e9f\u00e9rant\ aux\ sp\u00e9cifications\ \u00e9nonc\u00e9es\ dans\ l'interface\ ``DrapeauIF``.\n=

#. name
#: m08dem1/task.yaml
!Mission\ 8\ \:\ Question\ de\ d\u00e9marrage\ 1\ \:\ Impl\u00e9menter\ une\ interface=

#. name, q1, name
#: m08dem1/task.yaml
!La\ m\u00e9thode\ set(boolean)=

#. name, q1, header
#: m08dem1/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``set``,\ qui\ prend\ comme\ argument\ un\ bool\u00e9en=

#. name, q2, name
#: m08dem1/task.yaml
!La\ m\u00e9thode\ set(char)=

#. name, q2, header
#: m08dem1/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``set``,\ qui\ prend\ comme\ argument\ un\ char=

#. context
#: m08dem2/task.yaml
!En\ Java,\ concat\u00e9ner\ des\ ``String``\ avec\ l'op\u00e9rateur\ ``+``\ implique\ la\ cr\u00e9ation\ et\ la\ desctruction\ successive\ d'un\ grand\ nombre\ de\ ``String``.\ On\ utilise\ en\ g\u00e9n\u00e9ral\ un\ ``StringBuffer``\ (http\://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html)\ pour\ \u00e9viter\ ce\ probl\u00e8me.\ En\ utilisant\ l'API\ de\ la\ classe\ ``StringBuffer``,\ impl\u00e9mentez\ le\ corps\ de\ la\ m\u00e9thode\ ``repeat()``\ qui\ permet\ de\ r\u00e9p\u00e9ter\ un\ ``String``\ un\ certain\ nombre\ de\ fois.\ Voici\ la\ signature\ de\ cette\ m\u00e9thode\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /*\n\ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ *\ @post\ retourne\ le\ String\ s\ r\u00e9p\u00e9t\u00e9\ n\ fois.\n\ \ \ \ \ *\ \ \ \ \ \ Si\ s\ \=\=\ null\ ou\ n\ \=\=\ 0,\ retourne\ null.\n\ \ \ \ \ */\n\ \ \ \ public\ static\ String\ repeat(String\ s,\ int\ n){\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }=

#. name
#: m08dem2/task.yaml
!Mission\ 8\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ StringBuffer=

#. name, q1, name
#: m08dem2/task.yaml
!La\ m\u00e9thode\ repeat=

#. name, q1, header
#: m08dem2/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``repeat``.\ Veillez\ \u00e0\ bien\ respecter\ les\ sp\u00e9cifications.=

#. context
#: m08real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 8.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ Square.java\n-\ Rectangle.java\n-\ DrawPanel.java\n-\ Equilateral.java\n-\ MyShape.java\n-\ Segment.java\n-\ Shape.java\n-\ Triangle.java\n-\ README.txt=

#. name
#: m08real/task.yaml
!Mission\ 8\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m08real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 8=

#. context
#: m09Q1/task.yaml
!Un\ \u00e9tudiant\ a\ \u00e9crit\ la\ classe\ suivante,\ mais\ il\ lui\ manque\ une\ m\u00e9thode\ pour\ qu'elle\ puisse\ \u00eatre\ compil\u00e9e.\ Pourriez-vous\ impl\u00e9menter\ cette\ m\u00e9thode\ ?\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Fraction\ implements\ Comparable\ {\n\n\ \ \ \ \ \ \ \ private\ int\ num;\ //\ numerateur\n\ \ \ \ \ \ \ \ private\ int\ den;\ //\ denominateur\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ num\ >\=\ 0,\ den\ >\ 0\n\ \ \ \ \ \ \ \ \ *\ @post\ construit\ la\ fraction\ num/den\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Fraction(int\ num,\ int\ den)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.num\=num;\n\ \ \ \ \ \ \ \ \ \ \ \ this.den\=den;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ d\u00e9nominateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getDen()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.den;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ num\u00e9rateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.num;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ //\ Ins\u00e9rez\ le\ code\ manquant\n\ \ }=

#. name
#: m09Q1/task.yaml
!Mission\ 9\ \:\ Q*\ Fraction=

#. name, q1, name
#: m09Q1/task.yaml m10Q1/task.yaml
!Fraction=

#. name, q1, header
#: m09Q1/task.yaml m09Q2/task.yaml m10Q1/task.yaml
!Ecrivez\ la/les\ m\u00e9thode(s)\ manquante(s)=

#. context
#: m09Q2/task.yaml
!Un\ \u00e9tudiant\ a\ \u00e9crit\ la\ classe\ suivante,\ mais\ il\ lui\ manque\ une\ m\u00e9thode\ pour\ qu'elle\ puisse\ \u00eatre\ compil\u00e9e.\ Pourriez-vous\ impl\u00e9menter\ cette\ m\u00e9thode\ ?\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Employe\ implements\ Comparable\ {\n\ \ \ \ \ private\ String\ nom;\n\ \ \ \ \ private\ String\ prenom;\n\ \ \ \ \ private\ double\ salaire;\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ Constructeur\n\ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ prenom\ \!\=\ null,\ salaire\ >\ 0\n\ \ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Employe\ avec\ nom\ et\ salaire\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ Employe\ (String\ nom,\ String\ prenom,\ double\ salaire){\n\ \ \ \ \ \ \ \ this.nom\ \=\ nom;\n\ \ \ \ \ \ \ \ this.prenom\=prenom;\n\ \ \ \ \ \ \ \ this.salaire\ \=\ salaire;\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ String\ getNom(){\n\ \ \ \ \ \ \ \ \ return\ nom\ ;\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ le\ pr\u00e9nom\ de\ l'employ\u00e9\ this\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ String\ getPrenom()\ {\n\ \ \ \ \ \ \ \ \ return\ prenom;\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ le\ salaire\ de\ l'employ\u00e9\ this\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ double\ getSalaire()\ {\n\ \ \ \ \ \ \ \ \ return\ salaire;\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ un\ String\ d\u00e9crivant\ l'employ\u00e9\ this\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ String\ toString()\ {\n\ \ \ \ \ \ \ \ \ return\ getPrenom()+"\ "+getNom()+"\ ("+getSalaire()+")";\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ true\ si\ this\ et\ other\ correspondent\ au\n\ \ \ \ \ \ *\ \ \ \ \ \ \ m\u00eame\ employ\u00e9\ (m\u00eame\ nom,\ m\u00eame\ pr\u00e9nom,\ m\u00eame\ salaire)\n\ \ \ \ \ \ */\n\ \ \ \ \ public\ boolean\ equals(Object\ other)\ {\n\ \ \ \ \ \ \ \ \ if\ (other\ instanceof\ Employe)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Employe\ e\ \=\ (Employe)\ other;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ (this.getNom().equals(e.getNom())\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ &&\ (this.getPrenom().equals(e.getPrenom()))\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ &&\ (this.getSalaire()\=\=e.getSalaire()));\n\ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ }\n\n\ \ \ \ \ /*\n\ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ *\ @post\ retourne\ un\ entier\ n\u00e9gatif\ si\ l'employ\u00e9\ this\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ est\ inf\u00e9rieur\ dans\ l'ordre\ alphab\u00e9tique\ \u00e0\ other.\n\ \ \ \ \ \ *\ \ \ \ \ \ 0\ si\ this\ et\ other\ correspondent\ au\ m\u00eame\ employ\u00e9\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ (m\u00eame\ nom,\ m\u00eame\ pr\u00e9nom,\ m\u00eame\ salaire)\n\ \ \ \ \ \ *\ \ \ \ \ \ Un\ entier\ positif\ si\ l'employ\u00e9\ this\ est\ sup\u00e9rieur\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ dans\ l'ordre\ alphab\u00e9tique\ \u00e0\ other.\n\ \ \ \ \ \ *\ \ \ \ \ \ Pour\ tester\ l'ordre\ alphab\u00e9tique,\ on\ regarde\ d'abord\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ le\ nom,\ ensuite\ le\ pr\u00e9nom\ et\ enfin\ le\ salaire\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ (le\ salaire\ inf\u00e9rieur\ \u00e9tant\ consid\u00e9r\u00e9\ comme\ avant\n\ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ un\ salaire\ sup\u00e9rieur)\n\ \ \ \ \ \ */\n\ \ \ \ \ //Ins\u00e9rez\ ici\ le\ code\ manquant\n\ \ }\n\nPour\ rappel,\ la\ documentation\ de\ l'interface\ Comparable\ est\ disponible\ via\ https\://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html=

#. name
#: m09Q2/task.yaml
!Mission\ 9\ \:\ Q*\ Employe=

#. name, q1, name
#: m09Q2/task.yaml
!Employe=

#. context
#: m09Q3/task.yaml
!La\ classe\ ``Fichiers``\ est\ une\ classe\ permettant\ de\ r\u00e9aliser\ quelques\ t\u00e2ches\ sur\ un\ fichier.\ On\ vous\ demande\ ici\ d'\u00e9crire\ la\ m\u00e9thodes\ ``countLines``\ dont\ les\ sp\u00e9cifications\ et\ la\ signature\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /*\n\ \ \ *\ @pre\ -\n\ \ \ *\ @post\ ouvre\ le\ fichier\ filename\ et\ retourne\ le\ nombre\n\ \ \ *\ \ \ \ \ \ \ de\ lignes\ pr\u00e9sentes\ dans\ ce\ fichier.\n\ \ \ *\ \ \ \ \ \ \ Retourne\ -1\ en\ cas\ d'erreur\ de\ lecture\ ou\ d'acc\u00e8s\ au\ fichier\n\ \ \ */\n\ \ \ \ public\ int\ countLines(String\ fileName);\n\nPour\ lire\ le\ fichier,\ nous\ vous\ demandons\ d'utilisez\ un\ ``BufferedReader``.=

#. name
#: m09Q3/task.yaml
!Mission\ 9\ \:\ Q*\ Fichiers=

#. name, q1, name
#: m09Q3/task.yaml
!CountLines=

#. name, q1, header
#: m09Q3/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``countLines``=

#. context
#: m09Q4/task.yaml
!La\ classe\ ``Fichiers``\ est\ une\ classe\ permettant\ de\ r\u00e9aliser\ quelques\ t\u00e2ches\ sur\ un\ fichier.\ On\ vous\ demande\ ici\ d'\u00e9crire\ la\ m\u00e9thodes\ ``contains``\ dont\ les\ sp\u00e9cifications\ et\ la\ signature\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /*\n\ \ \ *\ @pre\ fileName\ \!\=\ null\n\ \ \ *\ @post\ retourne\ true\ si\ le\ fichier\ de\ nom\ fileName\ contient\n\ \ \ *\ \ \ \ \ \ \ au\ moins\ une\ occurence\ de\ la\ cha\u00eene\ s,\n\ \ \ *\ \ \ \ \ \ \ false\ sinon\ et\ en\ cas\ d'erreur\ \u00e9galement\n\ \ \ */\n\ \ \ public\ boolean\ contains(String\ s,\ String\ fileName)\n\nOn\ vous\ demande\ d'utiliser\ un\ ``BufferedReader``\ pour\ lire\ le\ fichier=

#. name
#: m09Q4/task.yaml
!Mission\ 9\ \:\ Q*\ Fichiers\ \:\ Contains=

#. name, q1, header
#: m09Q4/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``contains``=

#. context
#: m09Q5/task.yaml
!La\ classe\ ``Fichiers``\ est\ une\ classe\ permettant\ de\ r\u00e9aliser\ quelques\ t\u00e2ches\ sur\ un\ fichier.\ On\ vous\ demande\ ici\ d'\u00e9crire\ la\ m\u00e9thodes\ ``accessible``\ dont\ les\ sp\u00e9cifications\ et\ la\ signature\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /*\n\ \ \ *\ @pre\ -\n\ \ \ *\ @post\ retourne\ true\ si\ le\ fichier\ de\ nom\ fileName\ est\ accessible\ (c'est-\u00e0-dire\ qu'il\ peut\ \u00eatre\ ouvert)\n\ \ \ *\ \ \ \ \ \ \ false\ sinon\n\ \ \ */\n\ \ \ public\ static\ boolean\ accessible(String\ fileName)\n\nOn\ vous\ demande\ d'utiliser\ un\ ``BufferedReader``\ si\ vous\ devez\ lire\ le\ fichier.\n=

#. name
#: m09Q5/task.yaml
!Mission\ 9\:\ Q*\ Fichiers\:Accessible=

#. name, q1, name
#: m09Q5/task.yaml
!Accessible=

#. name, q1, header
#: m09Q5/task.yaml
!Ecrivez\ la\ m\u00e9thode\ Accessible,\ signature\ et\ corps\ de\ la\ m\u00e9thode\ compris\:=

#. context
#: m09Q6/task.yaml
!La\ classe\ ``Fichiers``\ est\ une\ classe\ permettant\ de\ r\u00e9aliser\ quelques\ t\u00e2ches\ sur\ un\ fichier.\ On\ vous\ demande\ ici\ d'\u00e9crire\ la\ m\u00e9thodes\ ``saveVector``\ dont\ les\ sp\u00e9cifications\ et\ la\ signature\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /*\n\ \ \ *\ @pre\ v\!\=null,\ fileName\!\=null\n\ \ \ *\ @post\ sauve\ dans\ le\ fichier\ dont\ le\ nom\ est\ fileName\ le\ contenu\ du\ vecteur\ v\n\ \ \ *\ \ \ \ \ \ \ le\ format\ du\ fichier\ est\ \:\n\ \ \ *\ \ \ \ \ premi\u00e8re\ ligne\ \:\ nombre\ d'\u00e9l\u00e9ments\ du\ vecteur\n\ \ \ *\ \ \ \ \ lignes\ suivantes\ \:\ un\ \u00e9l\u00e9ment\ par\ ligne\ en\ commen\u00e7ant\ par\ v[0]\ ...\n\ \ \ */\n\ \ \ public\ void\ saveVector(int\ []\ v,\ String\ fileName)\n=

#. name
#: m09Q6/task.yaml
!Mission\ 9\:\ Q*\ Fichiers\:saveVector=

#. name, q1, name
#: m09Q6/task.yaml
!saveVector=

#. name, q1, header
#: m09Q6/task.yaml
!Ecrivez\ la\ m\u00e9thode\ saveVector,\ signature\ et\ corps\ de\ la\ m\u00e9thode\ compris\:=

#. context
#: m09Q7/task.yaml
!La\ classe\ ``Fichiers``\ est\ une\ classe\ permettant\ de\ r\u00e9aliser\ quelques\ t\u00e2ches\ sur\ un\ fichier.\ On\ vous\ demande\ ici\ d'\u00e9crire\ la\ m\u00e9thodes\ ``readVector``\ dont\ les\ sp\u00e9cifications\ et\ la\ signature\ sont\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /*\n\ \ \ *\ @pre\ fileName\!\=null\n\ \ \ *\ @post\ lit\ dans\ le\ fichier\ dont\ le\ nom\ est\ fileName\ le\ contenu\ du\ vecteur\ v\n\ \ \ *\ \ \ \ \ \ \ le\ format\ du\ fichier\ est\ \:\n\ \ \ *\ \ \ \ \ premi\u00e8re\ ligne\ \:\ nombre\ d'\u00e9l\u00e9ments\ du\ vecteur\n\ \ \ *\ \ \ \ \ lignes\ suivantes\ \:\ un\ \u00e9l\u00e9ment\ par\ ligne\ en\ commen\u00e7ant\ par\ v[0]\ ...\n\ \ \ *\n\ \ \ *\ \ \ \ \ En\ cas\ d'erreur\ (exception,\ fichier\ non\ lisible,\ nombre\ incorrect\ d'\u00e9l\u00e9ments\n\ \ \ *\ \ \ \ \ dans\ le\ fichier,\ format\ de\ nombre\ incorrect,\ ...),\ retourne\ null\n\ \ \ */\n\ \ \ public\ \ int[]\ readVector(String\ fileName)\n\nPour\ lire\ le\ fichier,\ nous\ vous\ demandons\ d'utiliser\ un\ ``BufferedReader``.\n=

#. name
#: m09Q7/task.yaml
!Mission\ 9\:\ Q*\ Fichiers\:readVector=

#. name, q1, name
#: m09Q7/task.yaml
!readVector=

#. name, q1, header
#: m09Q7/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``readVector``\:=

#. author
#: m09_bf/task.yaml
!S\u00e9bastien\ Comb\u00e9fis,\ Naitali\ Brandon=

#. context
#: m09_bf/task.yaml
!Vous\ devez\ impl\u00e9menter\ une\ m\u00e9thode\ ``getMax``\ dont\ le\ but\ est\ de\ retrouver,\ dans\ un\ fichier,\ la\ ligne\ contenant\ le\ nombre\ flottant\ avec\ la\ plus\ grande\ valeur.\ Si\ un\ tel\ nombre\ n'existe\ pas,\ la\ m\u00e9thode\ doit\ renvoyer\ -\u221e.\ En\ cas\ d'erreur\ lors\ de\ la\ lecture\ du\ fichier,\ le\ programme\ doit\ se\ quitter\ et\ afficher\ exactement\ ``ERREUR``\ sur\ ``System.err``.\n\nVoici\ la\ sp\u00e9cification\ pr\u00e9\u00e7ise\ de\ la\ m\u00e9thode\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ filename\ \!\=\ null,\ filename\ est\ le\ nom\ d\u2019un\ fichier\ de\ texte.\n\ \ \ \ \ *\ \ \ \ \ \ Chaque\ ligne\ valide\ du\ fichier\ repr\u00e9sente\ un\ seul\ nombre\ r\u00e9el.\n\ \ \ \ \ *\ @post\ -\ La\ valeur\ renvoy\u00e9e\ contient\ le\ nombre\ flottant\ avec\ la\ plus\ grande\ valeur\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ parmi\ tous\ les\ nombres\ flottants\ valides\ du\ fichier.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ S'il\ n'y\ a\ aucun\ nombre\ valide,\ la\ valeur\ renvoy\u00e9e\ contient\ -\u221e.\n\ \ \ \ \ *\ \ \ \ \ \ \ -\ Si\ le\ fichier\ n\u2019existe\ pas\ ou\ si\ une\ erreur\ d'entr\u00e9e/sortie\ survient,\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ le\ programme\ se\ termine\ en\ affichant\ ERREUR\ System.err.\n\ \ \ \ \ *\n\ \ \ \ \ *\ \ \ \ \ \ \ Par\ exemple,\ la\ m\u00e9thode\ renvoie\ 10.0\ pour\ le\ contenu\ de\ fichier\ suivant\ \:\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ 0.345.67\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ hello\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ -543.0\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ 500.0\ 1000.0\ 2000.0\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ 10.0\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ 3.1416\n\ \ \ \ \ */\n\ \ \ \ public\ static\ double\ getMax\ (String\ filename)\n=

#. name
#: m09_bf/task.yaml
!Mission\ 9\ \:\ Question\ de\ Bilan\ Final=

#. name, q1, header
#: m09_bf/task.yaml
!Compl\u00e9tez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``getMax``\ dont\ la\ sp\u00e9cification\ est\ donn\u00e9e\ dans\ l'\u00e9nonc\u00e9.\n\n=

#. context
#: m09_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 9.\ Fichiers\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ \ \ -\ |jn3.7|_\n\ \ \ \ \ \ \ \ -\ |jn3.7.1|_\n\ \ \ \ \ \ \ \ -\ |jn3.7.2|_\n\ \ \ \ -\ |jn8.1|_\n\ \ \ \ \ \ \ \ -\ |jn8.1.1|_\n\ \ \ \ \ \ \ \ -\ |jn8.1.2|_\n\ \ \ \ \ \ \ \ -\ |jn8.1.3|_\n\ \ \ \ -\ |jn8.3|_\n\ \ \ \ \ \ \ \ -\ |jn8.3.1|_\n\ \ \ \ \ \ \ \ -\ |jn8.3.2|_\n\ \ \ \ -\ |jn11.1|_\n\ \ \ \ \ \ \ \ -\ |jn11.1.1|_\n\ \ \ \ \ \ \ \ -\ |jn11.1.2|_\n\ \ \ \ \ \ \ \ -\ |jn11.1.3|_\n\ \ \ \ \ \ \ \ -\ |jn11.1.4|_\n\ \ \ \ \ \ \ \ -\ |jn11.1.5|_\n\ \ \ \ -\ |jn11.2|_\n\ \ \ \ \ \ \ \ -\ |jn11.2.1|_\n\nainsi\ que\ l'API\ de\ la\ classe\ |Arrays|_.\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn3.7\ \:\ http\://math.hws.edu/javanotes/c3/s7.html\n..\ |jn3.7|\ replace\:\:\ `3.7\ \:\ Introduction\ to\ Exceptions\ and\ try..catch`\n\n..\ _jn3.7.1\ \:\ http\://math.hws.edu/javanotes/c3/s7.html\#control.7.1\n..\ |jn3.7.1|\ replace\:\:\ `3.7.1\ \:\ Exceptions`\n\n..\ _jn3.7.2\ \:\ http\://math.hws.edu/javanotes/c3/s7.html\#control.7.2\n..\ |jn3.7.2|\ replace\:\:\ `3.7.2\ \:\ try..catch`\n\n..\ _jn8.1\ \:\ http\://math.hws.edu/javanotes/c8/s1.html\n..\ |jn8.1|\ replace\:\:\ `8.1\ \:\ Introduction\ to\ Correctness\ and\ Robustness`\n\n..\ _jn8.1.1\ \:\ http\://math.hws.edu/javanotes/c8/s1.html\#robustness.1.1\n..\ |jn8.1.1|\ replace\:\:\ `8.1.1\ \:\ Horror\ Stories`\n\n..\ _jn8.1.2\ \:\ http\://math.hws.edu/javanotes/c8/s1.html\#robustness.1.2\n..\ |jn8.1.2|\ replace\:\:\ `8.1.2\ \:\ Java\ to\ the\ Rescue`\n\n..\ _jn8.1.3\ \:\ http\://math.hws.edu/javanotes/c8/s1.html\#robustness.1.3\n..\ |jn8.1.3|\ replace\:\:\ `8.1.3\ \:\ Problems\ Remain\ in\ Java`\n\n..\ _jn8.3\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\n..\ |jn8.3|\ replace\:\:\ `8.3\ \:\ Exceptions\ and\ try..catch`\n\n..\ _jn8.3.1\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\#robustness.3.1\n..\ |jn8.3.1|\ replace\:\:\ `8.3.1\ \:\ Exceptions\ and\ Exception\ Classes`\n\n..\ _jn8.3.2\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\#robustness.3.2\n..\ |jn8.3.2|\ replace\:\:\ `8.3.2\ \:\ The\ try\ Statement`\n\n..\ _jn11.1\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\n..\ |jn11.1|\ replace\:\:\ `11.1\ \:\ Streams,\ Readers,\ and\ Writers`\n\n..\ _jn11.1.1\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\#IO.1.1\n..\ |jn11.1.1|\ replace\:\:\ `11.1.1\ \:\ Character\ and\ Byte\ Streams`\n\n..\ _jn11.1.2\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\#IO.1.2\n..\ |jn11.1.2|\ replace\:\:\ `11.1.2\ \:\ PrintWriter`\n\n..\ _jn11.1.3\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\#IO.1.3\n..\ |jn11.1.3|\ replace\:\:\ `11.1.3\ \:\ Data\ Streams`\n\n..\ _jn11.1.4\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\#IO.1.4\n..\ |jn11.1.4|\ replace\:\:\ `11.1.4\ \:\ Reading\ Text`\n\n..\ _jn11.1.5\ \:\ http\://math.hws.edu/javanotes/c11/s1.html\#IO.1.5\n..\ |jn11.1.5|\ replace\:\:\ `11.1.5\ \:\ The\ Scanner\ Class`\n\n..\ _jn11.2\ \:\ http\://math.hws.edu/javanotes/c11/s2.html\n..\ |jn11.2|\ replace\:\:\ `11.2\ \:\ Files`\n\n..\ _jn11.2.1\ \:\ http\://math.hws.edu/javanotes/c11/s2.html\#IO.2.1\n..\ |jn11.2.1|\ replace\:\:\ `11.2.1\ \:\ Reading\ and\ Writing\ Files`\n\n..\ _Arrays\ \:\ http\://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html\n..\ |Arrays|\ replace\:\:\ ``java.util.Arrays``\n=

#. name
#: m09_qcm/task.yaml
!Mission\ 9\:\ QCM=

#. name, q1, name
#: m09_qcm/task.yaml
!Erreurs\ arithm\u00e9tiques=

#. name, q1, header
#: m09_qcm/task.yaml
!\nParmi\ les\ affirmations\ suivantes,\ laquelle\ est\ correcte\ ?\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``10\ /\ 0``\ produit\ une\ ``ArithmeticException``.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``Integer.MAX_VALUE\ +\ 1``\ retourne\ un\ entier\ n\u00e9gatif.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nLe\ plus\ petit\ entier,\ accessible\ via\ ``Integer.MIN_VALUE``.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``10.0\ /\ 0.0``\ retourne\ un\ nombre\ infini.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nC'est\ une\ valeur\ sp\u00e9ciale,\ accessible\ via\ ``Double.POSITIVE_INFINITY``.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``0.0\ /\ 0.0``\ retourne\ un\ nombre\ ind\u00e9fini.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nC'est\ une\ valeur\ sp\u00e9ciale,\ accessible\ via\ ``Double.NaN``\ (*Not\ a\ Number*).\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``1.0E100\ +\ 1000.0``\ retourne\ ``1.0E100``.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nA\ cause\ de\ la\ pr\u00e9cision\ arithm\u00e9tique,\ ajouter\ ``1000``\ ne\ change\ rien\ \u00e0\ ``1.0E100``\ (\=\ $10^{100}$).\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``10\ /\ 0``\ provoque\ toujours\ l'arr\u00eat\ du\ programme.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nCeci\ cause\ une\ ``ArithmeticException``\ que\ l'on\ peut\ intercepter\ et\ traiter.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``Integer.MAX_VALUE\ +\ 1``\ produit\ une\ ``ArithmeticException``.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nLes\ entiers\ "rebouclent"\ vers\ les\ n\u00e9gatifs\ quand\ ils\ d\u00e9passent\ la\ valeur\ maximale.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``10.0\ /\ 0.0``\ produit\ une\ ``ArithmeticException``.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nLes\ r\u00e9els\ utilisent\ une\ valeur\ sp\u00e9ciale\ ``Double.POSITIVE_INFINITY``\ pour\ repr\u00e9senter\ l'infini.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``0.0\ /\ 0.0``\ produit\ une\ ``ArithmeticException``.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nLes\ r\u00e9els\ utilisent\ une\ valeur\ sp\u00e9ciale\ ``Double.NaN``\ (*Not\ a\ Number*)\ pour\ repr\u00e9senter\ un\ nombre\ ind\u00e9fini.\n=

#. name, q1, text
#: m09_qcm/task.yaml
!``1.0E100\ +\ 1000.0``\ retourne\ un\ nombre\ strictement\ sup\u00e9rieur\ \u00e0\ ``1.0E100``.\n=

#. name, q1, feedback
#: m09_qcm/task.yaml
!\nA\ cause\ de\ la\ pr\u00e9cision\ arithm\u00e9tique,\ ajouter\ ``1000``\ ne\ change\ rien\ \u00e0\ ``1.0E100``\ (\=\ \:math\:`10^{100}`).\n=

#. name, q2, name
#. name, q3, name
#: m09_qcm/task.yaml
!Traitement\ des\ exceptions=

#. name, q2, header
#: m09_qcm/task.yaml
!\nQuelle\ d\u00e9finition\ de\ la\ m\u00e9thode\ ``toInt``\ ci-dessous\ retourne\ ``0``\ lorsque\ l'on\ passe\ ``"ABC"``\ comme\ param\u00e8tre\ ?\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ Integer.parseInt(s);\n\ \ \ \ \ \ \ }\ catch\ (NumberFormatException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\n\ \ \ }\n\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ int\ n\ \=\ 0;\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ Integer.parseInt(s);\n\ \ \ \ \ \ \ }\ catch\ (NumberFormatException\ e)\ {\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ n;\n\ \ \ }\n\n=

#. name, q2, feedback
#: m09_qcm/task.yaml
!\nApr\u00e8s\ l'interception\ de\ l'exception,\ l'ex\u00e9cution\ se\ poursuit\ apr\u00e8s\ le\ try-catch.\n\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ int\ n\ \=\ Integer.parseInt(s);\n\ \ \ \ \ \ \ if\ (n\ \=\=\ NumberFormatException)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ n;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q2, feedback
#: m09_qcm/task.yaml
!\nCeci\ ne\ traite\ pas\ l'exception.\ \ Utiliser\ un\ try-catch.\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ Integer.parseInt(s);\n\ \ \ \ \ \ \ }\ catch\ (NumberFormatException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.out.println("Erreur\ de\ format");\n\ \ \ \ \ \ \ }\n\ \ \ }\n\n=

#. name, q2, feedback
#: m09_qcm/task.yaml
!\nLe\ traitement\ de\ l'exception\ ne\ correspond\ pas\ \u00e0\ ce\ qui\ est\ demand\u00e9.\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ Integer.parseInt(s);\n\ \ \ \ \ \ \ }\ catch\ NumberFormatException\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\n\ \ \ }\n\n=

#. name, q2, feedback
#: m09_qcm/task.yaml
!\nErreur\ de\ syntaxe\ dans\ la\ partie\ ``catch``.\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ return\ Integer.parseInt(s);\n\ \ \ \ \ \ \ catch\ (NumberFormatException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\n\ \ \ }\n\n=

#. name, q2, feedback
#: m09_qcm/task.yaml
!\nIl\ manque\ le\ bloc\ ``try``.\n=

#. name, q2, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ toInt(String\ s)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ Integer.parseInt(s);\n\ \ \ \ \ \ \ }\ catch\ {\n\ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ }\n\ \ \ }\n\n=

#. name, q3, header
#: m09_qcm/task.yaml
!\nSoit\ la\ m\u00e9thode\ ``m``\ suivante\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ int\ m(int\ x,\ int\ y)\ {\n\ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ int\ z\ \=\ x\ /\ y;\n\ \ \ \ \ \ \ \ \ \ \ \ return\ z;\n\ \ \ \ \ \ \ \ }\ catch\ (ArithmeticException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (x\ >\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ x;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ y;\n\ \ \ \ }\n\nParmi\ les\ ensembles\ d'affirmations\ suivantes,\ lequel\ est\ correct\ ?\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(10,\ 5)``\ retourne\ ``2``\n-\ ``m(10,\ 0)``\ retourne\ ``10``\n-\ ``m(-10,\ 0)``\ retourne\ ``0``\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(8,\ 3)``\ retourne\ ``2``\n-\ ``m(8,\ 0)``\ retourne\ ``8``\n-\ ``m(0,\ 0)``\ retourne\ ``0``\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(10,\ 5)``\ retourne\ ``10``\n-\ ``m(8,\ 0)``\ retourne\ ``8``\n-\ ``m(-10,\ 0)``\ retourne\ ``0``\n=

#. name, q3, feedback
#: m09_qcm/task.yaml
!\nPas\ d'exception\ \u00e0\ la\ premi\u00e8re\ ligne.\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(8,\ 3)``\ retourne\ ``3``\n-\ ``m(10,\ 0)``\ retourne\ ``10``\n-\ ``m(0,\ 0)``\ retourne\ ``0``\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(10,\ 5)``\ retourne\ ``2``\n-\ ``m(10,\ 0)``\ retourne\ ``0``\n-\ ``m(0,\ 0)``\ retourne\ ``0``\n=

#. name, q3, feedback
#: m09_qcm/task.yaml
!\nRetourne\ ``x``\ \u00e0\ la\ deuxi\u00e8me\ ligne.\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(8,\ 3)``\ retourne\ ``2``\n-\ ``m(8,\ 0)``\ retourne\ ``0``\n-\ ``m(-10,\ 0)``\ retourne\ ``0``\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(8,\ 3)``\ retourne\ ``2``\n-\ ``m(10,\ 0)``\ retourne\ ``10``\n-\ ``m(-10,\ 0)``\ retourne\ ``-10``\n=

#. name, q3, feedback
#: m09_qcm/task.yaml
!\nRetourne\ ``y``\ \u00e0\ la\ troisi\u00e8me\ ligne.\n=

#. name, q3, text
#: m09_qcm/task.yaml
!\n\n-\ ``m(10,\ 5)``\ retourne\ ``2``\n-\ ``m(10,\ 0)``\ retourne\ ``10``\n-\ ``m(0,\ 0)``\ retourne\ ``1``\n=

#. name, q4, name
#: m09_qcm/task.yaml
!Classes\ d'entr\u00e9e-sortie=

#. name, q4, header
#: m09_qcm/task.yaml
!\nQuelles\ classes\ sont\ les\ plus\ appropri\u00e9es\ pour\ lire\ du\ texte\ \u00e0\ partir\ de\ ``input.txt``\ et\ \u00e9crire\ du\ texte\ vers\ ``output.txt``\ ?\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ BufferedReader\ inbuf\ \=\ new\ BufferedReader(new\ FileReader("input.txt"));\n\ \ \ PrintWriter\ outbuf\ \=\ new\ PrintWriter(new\ FileWriter("output.txt"));\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ BufferedReader\ inbuf\ \=\ new\ BufferedReader("input.txt");\n\ \ \ PrintWriter\ outbuf\ \=\ new\ PrintWriter("output.txt");\n=

#. name, q4, feedback
#: m09_qcm/task.yaml
!\nIl\ n'y\ a\ pas\ de\ constructeur\ ``BufferedReader(String\ filename)``.\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ BufferedReader\ inbuf\ \=\ new\ BufferedReader(new\ FileReader("input.txt"));\n\ \ \ BufferedWriter\ outbuf\ \=\ new\ BufferedWriter(new\ FileWriter("output.txt"));\n=

#. name, q4, feedback
#: m09_qcm/task.yaml
!\n``BufferedWriter``\ a\ des\ possibilit\u00e9s\ tr\u00e8s\ limit\u00e9es,\ ``PrintWriter``\ est\ plus\ judicieux.\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ PrintReader\ inbuf\ \=\ new\ PrintReader(new\ FileReader("input.txt"));\n\ \ \ PrintWriter\ outbuf\ \=\ new\ PrintWriter(new\ FileWriter("output.txt"));\n=

#. name, q4, feedback
#: m09_qcm/task.yaml
!\n``PrintReader```\ n'existe\ pas,\ utilisez\ ``BufferedReader``.\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ InputStream\ inbuf\ \=\ new\ InputStream("input.txt");\n\ \ \ OutputStream\ outbuf\ \=\ new\ OutputStream("output.txt");\n=

#. name, q4, feedback
#: m09_qcm/task.yaml
!\n``InputStream``\ et\ ``OutputStream``\ sont\ appropri\u00e9s\ pour\ des\ donn\u00e9es\ binaires\ plut\u00f4t\ que\ pour\ du\ texte.\n=

#. name, q4, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ Reader\ inbuf\ \=\ new\ Reader("input.txt");\n\ \ \ Writer\ outbuf\ \=\ new\ Writer("output.txt");\n=

#. name, q4, feedback
#: m09_qcm/task.yaml
!\n``Reader``\ et\ ``Writer``\ sont\ des\ classes\ abstraites,\ utilisez\ leurs\ extensions.\n=

#. name, q5, name
#: m09_qcm/task.yaml
!Lecture\ de\ fichier=

#. name, q5, header
#: m09_qcm/task.yaml
!\nParmi\ les\ d\u00e9finitions\ de\ la\ m\u00e9thode\ ``display``\ suivantes,\ lequel\ affiche\ correctement\ le\ contenu\ d'un\ fichier\ sur\ ``System.out``\ ?\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ buf.close();\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line\ \=\ readLine(buf);\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ line\ \=\ readLine(buf);\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ close(buf);\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m09_qcm/task.yaml
!\n``readLine``\ et\ ``close``\ sont\ des\ m\u00e9thodes\ de\ ``buf``.\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m09_qcm/task.yaml
!\nIl\ faut\ fermer\ le\ flux\ \u00e0\ la\ fin.\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ "")\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ buf.close();\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#. name, q8, feedback
#: m09_qcm/task.yaml m10_qcm/task.yaml
!\nLe\ test\ de\ boucle\ est\ incorrect.\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ buf.close();\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m09_qcm/task.yaml
!\nSeule\ la\ premi\u00e8re\ ligne\ du\ fichier\ est\ lue.\n=

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ String\ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ buf.close();\n\ \ \ }\n=

#. name, q5, feedback
#: m09_qcm/task.yaml
#, fuzzy
!\nIl\ manque\ la\ gestion\ des\ exceptions.\n=make sure you manage the exceptions.\n

#. name, q5, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ void\ display(String\ filename)\ {\n\ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ BufferedReader\ buf\ \=\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ \ \ \ String\ line;\n\ \ \ \ \ \ \ \ \ \ \ while\ (line\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ line\ \=\ buf.readLine();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(line);\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ buf.close();\n\ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m09_qcm/task.yaml
!\nLa\ gestion\ de\ la\ variable\ ``line``\ est\ incorrecte,\ la\ boucle\ ne\ sera\ jamais\ ex\u00e9cut\u00e9e.\n=

#. name, q6, name
#: m09_qcm/task.yaml
!La\ classe\ Scanner=

#. name, q6, header
#: m09_qcm/task.yaml
!\nConsid\u00e9rons\ un\ fichier\ ``numbers.txt``\ qui\ contient\ des\ nombres\ entiers\ s\u00e9par\u00e9s\ par\ des\ espaces,\ par\ exemple\n\n..\ code-block\:\:\ java\n\n\ \ \ \ 1\ 2\ 3\ 4\n\ \ \ \ 1\ 10\ 100\n\ \ \ \ 1348\n\nQuel\ fragment\ de\ programme\ utilise\ correctement\ un\ ``Scanner``\ (voir\ |Scanner|_)\ pour\ imprimer\ la\ somme\ de\ ces\ nombres\ ?\n\n\n..\ _Scanner\ \:\ http\://docs.oracle.com/javase/1.5.0/docs/api/java/util/Scanner.html\n..\ |Scanner|\ replace\:\:\ ``java.util.Scanner``\n=

#. name, q6, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Scanner;\n\ \ \ ...\n\ \ \ try\ {\n\ \ \ \ \ \ \ Scanner\ scan\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ Scanner(new\ java.io.FileReader("numbers.txt"));\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ while\ (scan.hasNextInt())\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ scan.nextInt();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ scan.close();\n\ \ \ \ \ \ \ System.out.println(sum);\n\ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ }\n=

#. name, q6, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.Scanner;\n\ \ \ ...\n\ \ \ try\ {\n\ \ \ \ \ \ \ Scanner\ scan\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ Scanner(new\ java.io.FileReader("numbers.txt"));\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ while\ (scan.hasNextInt())\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ scan.nextInt();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ scan.close();\n\ \ \ \ \ \ \ System.out.println(sum);\n\ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ }\n=

#. name, q6, feedback
#: m09_qcm/task.yaml
!\n``Scanner``\ est\ dans\ le\ package\ ``java.util``.\n=

#. name, q6, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Scanner;\n\ \ \ ...\n\ \ \ try\ {\n\ \ \ \ \ \ \ Scanner\ scan\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ Scanner("numbers.txt");\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ while\ (scan.hasNextInt())\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ scan.nextInt();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ scan.close();\n\ \ \ \ \ \ \ System.out.println(sum);\n\ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ }\n=

#. name, q6, feedback
#: m09_qcm/task.yaml
!\nIl\ n'y\ a\ pas\ de\ constructeur\ ``Scanner(String\ filename)``.\ \ Utiliser\ un\ ``FileReader``.\n=

#. name, q6, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Scanner;\n\ \ \ ...\n\ \ \ try\ {\n\ \ \ \ \ \ \ Scanner\ scan\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ Scanner(new\ java.io.FileReader("numbers.txt"));\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ while\ (\!scan.eof())\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ scan.nextInt();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ scan.close();\n\ \ \ \ \ \ \ System.out.println(sum);\n\ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ }\n=

#. name, q6, feedback
#: m09_qcm/task.yaml
!\n``Scanner``\ n'a\ pas\ de\ m\u00e9thode\ ``eof``.\ \ Utiliser\ ``hasNextInt``.\n=

#. name, q6, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Scanner;\n\ \ \ ...\n\ \ \ try\ {\n\ \ \ \ \ \ \ Scanner\ scan\ \=\n\ \ \ \ \ \ \ \ \ \ \ new\ Scanner(new\ java.io.FileReader("numbers.txt"));\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ while\ (hasNextInt(scan))\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ nextInt(scan);\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ scan.close();\n\ \ \ \ \ \ \ System.out.println(sum);\n\ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ System.err.println("Erreur\:\ "\ +\ e);\n\ \ \ }\n=

#. name, q6, feedback
#: m09_qcm/task.yaml
!\n``hasNextInt``\ et\ ``nextInt``\ sont\ des\ m\u00e9thodes\ de\ ``scan``.\n=

#. name, q7, name
#: m09_qcm/task.yaml
!M\u00e9thodes\ de\ comparaison=

#. name, q7, header
#: m09_qcm/task.yaml
!\nOn\ d\u00e9sire\ trier\ et\ faire\ des\ recherches\ sur\ un\ tableau\ contenant\ des\ objets\ qui\ repr\u00e9sentent\ des\ \u00e9tudiants\ (``Student[]``)\ \u00e0\ l'aide\ des\ m\u00e9thodes\ de\ la\ classe\ |Arrays|_.\ \ Quelles\ interfaces\ et\ m\u00e9thodes\ la\ classe\ ``Student``\ doit-elle\ impl\u00e9menter\ ?\n\n\n..\ _Arrays\ \:\ http\://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html\n..\ |Arrays|\ replace\:\:\ ``java.util.Arrays``\n=

#. name, q7, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Student\ implements\ Comparable\ {\n\ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ int\ compareTo(Object\ o)\ {\ ...\ }\n\ \ \ }\n=

#. name, q7, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Student\ {\n\ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ int\ compareTo(Object\ o)\ {\ ...\ }\n\ \ \ }\n=

#. name, q7, feedback
#: m09_qcm/task.yaml
!\nIl\ faut\ d\u00e9clarer\ qu'on\ impl\u00e9mente\ l'interface\ ``Comparable``.\n=

#. name, q7, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Student\ implements\ Comparable\ {\n\ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ public\ boolean\ equals(Student\ stud)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ int\ compareTo(Student\ stud)\ {\ ...\ }\n\ \ \ }\n=

#. name, q7, feedback
#: m09_qcm/task.yaml
!\nLes\ m\u00e9thodes\ ``equals``\ et\ ``compareTo``\ doivent\ prendre\ un\ ``Object``\ en\ param\u00e8tre.\n=

#. name, q7, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Student\ implements\ Comparable\ {\n\ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ boolean\ greater(Object\ o)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ boolean\ less(Object\ o)\ {\ ...\ }\n\ \ \ }\n=

#. name, q7, feedback
#: m09_qcm/task.yaml
!\nCe\ ne\ sont\ pas\ les\ bonnes\ m\u00e9thodes\ pour\ ``Comparable``.\n=

#. name, q7, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ Student\ implements\ Equality,\ Comparable\ {\n\ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ public\ boolean\ equals(Object\ o)\ {\ ...\ }\n\ \ \ \ \ \ \ public\ int\ compareTo(Object\ o)\ {\ ...\ }\n\ \ \ }\n=

#. name, q7, feedback
#: m09_qcm/task.yaml
!\nIl\ n'y\ a\ pas\ d'interface\ ``Equality``;\ ``equals``\ est\ une\ m\u00e9thode\ de\ ``Object``.\n=

#. name, q8, name
#: m09_qcm/task.yaml
!La\ classe\ Arrays=

#. name, q8, header
#: m09_qcm/task.yaml
!\nEtant\ donn\u00e9\ un\ tableau\ non-tri\u00e9\ d'\u00e9tudiants\ ``Student[]\ groupe``\ et\ un\ \u00e9tudiant\ ``Student\ stud``,\ comment\ v\u00e9rifier\ si\ ``stud``\ appartient\ \u00e0\ ``groupe``\ en\ utilisant\ les\ m\u00e9thodes\ de\ la\ classe\ |Arrays|_,\ en\ supposant\ que\ ``Student``\ impl\u00e9mente\ les\ interfaces\ et\ m\u00e9thodes\ mentionn\u00e9es\ \u00e0\ la\ question\ 7\ ?\n\n\n..\ _Arrays\ \:\ http\://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html\n..\ |Arrays|\ replace\:\:\ ``java.util.Arrays``\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ void\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ Arrays.sort(groupe);\n\ \ \ \ \ \ \ int\ index\ \=\ Arrays.binarySearch(groupe,\ stud);\n\ \ \ \ \ \ \ return\ stud.equals(groupe[index]);\n\ \ \ }\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ boolean\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ groupe.sort();\n\ \ \ \ \ \ \ int\ index\ \=\ groupe.binarySearch(stud);\n\ \ \ \ \ \ \ return\ stud.equals(groupe[index]);\n\ \ \ }\n=

#. name, q8, feedback
#: m09_qcm/task.yaml
!\n``sort``\ et\ ``binarySearch``\ sont\ des\ m\u00e9thodes\ de\ classe\ de\ ``Arrays``.\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ boolean\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ Student[]\ sorted\ \=\ Arrays.sort(groupe);\n\ \ \ \ \ \ \ int\ index\ \=\ Arrays.binarySearch(sorted,\ stud);\n\ \ \ \ \ \ \ return\ stud.equals(groupe[index]);\n\ \ \ }\n=

#. name, q8, feedback
#: m09_qcm/task.yaml
!\n``binarySearch``\ ne\ retourne\ pas\ de\ r\u00e9sultat,\ elle\ modifie\ le\ tableau.\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ boolean\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ Arrays.sort(groupe);\n\ \ \ \ \ \ \ return\ Arrays.binarySearch(groupe,\ stud);\n\ \ \ }\n=

#. name, q8, feedback
#: m09_qcm/task.yaml
!\n``binarySearch``\ retourne\ un\ indice,\ pas\ un\ bool\u00e9en.\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ boolean\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ int\ index\ \=\ Arrays.binarySearch(groupe,\ stud);\n\ \ \ \ \ \ \ return\ stud.equals(groupe[index]);\n\ \ \ }\n=

#. name, q8, feedback
#: m09_qcm/task.yaml
!\n``binarySearch``\ ne\ fonctionne\ que\ sur\ un\ tableau\ tri\u00e9.\n=

#. name, q8, text
#: m09_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.Arrays;\n\ \ \ ...\n\ \ \ public\ static\ boolean\ contains(Student[]\ groupe,\ Student\ stud)\ {\n\ \ \ \ \ \ \ Arrays.sort(groupe);\n\ \ \ \ \ \ \ int\ index\ \=\ Arrays.binarySearch(groupe,\ stud);\n\ \ \ \ \ \ \ return\ stud\ \=\=\ groupe[index];\n\ \ \ }\n=

#. name, q8, feedback
#: m09_qcm/task.yaml
!\nLa\ comparaison\ dans\ le\ ``return``\ ne\ convient\ pas,\ on\ compare\ des\ r\u00e9f\u00e9rences.\n=

#. context
#: m09dem1/task.yaml
!La\ classe\ ``Integer``\ dispose\ d'une\ m\u00e9thode\ ``compareTo()``\ dont\ voici\ la\ signature\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ Compares\ two\ Integer\ objects\ numerically.\n\ \ \ \ \ \ \ \ *\ @pre\ anotherInteger\!\=null\n\ \ \ \ \ \ \ \ *\ @post\ returns\ the\ value\ 0\ if\ this\ Integer\ is\ equal\ to\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ the\ \ \ \ argument\ Integer;\ a\ value\ less\ than\ 0\ if\ this\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ Integer\ is\ numerically\ less\ than\ the\ argument\ Integer;\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ and\ a\ value\ greater\ than\ 0\ if\ this\ Integer\ is\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ numerically\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ greater\ than\ the\ argument\ Integer\ (signed\ comparison).\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ compareTo(Integer\ anotherInteger)\n\nComment\ feriez-vous\ pour\ impl\u00e9menter\ une\ m\u00e9thode\ similaire,\ mais\ de\ signature\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ int\ compareTo(Object\ o)\n\n?\n\n\u00c9crivez\ le\ corps\ de\ cette\ nouvelle\ m\u00e9thode\ qui\ prend\ un\ argument\ de\ type\ ``Object``\ au\ lieu\ d'un\ argument\ de\ type\ ``Integer``.\ \u00c9crivez\ la\ r\u00e9ponse\ en\ une\ seule\ ligne.\ Notez\ que\ l'argument\ ``o``\ sera\ toujours\ du\ type\ ``Integer``.\ Pensez\ \u00e0\ utiliser\ des\ m\u00e9thodes\ qui\ sont\ d\u00e9j\u00e0\ \u00e0\ votre\ disposition.=

#. name
#: m09dem1/task.yaml
!Mission\ 9\:\ Question\ de\ d\u00e9marrage\ 1\:\ Integer.compareTo=

#. name, q1, name
#: m09dem1/task.yaml
!Le\ corps\ de\ compareTo(Object\ o)=

#. name, q1, header
#: m09dem1/task.yaml
!\u00c9crivez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ compareTo(Object\ o).\ Vous\ n'avez\ pas\ besoin\ d'utiliser\ plus\ d'une\ ligne,\ pensez\ \u00e0\ utiliser\ les\ m\u00e9thodes\ d\u00e9j\u00e0\ \u00e0\ votre\ disposition.=

#. context
#: m09dem2/task.yaml
!Un\ \u00e9tudiant\ nomm\u00e9\ Jean-Complexe\ vient\ vers\ vous\ et\ vous\ dit\ que\ lui\ et\ ses\ amis\ d\u00e9testent\ leur\ pr\u00e9nom\ car\ leur\ pr\u00e9nom\ est\ compos\u00e9,\ or,\ ils\ trouvent\ cela\ trop\ long\ \u00e0\ prononcer.\ Ils\ d\u00e9sireraient\ ne\ garder\ que\ la\ premi\u00e8re\ partie\ de\ leur\ pr\u00e9nom.\n\nComme\ la\ fin\ d'ann\u00e9e\ approche\ \u00e0\ grands\ pas\ cette\ histoire\ vous\ donne\ une\ id\u00e9e\ pour\ vous\ entra\u00eener\ pour\ l'examen\ de\ java\ et\ vous\ d\u00e9cidez\ d'impl\u00e9menter\ une\ m\u00e9thode\ qui\ prend\ un\ nom\ de\ fichier\ comme\ argument.\ Ce\ fichier\ contient\ sur\ chaque\ ligne\ un\ pr\u00e9nom\ compos\u00e9\ (les\ deux\ parties\ du\ pr\u00e9nom\ sont\ s\u00e9par\u00e9es\ par\ le\ caract\u00e8re\ ``'-'``).\n\nLe\ but\ de\ votre\ m\u00e9thode\ est\ de\ lire\ chaque\ ligne\ du\ fichier\ et,\ pour\ chaque\ ligne,\ afficher\ sur\ la\ sortie\ standard\ uniquement\ la\ premi\u00e8re\ partie\ de\ ce\ nom\ compos\u00e9,\ avec\ un\ r\u00e9sultat\ par\ ligne.\ En\ regardant\ l'API\ Java\ sur\ les\ ``String``\ (http\://docs.oracle.com/javase/7/docs/api/java/lang/String.html),\ vous\ vous\ \u00eates\ rendu\ compte\ que\ la\ m\u00e9thode\ ``split``\ vous\ sera\ d'une\ grande\ aide.\n\nBien\ entendu,\ vous\ savez\ que\ lire\ dans\ des\ fichier\ en\ Java\ peut\ provoquer\ des\ exceptions\ et\ votre\ m\u00e9thode\ s'arrangera\ pour\ les\ contenir\ et\ retourner\ la\ valeur\ ``-1``\ lorsque\ l'une\ d'entre\ elles\ appara\u00eetra.\n\nPrenons\ un\ exemple.\ Si\ le\ contenu\ du\ fichier\ est\ ci-dessous\ \:\n\n\:\:\n\n\ \ \ \ Saint-Fran\u00e7ois\n\ \ \ \ Jean-Pol\n\ \ \ \ Johnny-Hallyday\n\n\nVotre\ programme\ affichera\ ces\ lignes\ sur\ la\ sortie\ standard\ (``System.out``)\:\n\n\:\:\n\n\ \ \ \ Saint\n\ \ \ \ Jean\n\ \ \ \ Johnny\n\n\nApr\u00e8s\ avoir\ m\u00fbrement\ r\u00e9fl\u00e9chi,\ vous\ avez\ d\u00e9cid\u00e9\ de\ la\ signature\ de\ votre\ m\u00e9thode\ et\ il\ ne\ vous\ reste\ plus\ qu'\u00e0\ l'impl\u00e9menter\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ \ \ \ \ @pre\ \ \ \ \ filename\ est\ le\ nom\ d'un\ fichier.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ si\ le\ fichier\ d\u00e9sign\u00e9\ par\ filename\ est\ lisible,\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ chaque\ ligne\ du\ fichier\ contient\ un\ String\ en\ deux\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ parties,\ s\u00e9par\u00e9es\ par\ un\ "-".\n\ \ \ \ \ *\n\ \ \ \ \ *\ \ \ \ \ @post\ \ \ \ imprime\ sur\ la\ sortie\ standard\ la\ premi\u00e8re\ partie\ de\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ chaque\ ligne\ du\ fichier\ d\u00e9sign\u00e9\ par\ filename,\ un\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ r\u00e9sultat\ par\ ligne.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ Retourne\ -1\ si\ une\ exception\ a\ \u00e9t\u00e9\ lanc\u00e9e.\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int\ premierPrenom(String\ filename){\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }=

#. name
#: m09dem2/task.yaml
!Mission\ 9\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ la\ m\u00e9thode\ premierPrenom()=

#. name, q1, name
#: m09dem2/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ premierPrenom=

#. name, q1, header
#: m09dem2/task.yaml
!\u00c9crivez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ premierPrenom().\ Veillez\ bien\ \u00e0\ n'\u00e9crire\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ recopiez\ pas\ sa\ signature.\ Respectez\ bien\ les\ sp\u00e9cifications.=

#. context
#: m09real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 9.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ Dico.java\n-\ Dictionary.java\n-\ Word.java\n-\ README.txt=

#. name
#: m09real/task.yaml
!Mission\ 9\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m09real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 9=

#. context
#: m10Q1/task.yaml
!Un\ \u00e9tudiant\ a\ \u00e9crit\ la\ classe\ suivante,\ mais\ il\ lui\ manque\ une\ m\u00e9thode\ pour\ qu'elle\ puisse\ \u00eatre\ compil\u00e9e.\ Pourriez-vous\ impl\u00e9menter\ cette\ m\u00e9thode\ ?\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Fraction\ implements\ Comparable<Fraction>\ {\n\ \ \ \ \ \ \ \ private\ int\ num;\ //\ numerateur\n\ \ \ \ \ \ \ \ private\ int\ den;\ //\ denominateur\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ num\ >\=\ 0,\ den\ >\ 0\n\ \ \ \ \ \ \ \ \ *\ @post\ construit\ la\ fraction\ num/den\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Fraction(int\ num,\ int\ den)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.num\ \=\ num;\n\ \ \ \ \ \ \ \ \ \ \ \ this.den\ \=\ den;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ d\u00e9nominateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getDen()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.den;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ num\u00e9rateur\ de\ la\ fraction\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ this.num;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ //\ Ins\u00e9rez\ le\ code\ manquant\n\ \ }\n\nTel\ qu'il\ est\ \u00e9crit,\ ce\ code\ ne\ compile\ pas.\ Il\ manque\ une\ m\u00e9thode.\ Pourriez-vous\ l'ajouter\ (signature\ et\ corps)\ ?=

#. name
#: m10Q1/task.yaml
!Mission\ 10\ \:\ Q*\ Fraction=

#. context
#: m10Q2/task.yaml
!Revenons\ \u00e0\ la\ classe\ Fraction.\ Pour\ faciliter\ la\ cr\u00e9ation\ de\ fractions\ sur\ base\ de\ donn\u00e9es\ lues\ depuis\ le\ clavier\ ou\ dans\ un\ fichier,\ on\ vous\ demande\ d'ajouter\ \u00e0\ cette\ classe\ un\ constructeur\ qui\ prend\ comme\ argument\ un\ String.\ Si\ ce\ String\ a\ comme\ format\ x/y\ avec\ x\ et\ y\ qui\ sont\ des\ entiers,\ il\ cr\u00e9e\ l'instance\ de\ la\ classe\ Fraction\ ayant\ x\ comme\ num\u00e9rateur\ et\ y\ comme\ d\u00e9nominateur.\ Pour\ les\ cas\ de\ String\ null\ /\ qui\ ne\ respectent\ pas\ le\ format\ demand\u00e9/\ qui\ g\u00e9n\u00e8re\ une\ division\ par\ z\u00e9ro,\ lancez\ une\ NumberFormatException.\n\n..\ code-block\:\:\ java\n\n\ \ public\ class\ Fraction\ implements\ Comparable<Fraction>\ {\n\ \ \ \ private\ int\ num;\ //\ numerateur\n\ \ \ \ private\ int\ den;\ //\ denominateur\n\n\ \ \ \ /**\n\ \ \ \ *\ @pre\ den>0\n\ \ \ \ *\ @post\ construit\ la\ fraction\ num/den\n\ \ \ \ */\n\ \ \ \ public\ Fraction(int\ num,\ int\ den)\ {\n\ \ \ \ \ \ \ \ this.num\=num;\n\ \ \ \ \ \ \ \ this.den\=den;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ construit\ une\ fraction\ sur\ base\ d'une\ chaine\ caract\u00e8re\ de\ la\n\ \ \ \ *\ forme\ num/den\ \ o\u00f9\ num\ est\ un\ entier\ et\ den\ un\ entier\ non\ nul\n\ \ \ \ *\ lance\ une\ exception\ lorsque\ la\ cha\u00eene\ de\ caract\u00e8res\ pass\u00e9e\n\ \ \ \ *\ en\ argument\ ne\ respecte\ pas\ ce\ format\ ou\ que\ le\ d\u00e9nominateur\ est\ nul\n\ \ \ \ */\n\ \ \ \ public\ Fraction(String\ s)\ throws\ NumberFormatException\ {\n\ \ \ \ \ \ \ \ //\ \u00e0\ compl\u00e9ter\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ le\ d\u00e9nominateur\ de\ la\ fraction\n\ \ \ \ */\n\ \ \ \ public\ int\ getDen()\ {\n\ \ \ \ \ \ \ \ return\ this.den;\n\ \ \ \ }\n\n\ \ \ \ /*\n\ \ \ \ *\ @pre\ -\n\ \ \ \ *\ @post\ retourne\ le\ num\u00e9rateur\ de\ la\ fraction\n\ \ \ \ */\n\ \ \ \ public\ int\ getNum()\ {\n\ \ \ \ \ \ \ \ return\ this.num;\n\ \ \ \ }\n\ \ }=

#. name
#: m10Q2/task.yaml
!Mission\ 10\ \:\ Q*\ Fraction\ -\ Constructeur=

#. name, q1, name
#: m10Q2/task.yaml
!Constructeur\ de\ Fraction=

#. name, q1, header
#: m10Q2/task.yaml m10Q3/task.yaml
!Ecrivez\ le\ corps\ du\ constructeur=

#. context
#: m10Q3/task.yaml
!Dans\ la\ classe\ ``Student``,\ impl\u00e9mentez\ le\ second\ ``constructeur``\ qui\ prend\ comme\ argument\ un\ ``String``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ classe\ d\u00e9crivant\ un\ \u00e9tudiant\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ *\ @version\ Novembre\ 2016\n\ \ \ \ \ */\n\ \ \ \ import\ java.util.Arrays;\n\ \ \ \ public\ class\ Student\ {\n\ \ \ \ \ \ \ \ public\ String\ nom;\n\ \ \ \ \ \ \ \ public\ double[]\ cotes;\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ nom\ \!\=\ null,\ cotes\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ instance\ de\ la\ classe\ Student\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ lance\ une\ exception\ StudentFormatException\ si\ une\ des\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ cotes\ est\ invalide\ (non\ comprise\ entre\ 0\ et\ 20)\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Student(String\ nom,\ double[]\ cotes)\ throws\ StudentFormatException\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //code\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ construit\ une\ instance\ de\ la\ classe\ Student\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ en\ supposant\ que\ le\ String\ s\ a\ le\ format\ suivant\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ nom;\ 2.5,\ 3.0,\ 6.7\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ Le\ nom\ est\ suivi\ de\ ;\ et\ une\ virgule\ s\u00e9pare\ les\ cotes.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Celles-ci\ doivent\ \u00eatre\ entre\ 0\ et\ 20\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Il\ faut\ au\ moins\ une\ cote\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Si\ le\ format\ n'est\ pas\ respect\u00e9,\ le\ constructeur\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ lance\ une\ StudentFormatException\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ comme\ argument\ le\ String\ pass\u00e9\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Student(String\ s)\ throws\ StudentFormatException\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }=

#. name
#: m10Q3/task.yaml
!Mission\ 10\ \:\ Q*\ Student\ -\ Constructeur=

#. name, q1, name
#: m10Q3/task.yaml
!Constructeur\ de\ Student=

#. context
#: m10Q4/task.yaml
!La\ classe\ AList\ contient\ une\ impl\u00e9mentation\ simple\ d'un\ ArrayList\ sur\ base\ d'un\ tableau\ dont\ la\ taille\ augmente\ au\ fur\ et\ \u00e0\ mesure\ que\ l'on\ modifie\ la\ liste.\ Ecrivez\ le\ code\ des\ principales\ m\u00e9thodes\ de\ cette\ classe\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ impl\u00e9mentation\ partielle\ d'une\ ArrayList\ en\ utilisant\ un\ tableau\n\ \ \ \ \ *\n\ \ \ \ \ *\ Cette\ impl\u00e9mentation\ supporte\ les\ m\u00e9thodes\ suivantes\ \:\n\ \ \ \ \ *\n\ \ \ \ \ *\ Constructeur\ \:\ cr\u00e9e\ une\ liste\ vide\ \ \u2022\ \ AList()\n\ \ \ \ \ *\ Ins\u00e8re\ d\u2019un\ \u00e9l\u00e9ment\ \u00e0\ la\ position\ index\ \ \u2022\ \ void\ add\ (int\ index,\ Object\ obj)\n\ \ \ \ \ *\ Renvoie\ l\u2019objet\ en\ position\ index\ \ \u2022\ \ Object\ get\ (int\ index)\n\ \ \ \ \ *\ Remplace\ l\u2019\u00e9l\u00e9ment\ en\ position\ index\ \ \u2022\ \ void\ set\ (int\ index,\ Object\ obj)\n\ \ \ \ \ *\ Retire\ et\ renvoie\ l\u2019\u00e9l\u00e9ment\ en\ position\ index\ \ \u2022\ \ Object\ remove\ (int\ index)\n\ \ \ \ \ *\ Renvoie\ true\ si\ obj\ appartient\ \u00e0\ la\ liste\ \ \u2022\ \ boolean\ contains\ (Object\ obj)\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O;\ Bonaventure\n\ \ \ \ \ *\ @version\ Novembre\ 2016\n\ \ \ \ \ */\n\ \ \ \ public\ class\ AList\ {\n\ \ \ \ \ \ \ \ private\ Object[]\ l;\n\n\ \ \ \ \ \ \ \ public\ static\ final\ int\ INIT_SIZE\ \=\ 5;\ //\ taille\ initiale\ d'un\ AList\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ cr\u00e9\u00e9\ une\ AList\ initialement\ vide\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ permettant\ de\ stocker\ 5\ r\u00e9f\u00e9rences\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ AList()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ Object[INIT_SIZE];\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ l'objet\ o\ se\ trouve\ dans\ l'AList\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ contains(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ l'objet\ se\ trouvant\ \u00e0\ la\ position\ index\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ null\ si\ rien\ n'est\ stock\u00e9\ \u00e0\ cette\ position\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ ou\ si\ index\ >\=\ length\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Object\ get(int\ index)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @retourne\ la\ taille\ actuelle\ de\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ length()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.length;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ 0\ <\=\ index\ <\ this.length()\n\ \ \ \ \ \ \ \ \ *\ @post\ remplace\ la\ r\u00e9f\u00e9rence\ se\ trouvant\ \u00e0\ l'index\ dans\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ la\ liste\ par\ la\ r\u00e9f\u00e9rence\ \u00e0\ o\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ set(int\ index,\ Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ remplace\ l'objet\ o\ dans\ la\ liste\ en\ position\ index\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Si\ index\ >\=\ length,\ augmente\ d'abord\ la\ taille\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ de\ la\ liste\ en\ cr\u00e9ant\ un\ nouveau\ tableau\ et\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ en\ y\ recopiant\ toutes\ les\ r\u00e9f\u00e9rences\ de\ la\ liste\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ this\ avant\ de\ remplacer\ l'objet\ o\ \u00e0\ l'indice\ index\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ add(int\ index,\ Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nVous\ pouvez\ tester\ vos\ m\u00e9thodes\ individuellement.=

#. name
#: m10Q4/task.yaml
!Mission\ 10\ \:\ Q*\ AList=

#. name, q1, header
#: m10Q4/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ contains=

#. name, q2, name
#: m10Q4/task.yaml
#, fuzzy
!Get=is

#. name, q2, header
#: m10Q4/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ get=

#. name, q3, name
#: m10Q4/task.yaml
!Add=

#. name, q3, header
#: m10Q4/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ add=

#. name, q4, name
#: m10Q4/task.yaml
#, fuzzy
!Set=is

#. name, q4, header
#: m10Q4/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ set=

#. context
#: m10Q5/task.yaml
!On\ vous\ fournit\ une\ classe\ ``Vector``\ contenant\ uniquement\ une\ m\u00e9thode\ ``loadVector``\ prenant\ en\ param\u00e8tre\ un\ ``String``\ appel\u00e9\ filename.\nLa\ m\u00e9thode\ \u00e0\ les\ sp\u00e9cifications\ suivantes\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.io.BufferedReader;\n\ \ \ \ import\ java.io.FileReader;\n\ \ \ \ import\ java.io.IOException;\n\ \ \ \ import\ java.io.FileNotFoundException;\n\ \ \ \ import\ java.util.ArrayList;\n\n\ \ \ \ /**\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ ogoletti\n\ \ \ \ \ *\ @version\ 29/11/16\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Vector\ {\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ filename\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ lit\ dans\ le\ fichier\ dont\ le\ nom\ est\ fileName\ le\ \ \ \ \ contenu\ du\ vecteur\ v\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ format\ du\ fichier\ est\ \:\ un\ \u00e9l\u00e9ment\ par\ ligne\ \ \ \ \ en\ commen\u00e7ant\ par\ v[0]\ ...\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ Les\ lignes\ \u00e0\ un\ format\ incorrect\ sont\ ignor\u00e9es.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ En\ cas\ d'erreur\ d'entr\u00e9e/sortie\ (exception,\ \ \ \ \ fichier\ non\ lisible,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ nombre\ incorrect\ d'\u00e9l\u00e9ments\ )\ retourne\ null\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ static\ double[]\ loadVector(String\ filename)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //\ Question\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\nOn\ vous\ demande\ d'utiliser\ ``BufferedReader``\ pour\ r\u00e9pondre\ \u00e0\ cette\ question.=

#. name
#: m10Q5/task.yaml
!Mission\ 10\:\ Q*\ Vecteur=

#. name, q1, name
#: m10Q5/task.yaml
!loadVector=

#. name, q1, header
#: m10Q5/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ loadVector=

#. context
#: m10Q6/task.yaml
!On\ vous\ fournit\ une\ classe\ ``Matrix``\ contenant\ uniquement\ une\ m\u00e9thode\ ``loadMatrix``\ prenant\ en\ param\u00e8tre\ un\ ``String``\ appel\u00e9\ filename.\nLa\ m\u00e9thode\ \u00e0\ les\ sp\u00e9cifications\ suivantes\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.io.BufferedReader;\n\ \ \ \ import\ java.io.FileReader;\n\ \ \ \ import\ java.io.IOException;\n\ \ \ \ import\ java.io.FileNotFoundException;\n\n\ \ \ \ public\ class\ Matrix\ {\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ \ \ \ filename\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ \ \ \ lit\ dans\ le\ fichier\ dont\ le\ nom\ est\ fileName\ le\ contenu\ d'une\ matrice\ mxn\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ le\ format\ du\ fichier\ est\ \:\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ premi\u00e8re\ ligne\ \:\ l'entier\ m\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ deuxi\u00e8me\ ligne\ \:\ l'entier\ n\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ lignes\ suivantes\ \:\ une\ cha\u00eene\ du\ format\ i,j\ val\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ o\u00f9\ 0<\=i<m\ et\ 0<\=j<n\ et\ val\ est\ un\ r\u00e9el\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ En\ cas\ d'erreur\ d'entr\u00e9e/sortie\ (exception,\ fichier\ non\ lisible,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ nombre\ incorrect\ d'\u00e9l\u00e9ments,\ mauvais\ format)\ retourne\ null\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ static\ double[][]\ loadMatrix(String\ filename)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //A\ compl\u00e9ter\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\n\n\nOn\ vous\ demande\ d'utiliser\ ``BufferedReader``\ pour\ r\u00e9pondre\ \u00e0\ cette\ question.=

#. name
#: m10Q6/task.yaml
!Mission\ 10\:\ Q*\ Matrix=

#. name, q1, name
#: m10Q6/task.yaml
!loadMatrix=

#. name, q1, header
#: m10Q6/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ loadMatrix=

#. context
#: m10_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 10.\ ArrayList\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ \ \ -\ |jn8.3|_\n\ \ \ \ \ \ \ \ -\ |jn8.3.3|_\n\ \ \ \ \ \ \ \ -\ |jn8.3.4|_\n\ \ \ \ \ \ \ \ -\ |jn8.3.5|_\n\ \ \ \ -\ |jn10.1|_\n\ \ \ \ \ \ \ \ -\ |jn10.1.3|_\n\ \ \ \ \ \ \ \ -\ |jn10.1.4|_\n\ \ \ \ \ \ \ \ -\ |jn10.1.5|_\n\ \ \ \ \ \ \ \ -\ |jn10.1.6|_\n\ \ \ \ \ \ \ \ -\ |jn10.1.7|_\n\ \ \ \ -\ |jn10.2|_\n\ \ \ \ \ \ \ \ -\ |jn10.2.1|_\n\ \ \ \ \ \ \ \ -\ |jn10.2.2|_\n\ \ \ \ -\ |jn11.4|_\n\ \ \ \ \ \ \ \ -\ |jn11.4.1|_\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn8.3\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\n..\ |jn8.3|\ replace\:\:\ `8.3\ \:\ Exceptions\ and\ try..catch`\n\n..\ _jn8.3.3\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\#robustness.3.3\n..\ |jn8.3.3|\ replace\:\:\ `8.3.3\ \:\ Throwing\ Exceptions`\n\n..\ _jn8.3.4\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\#robustness.3.4\n..\ |jn8.3.4|\ replace\:\:\ `8.3.4\ \:\ Mandatory\ Exception\ Handling`\n\n..\ _jn8.3.5\ \:\ http\://math.hws.edu/javanotes/c8/s3.html\#robustness.3.5\n..\ |jn8.3.5|\ replace\:\:\ `8.3.5\ \:\ Programming\ with\ Exceptions`\n\n..\ _jn10.1\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\n..\ |jn10.1|\ replace\:\:\ `10.1\ \:\ Generic\ Programming`\n\n..\ _jn10.1.3\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\#generics.1.3\n..\ |jn10.1.3|\ replace\:\:\ `10.1.3\ \:\ Generic\ Programming\ in\ Java`\n\n..\ _jn10.1.4\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\#generics.1.4\n..\ |jn10.1.4|\ replace\:\:\ `10.1.4\ \:\ The\ Java\ Collection\ Framework`\n\n..\ _jn10.1.5\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\#generics.1.5\n..\ |jn10.1.5|\ replace\:\:\ `10.1.5\ \:\ Iterators\ and\ for-each\ Loops`\n\n..\ _jn10.1.6\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\#generics.1.6\n..\ |jn10.1.6|\ replace\:\:\ `10.1.6\ \:\ Equality\ and\ Comparison`\n\n..\ _jn10.1.7\ \:\ http\://math.hws.edu/javanotes/c10/s1.html\#generics.1.7\n..\ |jn10.1.7|\ replace\:\:\ `10.1.7\ \:\ Generics\ and\ Wrapper\ Classes`\n\n..\ _jn10.2\ \:\ http\://math.hws.edu/javanotes/c10/s2.html\n..\ |jn10.2|\ replace\:\:\ `10.2\ \:\ Lists\ and\ Sets`\n\n..\ _jn10.2.1\ \:\ http\://math.hws.edu/javanotes/c10/s2.html\#generics.2.1\n..\ |jn10.2.1|\ replace\:\:\ `10.2.1\ \:\ ArrayList\ and\ LinkedList`\n\n..\ _jn10.2.2\ \:\ http\://math.hws.edu/javanotes/c10/s2.html\#generics.2.2\n..\ |jn10.2.2|\ replace\:\:\ `10.2.2\ \:\ Sorting`\n\n..\ _jn11.4\ \:\ http\://math.hws.edu/javanotes/c11/s4.html\n..\ |jn11.4|\ replace\:\:\ `11.4\ \:\ Networking`\n\n..\ _jn11.4.1\ \:\ http\://math.hws.edu/javanotes/c11/s4.html\#IO.4.1\n..\ |jn11.4.1|\ replace\:\:\ `11.4.1\ \:\ URLs\ and\ URLConnections`\n=

#. name
#: m10_qcm/task.yaml
!Mission\ 10\:\ QCM=

#. name, q1, name
#: m10_qcm/task.yaml
!Instruction\ throw=

#. name, q1, header
#: m10_qcm/task.yaml
!\nQuelle\ est\ la\ mani\u00e8re\ correcte\ de\ lancer\ une\ exception\ de\ type\ ``IllegalArgumentException``\ signalant\ un\ nombre\ n\u00e9gatif\ ?\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ throw\ new\ IllegalArgumentException("nombre\ negatif");\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Exception\ e\ \=\ new\ IllegalArgumentException("nombre\ negatif");\n\ \ \ throw\ e;\n=

#. name, q1, feedback
#: m10_qcm/task.yaml
!\nL'exception\ ne\ doit\ pas\ n\u00e9cessairement\ \u00eatre\ cr\u00e9\u00e9e\ dans\ l'instruction\ ``throw``.\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ throw\ IllegalArgumentException("nombre\ negatif");\n=

#. name, q1, feedback
#: m10_qcm/task.yaml
!\n``IllegalArgumentException``\ est\ un\ constructeur.\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ return\ new\ IllegalArgumentException("nombre\ negatif");\n=

#. name, q1, feedback
#: m10_qcm/task.yaml
!\nIl\ ne\ s'agit\ pas\ de\ retourner\ un\ r\u00e9sultat\ mais\ de\ lancer\ une\ exception.\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ try\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\ catch\ (IllegalArgumentException\ e)\ {\n\ \ \ \ \ \ \ e.setMessage("nombre\ negatif");\n\ \ \ }\n=

#. name, q1, feedback
#: m10_qcm/task.yaml
#, fuzzy
!\nIl\ s'agit\ de\ lancer\ une\ exception,\ pas\ de\ l'intercepter.\n=Do you throw an exception in particular cases? \n

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ try\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\ catch\ (new\ IllegalArgumentException("nombre\ negatif"))\ {\n\ \ \ \ \ \ \ System.out.println(e.getMessage());\n\ \ \ }\n=

#. name, q1, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ throws\ new\ IllegalArgumentException("nombre\ negatif");\n=

#. name, q1, feedback
#: m10_qcm/task.yaml
!\n``throws``\ intervient\ dans\ les\ signatures,\ ce\ n'est\ pas\ la\ bonne\ instruction.\n=

#. name, q2, name
#: m10_qcm/task.yaml
!Propagation\ d'exceptions=

#. name, q2, header
#: m10_qcm/task.yaml
!\nQu'imprime\ le\ programme\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ main(String[]\ args)\ {\n\ \ \ \ \ \ \ \ System.out.println("Debut\ de\ main");\n\ \ \ \ \ \ \ \ task1();\n\ \ \ \ \ \ \ \ task2();\n\ \ \ \ \ \ \ \ System.out.println("Fin\ de\ main");\n\ \ \ \ }\n\n\ \ \ \ public\ static\ void\ task1()\ {\n\ \ \ \ \ \ \ \ System.out.println("Debut\ de\ task1");\n\ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ task3();\n\ \ \ \ \ \ \ \ }\ catch\ (Exception\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("task1\ intercepte\ "\ +\ e.getMessage());\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ System.out.println("Fin\ de\ task1");\n\ \ \ \ }\n\n\ \ \ \ public\ static\ void\ task2()\ {\n\ \ \ \ \ \ \ \ System.out.println("Debut\ de\ task2");\n\ \ \ \ \ \ \ \ task3();\n\ \ \ \ \ \ \ \ System.out.println("Fin\ de\ task2");\n\ \ \ \ }\n\n\ \ \ \ public\ static\ void\ task3()\ {\n\ \ \ \ \ \ \ \ System.out.println("Debut\ de\ task3");\n\ \ \ \ \ \ \ \ task4();\n\ \ \ \ \ \ \ \ System.out.println("Fin\ de\ task3");\n\ \ \ \ }\n\n\ \ \ \ public\ static\ void\ task4()\ {\n\ \ \ \ \ \ \ \ System.out.println("Debut\ de\ task4");\n\ \ \ \ \ \ \ \ throw\ new\ RuntimeException("boum");\n\ \ \ \ \ \ \ \ System.out.println("Fin\ de\ task4");\n\ \ \ \ }\n\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ task1\ intercepte\ boum\n\ \ \ Fin\ de\ task1\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ java.lang.Exception\:\ boum\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ Fin\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ task1\ intercepte\ boum\n\ \ \ Fin\ de\ task1\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ Fin\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ Fin\ de\ task2\n\ \ \ Fin\ de\ main\n\ \ \ java.lang.Exception\:\ boum\n=

#. name, q2, feedback
#: m10_qcm/task.yaml
!\nL'ex\u00e9cution\ de\ ``main``,\ ``task2``,\ ``task3``\ et\ ``task4``\ ne\ parvient\ pas\ \u00e0\ la\ fin\ \u00e0\ cause\ de\ l'exception\ lanc\u00e9e\ dans\ ``task4``.\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ task1\ intercepte\ boum\n\ \ \ Fin\ de\ task1\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ java.lang.Exception\:\ boum\n=

#. name, q2, feedback
#: m10_qcm/task.yaml
!\nL'ex\u00e9cution\ de\ ``task3``\ ne\ parvient\ pas\ \u00e0\ la\ fin,\ ``task3``\ propage\ l'exception\ de\ ``task4``.\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ task1\ intercepte\ boum\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ java.lang.Exception\:\ boum\n=

#. name, q2, feedback
#: m10_qcm/task.yaml
!\nL'ex\u00e9cution\ de\ ``task1``\ parvient\ \u00e0\ la\ fin,\ l'exception\ de\ ``task3``\ est\ intercept\u00e9e\ et\ trait\u00e9e.\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ java.lang.Exception\:\ boum\n\ \ \ task1\ intercepte\ boum\n\ \ \ Fin\ de\ task1\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ java.lang.Exception\:\ boum\n=

#. name, q2, feedback
#: m10_qcm/task.yaml
!\nLa\ premi\u00e8re\ exception\ lanc\u00e9e\ dans\ ``task4``\ est\ intercept\u00e9e\ dans\ ``task1``,\ elle\ ne\ s'affiche\ pas.\n=

#. name, q2, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ Debut\ de\ main\n\ \ \ Debut\ de\ task1\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ task1\ intercepte\ boum\n\ \ \ Fin\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ Fin\ de\ task1\n\ \ \ Debut\ de\ task2\n\ \ \ Debut\ de\ task3\n\ \ \ Debut\ de\ task4\n\ \ \ java.lang.Exception\:\ boum\n\ \ \ Fin\ de\ task4\n\ \ \ Fin\ de\ task3\n\ \ \ Fin\ de\ task2\n\ \ \ Fin\ de\ main\n=

#. name, q3, name
#: m10_qcm/task.yaml
!D\u00e9claration\ throws=

#. name, q3, header
#: m10_qcm/task.yaml
!\nQuelle\ est\ la\ mani\u00e8re\ correcte\ de\ d\u00e9clarer\ que\ la\ m\u00e9thode\ ``readName``\ peut\ causer\ une\ ``IOException``\ ?\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ String\ readName(Reader\ r)\ throws\ IOException\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ String\ readName(Reader\ r)\ throws\ new\ IOException()\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, feedback
#: m10_qcm/task.yaml
!\n``throws``\ est\ suivi\ d'un\ nom\ de\ classe,\ pas\ d'une\ expression.\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ String\ readName(Reader\ r)\ {\n\ \ \ \ \ \ \ throws\ new\ IOException();\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, feedback
#: m10_qcm/task.yaml
!\nIl\ faut\ d\u00e9clarer\ l'exception\ dans\ la\ signature\ et\ non\ la\ lancer\ dans\ le\ corps\ de\ la\ m\u00e9thode.\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ String\ readName(Reader\ r)\ throw\ IOException\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, feedback
#: m10_qcm/task.yaml
!\n``throw``\ est\ une\ instruction,\ ce\ n'est\ pas\ ce\ qu'il\ faut\ ici.\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ //\ throws\ IOException\n\ \ \ public\ String\ readName(Reader\ r)\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, feedback
#: m10_qcm/task.yaml
!\n``throws``\ doit\ intervenir\ dans\ la\ signature,\ pas\ juste\ en\ commentaire.\n=

#. name, q3, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.io.*;\n\ \ \ ...\n\ \ \ public\ IOException\ readName(Reader\ r)\ {\n\ \ \ \ \ \ \ ...\n\ \ \ }\n=

#. name, q3, feedback
#: m10_qcm/task.yaml
!\n``readName``\ peut\ lancer\ une\ ``IOException``\ et\ non\ la\ retourner\ comme\ r\u00e9sultat.\n=

#. name, q4, name
#: m10_qcm/task.yaml
!Exceptions\ sous\ contr\u00f4le=

#. name, q4, header
#: m10_qcm/task.yaml
!\nConsid\u00e9rons\ le\ programme\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ import\ java.io.*;\n\ \ \ \ ...\n\n\ \ \ \ public\ static\ void\ main(String[]\ args)\ {\n\ \ \ \ \ \ \ \ processFile(args[0]);\n\ \ \ \ }\n\n\ \ \ \ public\ static\ void\ processFile(String\ filename)\ {\n\ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ String[]\ lines\ \=\ readFile(filename);\n\ \ \ \ \ \ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ \ }\ catch\ (IOException\ e)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("cannot\ read\:\ "\ +\ e.getMessage());\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\ \ \ \ public\ static\ String[]\ readFile(String\ filename)\ {\n\ \ \ \ \ \ \ \ BufferedReader\ r\ \=\ new\ BufferedReader(new\ FileReader(filename));\n\ \ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ \ for\ (String\ s\ \=\ r.readLine();\ s\ \!\=\ null;\ s\ \=\ r.readLine())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ r.close();\n\ \ \ \ \ \ \ \ return\ ...;\n\ \ \ \ }\n\nComment\ doit-on\ compl\u00e9ter\ les\ signatures\ des\ trois\ m\u00e9thodes\ pour\ avoir\ toutes\ les\ d\u00e9clarations\ ``throws``\ n\u00e9cessaires,\ sans\ d\u00e9clarations\ inutiles\ ?\n=

#. name, q4, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ main(String[]\ args)\n\ \ \ public\ static\ void\ processFile(String\ filename)\n\ \ \ public\ static\ String[]\ readFile(String\ filename)\ throws\ IOException\n=

#. name, q4, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ main(String[]\ args)\n\ \ \ public\ static\ void\ processFile(String\ filename)\ throws\ IOException\n\ \ \ public\ static\ String[]\ readFile(String\ filename)\ throws\ IOException\n=

#. name, q4, feedback
#: m10_qcm/task.yaml
!\n``processFile``\ intercepte\ ``IOException``,\ il\ ne\ la\ propage\ pas.\n=

#. name, q4, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ main(String[]\ args)\ throws\ IOException\n\ \ \ public\ static\ void\ processFile(String\ filename)\ throws\ IOException\n\ \ \ public\ static\ String[]\ readFile(String\ filename)\ throws\ IOException\n=

#. name, q4, feedback
#: m10_qcm/task.yaml
!\n``processFile``\ intercepte\ ``IOException``,\ il\ ne\ la\ propage\ pas\ et\ ``main``\ non\ plus.\n=

#. name, q4, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ main(String[]\ args)\n\ \ \ public\ static\ void\ processFile(String\ filename)\ throws\ IOException\n\ \ \ public\ static\ String[]\ readFile(String\ filename)\n=

#. name, q4, feedback
#: m10_qcm/task.yaml
!\nC'est\ ``readFile``\ et\ non\ ``processFile``\ qui\ peut\ causer\ une\ ``IOException``,\ \u00e0\ cause\ de\ l'utilisation\ du\ ``BufferedReader``.\n=

#. name, q4, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ static\ void\ main(String[]\ args)\ throws\ IOException\n\ \ \ public\ static\ void\ processFile(String\ filename)\n\ \ \ public\ static\ String[]\ readFile(String\ filename)\ throws\ IOException\n=

#. name, q4, feedback
#: m10_qcm/task.yaml
!\nPuisque\ ``processFile``\ intercepte\ ``IOException``,\ il\ ne\ la\ propage\ pas\ \u00e0\ ``main``.\n=

#. name, q5, name
#: m10_qcm/task.yaml
!D\u00e9finition\ d'exceptions=

#. name, q5, header
#: m10_qcm/task.yaml
!\nParmi\ les\ d\u00e9finitions\ suivantes,\ laquelle\ d\u00e9finit\ correctement\ une\ exception\ hors\ contr\u00f4le\ (unchecked)\ ?\n=

#. name, q5, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ GraveException\ extends\ RuntimeException\ {\n\ \ \ \ \ \ \ public\ GraveException(String\ msg)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(msg);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ GraveException\ extends\ RuntimeException\ {\n\ \ \ \ \ \ \ private\ String\ message;\n\ \ \ \ \ \ \ public\ GraveException(String\ msg)\ {\n\ \ \ \ \ \ \ \ \ \ \ this.message\ \=\ msg;\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m10_qcm/task.yaml
!\nC'est\ syntaxiquement\ correct\ mais\ inad\u00e9quat;\ ``RuntimeException``\ contient\ d\u00e9j\u00e0\ un\ message.\n=

#. name, q5, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ GraveException\ extends\ Exception\ {\n\ \ \ \ \ \ \ public\ GraveException(String\ msg)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(msg);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m10_qcm/task.yaml
!\nCette\ exception\ n'est\ pas\ hors\ contr\u00f4le.\n=

#. name, q5, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ GraveException\ {\n\ \ \ \ \ \ \ public\ GraveException(String\ msg)\ {\n\ \ \ \ \ \ \ \ \ \ \ super(msg);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m10_qcm/task.yaml
!\nPour\ que\ ce\ soit\ une\ exception\ il\ faut\ d\u00e9finir\ une\ sous-classe\ de\ ``Throwable``.\n=

#. name, q5, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ class\ GraveException\ extends\ RuntimeException\ {\n\ \ \ \ \ \ \ public\ GraveException(String\ msg)\ {\n\ \ \ \ \ \ \ \ \ \ \ throw\ new\ GraveException(msg);\n\ \ \ \ \ \ \ }\n\ \ \ }\n=

#. name, q5, feedback
#: m10_qcm/task.yaml
!\nL'utilisation\ de\ ``throw``\ n'a\ pas\ de\ sens\ ici.\n=

#. name, q6, name
#: m10_qcm/task.yaml
!Les\ collections\ Java=

#. name, q6, header
#: m10_qcm/task.yaml
!\nQuel\ groupe\ d'affirmations\ est\ correct\ ?\n=

#. name, q6, text
#: m10_qcm/task.yaml
!``List<T>``\ est\ une\ interface\ qui\ repr\u00e9sente\ une\ s\u00e9quence\ ordonn\u00e9e\ d'\u00e9l\u00e9ments\ de\ type\ ``T``.\ \ ``ArrayList<T>``\ et\ ``LinkedList<T>``\ sont\ des\ impl\u00e9mentations\ de\ ``List<T>``,\ bas\u00e9es\ respectivement\ sur\ des\ tableaux\ et\ sur\ des\ structures\ cha\u00een\u00e9es.\n=

#. name, q6, text
#: m10_qcm/task.yaml
!``List<T>``\ est\ une\ classe\ qui\ repr\u00e9sente\ une\ s\u00e9quence\ ordonn\u00e9e\ d'\u00e9l\u00e9ments\ de\ type\ ``T``.\ \ ``ArrayList<T>``\ et\ ``LinkedList<T>``\ sont\ des\ extensions\ de\ ``List<T>``,\ bas\u00e9es\ respectivement\ sur\ des\ tableaux\ et\ sur\ des\ structures\ cha\u00een\u00e9es.\n=

#. name, q6, feedback
#: m10_qcm/task.yaml
!\n``List<T>``\ est\ une\ interface.\n=

#. name, q6, text
#: m10_qcm/task.yaml
!``List<T>``\ est\ une\ interface\ qui\ repr\u00e9sente\ un\ ensemble\ d'\u00e9l\u00e9ments\ de\ type\ ``T``.\ \ ``HashList<T>``\ et\ ``LinkedList<T>``\ sont\ des\ impl\u00e9mentations\ de\ ``List<T>``,\ bas\u00e9es\ respectivement\ sur\ des\ tables\ de\ hachage\ et\ sur\ des\ liens\ hypertexte.\n=

#. name, q6, feedback
#: m10_qcm/task.yaml
!\n``List<T>``\ ne\ repr\u00e9sente\ pas\ un\ ensemble\ mais\ une\ s\u00e9quence\ ordonn\u00e9e.\n=

#. name, q6, text
#: m10_qcm/task.yaml
!``List<T>``\ est\ une\ classe\ qui\ repr\u00e9sente\ une\ s\u00e9quence\ ordonn\u00e9e\ d'``Object``\ de\ taille\ ``T``.\ \ ``ArrayList<T>``\ et\ ``LinkedList<T>``\ sont\ des\ extensions\ de\ ``List<T>``,\ bas\u00e9es\ respectivement\ sur\ des\ tableaux\ et\ sur\ des\ structures\ cha\u00een\u00e9es.\n=

#. name, q6, feedback
#: m10_qcm/task.yaml
!\n``T``\ est\ le\ type\ des\ \u00e9l\u00e9ments\ et\ non\ la\ taille\ de\ la\ s\u00e9quence.\n=

#. name, q6, text
#: m10_qcm/task.yaml
!``List<T>``\ est\ une\ interface\ qui\ repr\u00e9sente\ un\ ensemble\ d'\u00e9l\u00e9ments\ de\ type\ ``T``.\ \ ``HashList<T>``\ et\ ``LinkedList<T>``\ sont\ des\ impl\u00e9mentations\ de\ ``List<T>``,\ bas\u00e9es\ respectivement\ sur\ des\ tables\ de\ hachage\ et\ sur\ des\ structures\ cha\u00een\u00e9es.\n=

#. name, q6, feedback
#: m10_qcm/task.yaml
!\n``HashList<T>``\ n'existe\ pas\ dans\ les\ collections\ Java.\n=

#. name, q7, name
#: m10_qcm/task.yaml
!ArrayList<T>=

#. name, q7, header
#: m10_qcm/task.yaml
!\nParmi\ les\ fragments\ de\ progamme\ suivants,\ lequel\ utilise\ correctement\ la\ classe\ ``ArrayList<T>``\ ?\n=

#. name, q7, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ ...\n\ \ \ List<String>\ list\ \=\ new\ ArrayList<String>();\n\ \ \ list.add("Hello");\n\ \ \ String\ s1\ \=\ "World";\n\ \ \ list.add(s1);\n\ \ \ int\ i\ \=\ list.indexOf("Hello");\n\ \ \ String\ s2\ \=\ list.get(i);\n=

#. name, q7, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ ...\n\ \ \ List<String>\ list\ \=\ new\ ArrayList<String>[10];\n\ \ \ list.add("Hello");\n\ \ \ Object\ s1\ \=\ "World";\n\ \ \ list.add(s1);\n\ \ \ int\ i\ \=\ list.indexOf("Hello");\n\ \ \ String\ s2\ \=\ (String)\ list.get(i);\n=

#. name, q7, feedback
#: m10_qcm/task.yaml
!\n``list.add(s1)``\ provoque\ une\ erreur\ de\ type\ et\ le\ type-cast\ \u00e0\ la\ derni\u00e8re\ ligne\ est\ incorrect.\n=

#. name, q7, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ ...\n\ \ \ List<String>\ list\ \=\ new\ ArrayList<String>[10];\n\ \ \ list[0]\ \=\ "Hello";\n\ \ \ String\ s1\ \=\ "World";\n\ \ \ list[1]\ \=\ s1;\n\ \ \ int\ i\ \=\ list.indexOf("Hello");\n\ \ \ String\ s2\ \=\ list[i];\n=

#. name, q7, feedback
#: m10_qcm/task.yaml
!\n``ArrayLsit``\ n'est\ pas\ un\ tableau\ ;\ ``list[i]``\ est\ syntaxiquement\ incorrect.\n=

#. name, q7, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ ...\n\ \ \ List<T>\ list\ \=\ new\ ArrayList();\n\ \ \ list.add("Hello");\n\ \ \ String\ s1\ \=\ "World";\n\ \ \ list.add(s1);\n\ \ \ int\ i\ \=\ list.indexOf("Hello");\n\ \ \ String\ s2\ \=\ list.get(i);\n=

#. name, q7, feedback
#: m10_qcm/task.yaml
!\nLe\ param\u00e8tre\ de\ type\ ``<T>``\ doit\ \u00eatre\ un\ type\ particulier\ existant,\ ici\ ``<String>``.\n=

#. name, q7, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ import\ java.util.*;\n\ \ \ ...\n\ \ \ List<String>\ list\ \=\ new\ ArrayList<String>[10];\n\ \ \ add(list,\ "Hello");\n\ \ \ String\ s1\ \=\ "World";\n\ \ \ add(list,\ s1);\n\ \ \ int\ i\ \=\ list.indexOf("Hello");\n\ \ \ String\ s2\ \=\ list.get(i);\n=

#. name, q7, feedback
#: m10_qcm/task.yaml
!\n``add``\ est\ une\ m\u00e9thode\ de\ ``list``.\n=

#. name, q8, name
#: m10_qcm/task.yaml
!It\u00e9rateurs=

#. name, q8, header
#: m10_qcm/task.yaml
!\nParmi\ les\ fragments\ suivants,\ lequel\ utilise\ correctement\ un\ it\u00e9rateur\ ?\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ Iterator<Integer>\ iter\ \=\ list.iterator();\n\ \ \ while\ (iter.hasNext())\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ iter.next();\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ while\ (list.hasNext())\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ list.next();\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q8, feedback
#: m10_qcm/task.yaml
!\n``list``\ n'est\ pas\ un\ it\u00e9rateur.\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ Iterator\ iter\ \=\ list.iterator();\n\ \ \ while\ (iter.hasNext())\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ iter.next();\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q8, feedback
#: m10_qcm/task.yaml
!\nErreur\ de\ typage,\ utiliser\ un\ type\ g\u00e9n\u00e9rique\ pour\ ``iter``.\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ Iterator<Integer>\ iter\ \=\ list.iterator();\n\ \ \ while\ (hasNext(iter))\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ next(iter);\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q8, feedback
#: m10_qcm/task.yaml
!\n``hasNext``\ et\ ``next``\ sont\ des\ m\u00e9thodes\ de\ ``iter``.\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ Iterator<Integer>\ iter\ \=\ list.iterator();\n\ \ \ while\ (iter.hasNext())\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ (Integer)\ iter.next();\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. name, q8, feedback
#: m10_qcm/task.yaml
!\nLe\ type-cast\ est\ inutile,\ ``iter.next``\ retourne\ un\ ``Integer``.\n=

#. name, q8, text
#: m10_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ List<Integer>\ list\ \=\ makeList();\ \ //\ cr\u00e9e\ la\ liste\n\ \ \ Iterator<Integer>\ iter\ \=\ list.iterator();\n\ \ \ while\ (iter.next()\ \!\=\ null)\ {\n\ \ \ \ \ \ \ Integer\ i\ \=\ iter.next();\n\ \ \ \ \ \ \ System.out.println(i);\n\ \ \ }\n=

#. context
#: m10dem1/task.yaml
!En\ Java,\ les\ exceptions\ sont\ un\ concept\ cl\u00e9\ qui\ vous\ permet\ de\ g\u00e9rer\ le\ comportement\ de\ votre\ programme\ dans\ des\ cas\ extraordinaires.\ Voici\ la\ classe\ ``RevisedRatio``\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ class\ RevisedRatio\ {\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ n1\ et\ n2\ sont\ des\ cha\u00eenes\ de\ caract\u00e8res\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ apr\u00e8s\ conversion\ de\ n1\ et\ n2\ en\ entier,\ retourne\ n1/n2,\ peut\ lancer\ une\ NumberFormatException\ si\ un\ des\ strings\ n'est\ pas\ un\ nombre\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ static\ int\ divise(String\ n1,\ String\ n2)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ int\ n\ \=\ Integer.parseInt(n1);\n\ \ \ \ \ \ \ \ \ \ \ \ int\ d\ \=\ Integer.parseInt(n2);\n\ \ \ \ \ \ \ \ \ \ \ \ return\ doDivise(n,\ d);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ n\ et\ d\ sont\ des\ entiers\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ n/d\ si\ d\!\=0,\ sinon\ throws\ AritmeticException\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ static\ int\ doDivise(int\ n,\ int\ d)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ (n/d);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ args\ contient\ un\ tableau\ de\ String\ pass\u00e9s\ en\ ligne\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ de\ commande\n\ \ \ \ \ \ \ \ \ *\ @post\ si\ args\ contient\ seulement\ un\ String,\ affiche\ un\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ message\ d'erreur\ sinon\ affiche\ le\ r\u00e9sultat\ de\ la\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ division\ de\ args[0]\ par\ args[i]\ pour\ tout\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ 0\ <\ i\ <\ args.length,\ un\ r\u00e9sultat\ par\ ligne\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ static\ int\ div(String[]\ args)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ if(args.length\ <\ 2)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Erreur\ \:\ la\ ligne\ de\ commande\ doit\ \u00eatre\ \:");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("java\ ratio\ num1\ num2\ num3...\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.exit(-1);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\=1;\ i<args.length;i++)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ /*1*/\ \ \ \ //\ \u00c0\ r\u00e9\u00e9crire\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(args[0]\ +\ "/"\ +\ args[i]\ +\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "\ \=\ "\ +\ divise(args[0],\ args[i]));\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ return\ 0;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ public\ static\ void\ main(String[]\ args){\n\ \ \ \ \ \ \ \ \ \ \ \ if(div(args)\ \!\=\ -1){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Tout\ s'est\ bien\ pass\u00e9");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.exit(0);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Veuillez\ donner\ des\ arguments\ "\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +"corrects\ la\ prochaine\ fois.");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.exit(-1);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nLa\ m\u00e9thode\ ``div``\ r\u00e9cup\u00e8re\ les\ arguments\ de\ la\ m\u00e9thode\ ``main``\ qui\ l'appelle\ et\ traite\ la\ division\ de\ ``args[0]``\ par\ ``args[i]``\ pour\ tout\ 0\ <\ i\ <\ args.length.\ La\ m\u00e9thode\ affiche\ la\ r\u00e9ponse\ sous\ la\ forme\ "``args[0]/args[i]\ \=\ reponse``".\ Par\ exemple,\ quand\ on\ l'appelle\ avec\ les\ arguments\ ``"20"``,\ ``"5"``\ et\ ``"10"``,\ la\ m\u00e9thode\ affiche\ sur\ la\ sortie\ standard\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ 20/5\ \=\ 4\n\ \ \ \ 20/10\ \=\ 2\n\nPour\ le\ moment,\ l'appel\ \u00e0\ cette\ m\u00e9thode\ avec\ de\ mauvais\ arguments\ pourrait\ faire\ crasher\ le\ programme\ en\ lan\u00e7ant\ une\ ``NumberFormatException``\ ou\ une\ ``ArithmeticException``.\n\nR\u00e9\u00e9crivez\ enti\u00e8rement\ l'int\u00e9rieur\ de\ la\ boucle\ ``for``\ de\ mani\u00e8re\ \u00e0\ ce\ que\ lorsqu'une\ de\ ces\ deux\ exceptions\ est\ lanc\u00e9e,\ la\ m\u00e9thode\ affiche\ le\ message\ d'erreur\ ``Vous\ ne\ pouvez\ pas\ diviser\ par\ 0.``\ pour\ la\ division\ par\ 0\ et\ le\ message\ ``La\ cha\u00eene\ de\ caract\u00e8res\ pass\u00e9e\ \u00e0\ parseInt()\ ne\ contient\ pas\ que\ des\ chiffres.``\ pour\ l'erreur\ de\ parsing,\ sur\ la\ sortie\ d'erreur\ standard\ et\ retourne\ directement\ la\ valeur\ ``-2``.\ Sur\ la\ sortie\ d'erreur\ standard,\ on\ doit\ pouvoir\ voir\ par\ exemple,\ en\ cas\ de\ NumberFormatException\:\n\n..\ code-block\:\:\ console\n\n\ \ \ \ La\ cha\u00eene\ de\ caract\u00e8res\ pass\u00e9e\ \u00e0\ parseInt()\ ne\ contient\ pas\ que\ des\ chiffres.=

#. name
#: m10dem1/task.yaml
!Mission\ 10\ \:\ Question\ de\ d\u00e9marrage\ 1\ \:\ Traitement\ des\ exceptions=

#. name, q1, name
#: m10dem1/task.yaml
!L'int\u00e9rieur\ de\ la\ boucle\ for=

#. name, q1, header
#: m10dem1/task.yaml
!R\u00e9\u00e9crivez\ enti\u00e8rement\ l'int\u00e9rieur\ de\ la\ boucle\ for\ (/\\*1\\*/).\ Veillez\ \u00e0\ n'\u00e9crire\ que\ l'int\u00e9rieur\ de\ la\ boucle.=

#. context
#: m10dem2/task.yaml
!\u00c9crivez\ le\ corps\ de\ la\ m\u00e9thode\ ``write``,\ qui\ prend\ en\ argument\ un\ entier\ ``n``\ et\ un\ nom\ de\ fichier\ ``filename``\ et\ qui\ \u00e9crit\ les\ ``n``\ premiers\ entiers\ strictement\ positifs\ dans\ un\ fichier\ dont\ le\ nom\ est\ contenu\ dans\ ``filename``,\ en\ affichant\ un\ seul\ nombre\ par\ ligne.\ Voici\ la\ signature\ de\ la\ m\u00e9thode\ ``write``\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ \ \ \ @pre\ \ \ \ n>0,\ filename\ \!\=\ null\n\ \ \ \ \ *\ \ \ \ @post\ \ \ \ cr\u00e9e\ le\ fichier\ dont\ le\ nom\ est\ filename\ et\ \u00e9crit\ dans\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ ce\ fichier\ les\ n\ premiers\ entiers\ strictement\ positifs,\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ un\ entier\ par\ ligne.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ En\ cas\ d'erreur\ d'I/O,\ retourne\ -1.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ Retourne\ 0\ si\ tout\ s'est\ bien\ d\u00e9roul\u00e9.\n\ \ \ \ \ */\n\ \ \ \ public\ static\ int\ write(int\ n,\ String\ filename)\n\nFaites\ bien\ attention\ \u00e0\ g\u00e9rer\ les\ erreurs\ d'I/O.=

#. name
#: m10dem2/task.yaml
!Mission\ 10\ \:\ Question\ de\ d\u00e9marrage\ 2\ \:\ \u00c9criture\ dans\ des\ fichiers=

#. name, q1, name
#: m10dem2/task.yaml
!La\ m\u00e9thode\ write=

#. name, q1, header
#: m10dem2/task.yaml
!\u00c9crivez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ ``write``.\ Veillez\ bien\ \u00e0\ n'\u00e9crire\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ recopiez\ pas\ sa\ signature.\ Respectez\ bien\ les\ sp\u00e9cifications.=

#. context
#: m10real/task.yaml
!Vous\ soumettrez\ votre\ soumission\ de\ la\ phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 10\ soit\ ici,\ soit\ directement\ via\ BlueJ.\n\nVeuillez\ soumettre\ une\ archive\ **zip**\ contenant\ uniquement\ les\ fichiers\ **.java**\ utilis\u00e9s\ pour\ votre\ mission,\ ainsi\ qu'n\ fichier\ nomm\u00e9\ "README.TXT".=

#. name
#: m10real/task.yaml
!Mission\ 10\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m10real/task.yaml
!Soumission\ de\ l'archive\ zip=

#. name, q1, header
#: m10real/task.yaml
!Veuillez\ uploader\ votre\ phase\ de\ r\u00e9alisation\ soit\ ici,\ soit\ via\ BlueJ=

#. context
#: m11Q1/task.yaml
!Une\ pile\ d'entiers\ est\ une\ structure\ de\ donn\u00e9es\ qui\ permet\ d'empiler\ des\ entiers.\ Les\ entiers\ sont\ ajout\u00e9s\ \u00e0\ la\ pile\ via\ son\ sommet.\ La\ pile\ garantit\ un\ fonctionnement\ Last-In\ First-Out\ (LIFO,\ dernier\ entr\u00e9,\ premier\ sorti).\nOn\ vous\ donne\ la\ classe\ ``PileInt``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /**\n\ \ \ *\ Une\ pile\ d'entiers\ repr\u00e9sent\u00e9e\ sous\ la\ forme\ d'une\ structure\ cha\u00een\u00e9e\n\ \ \ *\n\ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ *\ @version\ D\u00e9cembre\ 2016\n\ \ \ */\n\ \ \ \ public\ class\ PileInt\ {\n\n\ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ pile\n\ \ \ \ \ \ \ \ private\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ int\ element;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(int\ i,\ Noeud\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ element\ \=\ i;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ private\ Noeud\ sommet;\ //\ le\ sommet\ de\ la\ pile\n\ \ \ \ \ \ \ \ private\ int\ profondeur;\ //\ le\ nombre\ d'entiers\ dans\ la\ pile\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ initialise\ une\ pile\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ PileInt()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ sommet\ \=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ profondeur\ \=\ 0;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ ajoute\ l'entier\ i\ au\ sommet\ de\ la\ pile\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ push(int\ i)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Premi\u00e8re\ question\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ l'entier\ au\ sommet\ de\ la\ pile\ et\ le\ retire\ de\ la\ pile\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ lance\ l'exception\ IllegalStateException\ si\ la\ pile\ est\ vide\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ pop()\ throws\ IllegalStateException\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Deuxi\u00e8me\ question\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ profondeur,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ c'est-\u00e0-dire\ le\ nombre\ d'\u00e9l\u00e9ments\ dans\ la\ pile.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ Retourne\ 0\ pour\ une\ pile\ vide.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ depth()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ profondeur;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q1/task.yaml
!Mission\ 11\ \:\ Q*\ PileInt=

#. name, q1, name
#: m11Q1/task.yaml
!Push=

#. name, q1, header
#: m11Q1/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ push=

#. name, q2, name
#. name, q1, name
#: m11Q1/task.yaml m11Q2/task.yaml
!Pop=

#. name, q2, header
#. name, q1, header
#: m11Q1/task.yaml m11Q2/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ pop=

#. context
#: m11Q2/task.yaml
!Une\ pile\ est\ une\ structure\ de\ donn\u00e9es\ qui\ permet\ d'empiler\ les\ \u00e9l\u00e9ments.\ Les\ objets\ sont\ ajout\u00e9s\ \u00e0\ la\ pile\ via\ son\ sommet.\ La\ pile\ garantit\ un\ fonctionnement\ Last-In\ First-Out\ (LIFO,\ dernier\ entr\u00e9,\ premier\ sorti)\nOn\ vous\ donne\ la\ classe\ ``Pile``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /**\n\ \ \ *\ Une\ pile\ repr\u00e9sent\u00e9e\ sous\ la\ forme\ d'une\ structure\ cha\u00een\u00e9e\n\ \ \ *\n\ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ *\ @version\ Novembre\ 2016\n\ \ \ */\n\ \ \ \ public\ class\ Pile\ {\n\n\ \ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ queue\n\ \ \ \ \ \ \ \ private\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Object\ element;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(Object\ o,\ Noeud\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ element\ \=\ o;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ private\ Noeud\ sommet;\ //\ le\ sommet\ de\ la\ pile\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ a\ initialis\u00e9\ une\ pile\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Pile()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ sommet\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ ajoute\ l'objet\ o\ au\ sommet\ de\ la\ pile\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ push(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ code\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ l'\u00e9l\u00e9ment\ au\ sommet\ de\ la\ pile\ et\ le\ supprime\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ null\ si\ la\ pile\ est\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Object\ pop()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 1\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ la\ profondeur,\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ c'est-\u00e0-dire\ le\ nombre\ d'\u00e9l\u00e9ments\ dans\ la\ pile.\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ 0\ pour\ une\ pile\ vide.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ depth()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 2\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q2/task.yaml
!Mission\ 11\ \:\ Q*\ Pile=

#. name, q2, name
#: m11Q2/task.yaml
!Depth=

#. name, q2, header
#: m11Q2/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ depth=

#. context
#: m11Q3/task.yaml
!Une\ queue\ est\ une\ structure\ de\ donn\u00e9e\ qui\ dispose\ d'une\ entr\u00e9e\ et\ d'une\ sortie.\ Les\ objets\ sont\ ajout\u00e9s\ \u00e0\ la\ queue\ via\ son\ entr\u00e9e\ et\ sont\ retir\u00e9s\ via\ sa\ sortie.\ La\ queue\ garantit\ un\ fonctionnement\ First-In\ First-Out\ (FIFO,\ premier\ entr\u00e9,\ premier\ sorti)\nOn\ vous\ donne\ la\ classe\ ``FIFOQueue``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /**\n\ \ \ *\ Une\ FIFO\ queue\ repr\u00e9sent\u00e9e\ sous\ la\ forme\ d'une\ structure\ cha\u00een\u00e9e\n\ \ \ *\n\ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ *\ @version\ Novembre\ 2016\n\ \ \ */\n\ \ \ \ public\ class\ FIFOQueue\ {\n\n\ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ queue\n\ \ \ \ \ \ \ \ private\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Object\ element;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(Object\ o,\ Noeud\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ element\ \=\ o;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ private\ Noeud\ entree;\ //\ correspond\ \u00e0\ tout\ moment\ \u00e0\ l'entr\u00e9e\ de\ la\ queue\n\ \ \ \ \ \ \ private\ Noeud\ sortie;\ //\ correspond\ \u00e0\ tout\ moment\ \u00e0\ la\ sortie\ de\ la\ queue\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ a\ initialis\u00e9\ une\ queue\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ FIFOQueue()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ entree\ \=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ sortie\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ ajoute\ l'objet\ \u00e0\ la\ queue\ via\ le\ noeud\ entree\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ ajoute(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ ajout;\n\ \ \ \ \ \ \ \ \ \ \ \ ajout\ \=\ new\ Noeud(o,\ entree);\n\ \ \ \ \ \ \ \ \ \ \ \ entree\ \=\ ajout;\n\ \ \ \ \ \ \ \ \ \ \ \ if(sortie\ \=\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sortie\ \=\ ajout;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ ancien\ objet\ de\ la\ queue\ via\ le\ noeud\ sortie\ et\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ retire\ de\ la\ queue\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ null\ si\ la\ queue\ est\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ Object\ retire\ ()\ {\n\ \ \ \ \ \ \ \ \ \ //\ A\ compl\u00e9ter\n\ \ \ \ \ \ \ }\n\ \ \ \ }\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q3/task.yaml
!Mission\ 11\ \:\ Q*\ FIFOQueue=

#. name, q1, name
#. name, q2, name
#: m11Q3/task.yaml m11Q4/task.yaml m11Q6/task.yaml
!Retire=

#. name, q1, header
#. name, q2, header
#: m11Q3/task.yaml m11Q4/task.yaml m11Q6/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ retire=

#. context
#: m11Q4/task.yaml
!Une\ queue\ est\ une\ structure\ de\ donn\u00e9es\ qui\ dispose\ d'une\ entr\u00e9e\ et\ d'une\ sortie.\ Les\ objets\ sont\ ajout\u00e9s\ \u00e0\ la\ queue\ via\ son\ entr\u00e9e\ et\ sont\ retir\u00e9s\ via\ sa\ sortie.\ La\ queue\ garantit\ un\ fonctionnement\ First-In\ First-Out\ (FIFO,\ premier\ entr\u00e9,\ premier\ sorti)\nOn\ vous\ donne\ la\ classe\ ``Queue``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /**\n\ \ \ *\ Une\ queue\ repr\u00e9sent\u00e9e\ sous\ la\ forme\ d'une\ structure\ cha\u00een\u00e9e\n\ \ \ *\n\ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ *\ @version\ Novembre\ 2016\n\ \ \ */\n\ \ \ \ public\ class\ Queue\ {\n\n\ \ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ queue\n\ \ \ \ \ \ \ \ private\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Object\ element;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ precedent;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(Object\ o,\ Noeud\ n,\ Noeud\ p)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ element\ \=\ o;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ precedent\ \=\ p;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ private\ Noeud\ entree;\ //\ l'entr\u00e9e\ de\ la\ queue\n\ \ \ \ \ \ \ \ private\ Noeud\ sortie;\ //\ la\ sortie\ de\ la\ queue\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ initialise\ une\ queue\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Queue()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ entree\ \=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ sortie\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ ajoute\ l'objet\ \u00e0\ la\ queue\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ ajoute(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 1\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ ancien\ objet\ de\ la\ queue\ via\ le\ noeud\ sortie\ et\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ retire\ de\ la\ queue.\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ null\ si\ la\ queue\ est\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Object\ retire()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 2\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q4/task.yaml
!Mission\ 11\ \:\ Q**\ Queue=

#. name, q1, name
#: m11Q4/task.yaml m11Q5/task.yaml
!Ajoute=

#. name, q1, header
#: m11Q4/task.yaml m11Q5/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ajoute=

#. context
#: m11Q5/task.yaml
!Une\ queue\ ordonn\u00e9e\ est\ une\ structure\ de\ donn\u00e9es\ qui\ dispose\ d'une\ r\u00e9f\u00e9rence\ min\ et\ d'une\ r\u00e9f\u00e9rence\ max.\ Les\ r\u00e9els\ sont\ ajout\u00e9s\ \u00e0\ la\ queue\ via\ son\ entr\u00e9e\ et\ sont\ retir\u00e9s\ via\ sa\ sortie.\ A\ tout\ moment,\ la\ queue\ est\ telle\ que\ l'\u00e9l\u00e9ment\ le\ plus\ petit\ est\ accessible\ via\ la\ r\u00e9f\u00e9rence\ min\ et\ le\ plus\ grand\ via\ la\ r\u00e9f\u00e9rence\ max.\nOn\ vous\ donne\ la\ classe\ ``OrderedList``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ /**\n\ \ \ *\ Une\ liste\ qui\ contient\ des\ r\u00e9els\ dans\ l'odre\ croissant\n\ \ \ *\n\ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ *\ @version\ Dec.\ 2016\n\ \ \ */\n\ \ \ \ public\ class\ OrderedList\ {\n\n\ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ queue\n\ \ \ \ \ \ \ \ private\ static\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ double\ d;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ precedent;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(double\ d,\ Noeud\ n,\ Noeud\ p)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ this.d\ \=\ d;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ precedent\ \=\ p;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ private\ Noeud\ min;\ //\ le\ plus\ petit\ nombre\ de\ la\ liste\n\ \ \ \ \ \ \ \ private\ Noeud\ max;\ //\ le\ plus\ grand\ nombre\ de\ la\ liste\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ initialise\ une\ liste\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ OrderedList()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ min\ \=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ max\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ *\ @post\ ajoute\ le\ nombre\ n\ \u00e0\ la\ liste\ ordonn\u00e9e.\ Apr\u00e8s\ ajout,\ la\ liste\ est\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ ordonn\u00e9e,\ le\ nombre\ le\ plus\ petit\ est\ \u00e0\ la\ r\u00e9f\u00e9rence\ min\ et\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ plus\ grand\ \u00e0\ la\ r\u00e9f\u00e9rence\ max\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ ajoute(double\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 1\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ plus\ grand\ \u00e9l\u00e9ment\ de\ la\ queue\ et\ le\ retire\ de\ la\ queue\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ lance\ un\ exception\ IllegalStateException\ si\ la\ queue\ est\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ double\ retireMax()\ throws\ IllegalStateException\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 2\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q5/task.yaml
!Mission\ 11\ \:\ Q**\ OrderedList=

#. name, q2, name
#: m11Q5/task.yaml
!RetireMax=

#. name, q2, header
#: m11Q5/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ retireMax=

#. context
#: m11Q6/task.yaml
!Une\ liste\ est\ une\ structure\ de\ donn\u00e9es\ permettant\ de\ stocker\ des\ objets.\ Les\ objets\ sont\ ajout\u00e9s\ \u00e0\ la\ liste\ via\ sa\ tete.\ Elle\ supporte\ trois\ commandes\ \:\najout\ pour\ ajouter\ un\ objet\ \u00e0\ la\ liste\nretire\ pour\ retirer\ un\ \u00e9l\u00e9ment\ se\ trouvant\ dans\ la\ liste\ncontient\ pour\ voir\ si\ un\ objet\ se\ trouve\ dans\ la\ liste\n\nOn\ vous\ donne\ la\ classe\ ``Liste``\ incompl\u00e8te\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ liste\ repr\u00e9sent\u00e9e\ sous\ la\ forme\ d'une\ structure\ cha\u00een\u00e9e\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure\n\ \ \ \ \ *\ @version\ D\u00e9cembre\ 2016\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Liste\ {\n\n\ \ \ \ \ \ \ //\ une\ classe\ interne\ repr\u00e9sentant\ un\ noeud\ de\ la\ liste\n\ \ \ \ \ \ \ \ private\ class\ Noeud\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Object\ element;\n\ \ \ \ \ \ \ \ \ \ \ \ Noeud\ suivant;\n\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Noeud(Object\ o,\ Noeud\ n)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ element\ \=\ o;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ suivant\ \=\ n;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ private\ Noeud\ tete;\ //\ le\ d\u00e9but\ de\ la\ liste\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ *\ @post\ a\ initialis\u00e9\ une\ liste\ vide\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Liste()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ tete\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ ajoute\ l'objet\ \u00e0\ la\ liste\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ ajoute(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Code\ non\ fourni\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /*\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ l'objet\ o\ se\ trouve\ dans\ la\ liste,\ false\ sinon\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ contient(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 1\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ o\ \!\=\ null\n\ \ \ \ \ \ \ \ *\ @post\ retire\ toutes\ les\ copies\ de\ l'objet\ o\ de\ la\ liste.\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Retourne\ le\ nombre\ d'objets\ qui\ ont\ \u00e9t\u00e9\ retir\u00e9\ de\ la\ liste\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ (0\ si\ l'objet\ o\ n'\u00e9tait\ pas\ pr\u00e9sent\ dans\ la\ liste)\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ retire(Object\ o)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Question\ 2\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nCompl\u00e9tez\ cette\ classe.=

#. name
#: m11Q6/task.yaml
!Mission\ 11\ \:\ Q**\ List=

#. name, q1, name
#: m11Q6/task.yaml
!Contient=

#. name, q1, header
#: m11Q6/task.yaml
!Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ contient=

#. context
#: m11_qcm/task.yaml
!\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\nMission\ 11.\ Structures\ cha\u00een\u00e9es\n\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\n\n\nCes\ questions\ supposent\ que\ vous\ avez\ lu\ les\ sections\ suivantes\ du\ livre\ de\ r\u00e9f\u00e9rence\ |jn|_\n\n\ \ \ \ -\ |jn5.7|_\n\ \ \ \ \ \ \ \ -\ |jn5.7.2|_\n\ \ \ \ -\ |jn9.1|_\n\ \ \ \ -\ |jn9.2|_\n\ \ \ \ \ \ \ \ -\ |jn9.2.1|_\n\ \ \ \ \ \ \ \ -\ |jn9.2.2|_\n\ \ \ \ \ \ \ \ -\ |jn9.2.3|_\n\ \ \ \ \ \ \ \ -\ |jn9.2.4|_\n\ \ \ \ \ \ \ \ -\ |jn9.2.5|_\n\ \ \ \ -\ |jn9.3|_\n\ \ \ \ \ \ \ \ -\ |jn9.3.1|_\n\ \ \ \ \ \ \ \ -\ |jn9.3.2|_\n\nPlusieurs\ questions\ se\ basent\ sur\ la\ classe\ ``StackOfInt``\ de\ la\ section\ 9.3.1,\ partiellement\ reproduite\ et\ traduite\ ici\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ pile\ d'entiers\ sous\ forme\ de\ cha\u00eene\ simplement\ li\u00e9e.\n\ \ \ \ \ *\ Le\ sommet\ de\ la\ pile\ est\ la\ t\u00eate\ de\ la\ cha\u00eene.\n\ \ \ \ \ */\n\ \ \ \ public\ class\ StackOfInts\ {\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ Un\ noeud\ de\ la\ liste.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ private\ static\ class\ Node\ {\n\ \ \ \ \ \ \ \ \ \ int\ item;\ \ \ \ \ //\ donn\u00e9e\n\ \ \ \ \ \ \ \ \ \ Node\ next;\ \ \ \ //\ le\ noeud\ suivant\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ private\ Node\ top;\ \ \ //\ le\ sommet\ de\ la\ pile\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ *\ @post\ Ajoute\ N\ au\ sommet\ de\ la\ pile.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ }\n\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ *\ @post\ Retire\ et\ retourne\ l'\u00e9l\u00e9ment\ au\ sommet\ de\ la\ pile.\n\ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Lance\ une\ IllegalStateException\ si\ la\ pile\ est\ vide.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ int\ pop()\ {\n\ \ \ \ \ \ \ \ \ \ ...\n\ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ *\ @pre\ \ -\n\ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ la\ pile\ est\ vide,\ false\ sinon.\n\ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ public\ boolean\ isEmpty()\ {\n\ \ \ \ \ \ \ \ \ \ return\ (top\ \=\=\ null);\n\ \ \ \ \ \ \ }\n\n\ \ \ \ }\n\n..\ _jn\:\ http\://math.hws.edu/javanotes/\n..\ |jn|\ replace\:\:\ JavaNotes\n\n..\ _jn5.7\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\n..\ |jn5.7|\ replace\:\:\ `5.7\ \:\ Interfaces,\ Nested\ Classes,\ and\ Other\ Details`\n\n..\ _jn5.7.2\ \:\ http\://math.hws.edu/javanotes/c5/s7.html\#OOP.7.2\n..\ |jn5.7.2|\ replace\:\:\ `5.7.2\ \:\ Nested\ Classes`\n\n..\ _jn9.1\ \:\ http\://math.hws.edu/javanotes/c9/s1.html\n..\ |jn9.1|\ replace\:\:\ `9.1\ \:\ Recursion`\n\n..\ _jn9.2\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\n..\ |jn9.2|\ replace\:\:\ `9.2\ \:\ Linked\ Data\ Structures`\n\n..\ _jn9.2.1\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\#recursion.2.1\n..\ |jn9.2.1|\ replace\:\:\ `9.2.1\ \:\ Recursive\ Linking`\n\n..\ _jn9.2.2\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\#recursion.2.2\n..\ |jn9.2.2|\ replace\:\:\ `9.2.2\ \:\ Linked\ Lists`\n\n..\ _jn9.2.3\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\#recursion.2.3\n..\ |jn9.2.3|\ replace\:\:\ `9.2.3\ \:\ Basic\ Linked\ List\ Processing`\n\n..\ _jn9.2.4\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\#recursion.2.4\n..\ |jn9.2.4|\ replace\:\:\ `9.2.4\ \:\ Inserting\ into\ a\ Linked\ List`\n\n..\ _jn9.2.5\ \:\ http\://math.hws.edu/javanotes/c9/s2.html\#recursion.2.5\n..\ |jn9.2.5|\ replace\:\:\ `9.2.5\ \:\ Deleting\ from\ a\ Linked\ List`\n\n..\ _jn9.3\ \:\ http\://math.hws.edu/javanotes/c9/s3.html\n..\ |jn9.3|\ replace\:\:\ `9.3\ \:\ Stacks,\ Queues,\ and\ ADTs`\n\n..\ _jn9.3.1\ \:\ http\://math.hws.edu/javanotes/c9/s3.html\#recursion.3.1\n..\ |jn9.3.1|\ replace\:\:\ `9.3.1\ \:\ Stacks`\n\n..\ _jn9.3.2\ \:\ http\://math.hws.edu/javanotes/c9/s3.html\#recursion.3.2\n..\ |jn9.3.2|\ replace\:\:\ `9.3.2\ \:\ Queues`\n=

#. name
#: m11_qcm/task.yaml
!Mission\ 11\:\ QCM=

#. name, q1, name
#: m11_qcm/task.yaml
!Classes\ internes=

#. name, q1, header
#: m11_qcm/task.yaml
!\nOn\ consid\u00e8re\ la\ classe\ ``Node``\ d\u00e9finie\ dans\ ``StackOfInts``.\ \ Parmi\ les\ groupes\ d'affirmations\ suivants,\ lequel\ est\ correct?\n=

#. name, q1, text
#: m11_qcm/task.yaml
!\n\n-\ La\ classe\ ``Node``\ est\ une\ *classe\ interne*\ de\ la\ classe\ ``StackOfInts``.\n-\ Chaque\ instance\ de\ ``StackOfInts``\ peut\ cr\u00e9er\ un\ nombre\ quelconque\ d'instances\ de\ ``Node``.\n-\ Dans\ la\ m\u00e9thode\ ``push``,\ on\ utilise\ ``new\ Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n-\ Dans\ une\ autre\ classe,\ on\ ne\ peut\ pas\ cr\u00e9er\ d'instance\ de\ ``Node``.\n=

#. name, q1, text
#: m11_qcm/task.yaml
!\n\n-\ La\ classe\ ``Node``\ est\ une\ *classe\ interne*\ de\ la\ classe\ ``StackOfInts``.\n-\ Chaque\ instance\ de\ ``StackOfInts``\ peut\ cr\u00e9er\ un\ nombre\ quelconque\ d'instances\ de\ ``Node``.\n-\ Dans\ la\ m\u00e9thode\ ``push``,\ on\ utilise\ ``new\ StackOfInts.Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n-\ Dans\ une\ autre\ classe,\ on\ utilise\ ``new\ StackOfInts.Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n=

#. name, q1, feedback
#: m11_qcm/task.yaml
!\nDans\ la\ classe\ ``StackOfInts``,\ il\ suffit\ d'\u00e9crire\ ``new\ Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node()``.\nLa\ classe\ ``Node``\ est\ d\u00e9clar\u00e9e\ ``private``,\ elle\ n'est\ pas\ visilbe\ \u00e0\ l'ext\u00e9rieur\ de\ ``StackOfInts``.\n=

#. name, q1, text
#: m11_qcm/task.yaml
!\n\n-\ La\ classe\ ``Node``\ est\ une\ *sous-classe*\ de\ la\ classe\ ``StackOfInts``.\n-\ Chaque\ instance\ de\ ``StackOfInts``\ contient\ une\ instance\ de\ ``Node``.\n-\ Dans\ la\ m\u00e9thode\ ``push``,\ on\ utilise\ ``new\ Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n-\ Dans\ une\ autre\ classe,\ on\ ne\ peut\ pas\ cr\u00e9er\ d'instance\ de\ ``Node``.\n=

#. name, q1, feedback
#: m11_qcm/task.yaml
!\n``Node``\ n'est\ pas\ une\ sous-classe\ de\ ``StackOfInts``.\nUne\ instance\ de\ ``StackOfInts``\ ne\ contient\ pas\ d'instances\ de\ ``Node``\ (mais\ peut\ \u00e9ventuellement\ en\ cr\u00e9er).\n=

#. name, q1, text
#: m11_qcm/task.yaml
!\n\n-\ La\ classe\ ``Node``\ est\ une\ *classe\ interne*\ de\ la\ classe\ ``StackOfInts``.\n-\ Chaque\ instance\ de\ ``StackOfInts``\ contient\ une\ instance\ de\ ``Node``.\n-\ Dans\ la\ m\u00e9thode\ ``push``,\ on\ utilise\ ``new\ Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n-\ Dans\ une\ autre\ classe,\ on\ utilise\ ``new\ StackOfInts.Node()``\ pour\ cr\u00e9er\ une\ instance\ de\ ``Node``.\n=

#. name, q1, feedback
#: m11_qcm/task.yaml
!\nUne\ instance\ de\ ``StackOfInts``\ ne\ contient\ pas\ d'instances\ de\ ``Node``\ (mais\ peut\ \u00e9ventuellement\ en\ cr\u00e9er).\nLa\ classe\ ``Node``\ est\ d\u00e9clar\u00e9e\ ``private``,\ elle\ n'est\ pas\ visilbe\ \u00e0\ l'ext\u00e9rieur\ de\ ``StackOfInts``.\n=

#. name, q2, name
#: m11_qcm/task.yaml
!Ajouter\ un\ noeud\ dans\ une\ cha\u00eene=

#. name, q2, header
#: m11_qcm/task.yaml
!\nDans\ la\ classe\ ``StackOfInts``,\ quelle\ serait\ une\ d\u00e9finition\ correcte\ de\ la\ m\u00e9thode\ ``push``\ ?\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ n\ \=\ new\ Node();\n\ \ \ \ \ n.item\ \=\ N;\n\ \ \ \ \ n.next\ \=\ top;\n\ \ \ \ \ top\ \=\ n;\n\ \ }\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ oldTop\ \=\ top;\n\ \ \ \ \ top\ \=\ new\ Node();\n\ \ \ \ \ top.item\ \=\ N;\n\ \ \ \ \ top.next\ \=\ oldTop;\n\ \ }\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ oldTop\ \=\ top;\n\ \ \ \ \ top.item\ \=\ N;\n\ \ \ \ \ top.next\ \=\ OldTop;\n\ \ }\n=

#. name, q2, feedback
#: m11_qcm/task.yaml
!\nCeci\ remplace\ la\ valeur\ au\ sommet\ par\ N\ plut\u00f4t\ que\ d'ajouter\ N.\ \ Il\ faut\ cr\u00e9er\ un\ nouveau\ noeud.\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ n\ \=\ new\ Node();\n\ \ \ \ \ n.item\ \=\ N;\n\ \ \ \ \ n.next\ \=\ top;\n\ \ }\n=

#. name, q2, feedback
#: m11_qcm/task.yaml
!\nIl\ faut\ modifier\ ``top``.\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ n\ \=\ new\ Node();\n\ \ \ \ \ n\ \=\ N;\n\ \ \ \ \ n.next\ \=\ top;\n\ \ \ \ \ top\ \=\ n;\n\ \ }\n=

#. name, q2, feedback
#: m11_qcm/task.yaml
!\n``n\ \=\ N;``\ n'est\ pas\ correct.\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ n\ \=\ new\ Node();\n\ \ \ \ \ top\ \=\ n;\n\ \ \ \ \ n.item\ \=\ N;\n\ \ \ \ \ n.next\ \=\ top;\n\ \ }\n=

#. name, q2, feedback
#: m11_qcm/task.yaml
!\nL'ordre\ des\ op\u00e9rations\ est\ incorrect,\ on\ perd\ le\ reste\ de\ la\ liste.\n=

#. name, q2, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ void\ push(\ int\ N\ )\ {\n\ \ \ \ \ Node\ n;\n\ \ \ \ \ n.item\ \=\ N;\n\ \ \ \ \ n.next\ \=\ top;\n\ \ \ \ \ top\ \=\ n;\n\ \ }\n=

#. name, q2, feedback
#: m11_qcm/task.yaml
!\nIl\ faut\ cr\u00e9er\ le\ nouveau\ noeud.\n=

#. name, q3, name
#: m11_qcm/task.yaml
!Elements\ d'une\ structure\ cha\u00een\u00e9e=

#. name, q3, header
#: m11_qcm/task.yaml
!\nDans\ une\ m\u00e9thode\ de\ la\ classe\ ``StackOfInts``,\ on\ ex\u00e9cute\ le\ code\ suivant\n\n..\ code-block\:\:\ java\n\n\ \ \ \ StackOfInts\ stack\ \=\ new\ StackOfInts();\n\ \ \ \ stack.push(10);\n\ \ \ \ stack.push(20);\n\ \ \ \ stack.push(30);\n\ \ \ \ /***/\n\nParmi\ les\ groupes\ d'affirmation\ suivantes,\ lequel\ est\ correct\ au\ point\ ``/***/``\ ?\n=

#. name, q3, text
#: m11_qcm/task.yaml
!\n\n-\ ``stack.top.item``\ vaut\ ``30``.\n-\ ``stack.top.next.item``\ vaut\ ``20``.\n-\ ``stack.top.next.next``\ est\ une\ instance\ de\ ``Node``.\n-\ ``stack.top.next.next.next``\ vaut\ ``null``.\n=

#. name, q3, text
#: m11_qcm/task.yaml
!\n\n-\ ``stack.top``\ vaut\ ``30``.\n-\ ``stack.top.next``\ vaut\ ``20``.\n-\ ``stack.top.next.next``\ est\ une\ instance\ de\ ``Node``.\n-\ ``stack.top.next.next.next``\ vaut\ ``null``.\n=

#. name, q3, feedback
#: m11_qcm/task.yaml
!\n``stack.top``\ est\ un\ ``Node``,\ pas\ un\ ``int``.\n``stack.top.next``\ est\ un\ ``Node``,\ pas\ un\ ``int``.\n=

#. name, q3, text
#: m11_qcm/task.yaml
!\n\n-\ ``stack.top.item``\ vaut\ ``30``.\n-\ ``stack.top.next.item``\ vaut\ ``20``.\n-\ ``stack.top.next.next``\ vaut\ ``10``.\n-\ ``stack.top.next.next.next.item``\ vaut\ ``null``.\n=

#. name, q3, feedback
#: m11_qcm/task.yaml
!\n``stack.top.next.next``\ est\ un\ ``Node``,\ pas\ un\ ``int``.\n``stack.top.next.next.next.item``\ provoque\ une\ ``NullPointerException``.\n=

#. name, q3, text
#: m11_qcm/task.yaml
!\n\n-\ ``stack.top``\ vaut\ ``30``.\n-\ ``stack.top.next.item``\ vaut\ ``20``.\n-\ ``stack.top.next.next``\ vaut\ ``10``.\n-\ ``stack.top.next.next.next``\ vaut\ ``null``.\n=

#. name, q3, feedback
#: m11_qcm/task.yaml
!\n``stack.top``\ est\ un\ ``Node``,\ pas\ un\ ``int``.\n``stack.top.next.next``\ est\ un\ ``Node``,\ pas\ un\ ``int``.\n=

#. name, q4, name
#: m11_qcm/task.yaml
!Parcours\ de\ structure\ cha\u00een\u00e9e=

#. name, q4, header
#: m11_qcm/task.yaml
!\nDans\ la\ classe\ ``StackOfInts``,\ quelle\ serait\ une\ impl\u00e9mentation\ correcte\ d'une\ m\u00e9thode\ ``sum``\ qui\ calcule\ la\ somme\ des\ \u00e9l\u00e9ments\ sur\ la\ pile\ ?\n=

#. name, q4, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ sum()\ {\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ Node\ n\ \=\ top;\n\ \ \ \ \ \ \ while\ (n\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ n.item;\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ n.next;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ sum;\n\ \ \ }\n=

#. name, q4, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ sum()\ {\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ Node\ n\ \=\ this;\n\ \ \ \ \ \ \ while\ (n.next\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ n.item;\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ n.next;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ sum;\n\ \ \ }\n=

#. name, q4, feedback
#: m11_qcm/task.yaml
!\n``this``\ n'est\ pas\ un\ ``Node``.\nErreur\ de\ condition\ de\ boucle,\ on\ loupe\ le\ dernier\ \u00e9l\u00e9ment.\n=

#. name, q4, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ sum()\ {\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ Node\ n\ \=\ top;\n\ \ \ \ \ \ \ while\ (n.hasNext())\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ n.item;\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ n.next();\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ sum;\n\ \ \ }\n=

#. name, q4, feedback
#: m11_qcm/task.yaml
!\n``next()``\ et\ ``hasNext()``\ ne\ sont\ pas\ d\u00e9finis\ ici.\n=

#. name, q4, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ sum()\ {\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ Node\ n\ \=\ this;\n\ \ \ \ \ \ \ while\ (n\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ n;\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ n.next;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ sum;\n\ \ \ }\n=

#. name, q4, feedback
#: m11_qcm/task.yaml
!\n``this``\ n'est\ pas\ un\ ``Node``.\n``sum\ +\ n``\ n'est\ pas\ correct,\ ``n``\ est\ un\ ``Node``.\n=

#. name, q4, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ public\ int\ sum()\ {\n\ \ \ \ \ \ \ int\ sum\ \=\ 0;\n\ \ \ \ \ \ \ Node\ n\ \=\ top;\n\ \ \ \ \ \ \ while\ (n.next\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ sum\ \=\ sum\ +\ n;\n\ \ \ \ \ \ \ \ \ \ \ n\ \=\ n.next;\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ sum;\n\ \ \ }\n=

#. name, q4, feedback
#: m11_qcm/task.yaml
!\nErreur\ de\ condition\ de\ boucle,\ on\ loupe\ le\ dernier\ \u00e9l\u00e9ment.\n``sum\ +\ n``\ n'est\ pas\ correct,\ ``n``\ est\ un\ ``Node``.\n=

#. name, q5, name
#: m11_qcm/task.yaml
!Manipulation\ de\ structures\ cha\u00een\u00e9es=

#. name, q5, header
#: m11_qcm/task.yaml
!\nDans\ la\ classe\ ``StackOfInts``,\ quel\ serait\ une\ d\u00e9finition\ correcte\ d'une\ m\u00e9thode\ ``swap``\ qui\ \u00e9change\ les\ deux\ noeuds\ au\ sommet\ de\ la\ pile\ ?\n=

#. name, q5, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ int\ swap()\ {\n\ \ \ \ \ assert\ (top\ \!\=\ null\ &&\ top.next\ \!\=\ null);\n\ \ \ \ \ Node\ node1\ \=\ top;\n\ \ \ \ \ top\ \=\ node1.next;\n\ \ \ \ \ node1.next\ \=\ top.next;\n\ \ \ \ \ top.next\ \=\ node1;\n\ \ }\n=

#. name, q5, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ int\ swap()\ {\n\ \ \ \ \ assert\ (top\ \!\=\ null\ &&\ top.next\ \!\=\ null);\n\ \ \ \ \ Node\ node1\ \=\ top;\n\ \ \ \ \ top\ \=\ node1.next;\n\ \ \ \ \ top.next\ \=\ node1;\n\ \ \ \ \ node1.next\ \=\ top.next;\n\ \ }\n=

#. name, q5, feedback
#: m11_qcm/task.yaml
!\nOrdre\ incorrect,\ la\ fin\ de\ la\ cha\u00eene\ est\ perdue.\n=

#. name, q5, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ int\ swap()\ {\n\ \ \ \ \ assert\ (top\ \!\=\ null\ &&\ top.next\ \!\=\ null);\n\ \ \ \ \ Node\ node1\ \=\ top;\n\ \ \ \ \ node1.next\ \=\ node1.next.next;\n\ \ \ \ \ top\ \=\ node1.next;\n\ \ \ \ \ top.next\ \=\ node1;\n\ \ }\n=

#. name, q5, feedback
#: m11_qcm/task.yaml
!\nOrdre\ incorrect,\ le\ deuxi\u00e8me\ noeud\ est\ perdu.\n=

#. name, q5, text
#: m11_qcm/task.yaml
!..\ code-block\:\:\ java\n\n\ \ public\ int\ swap()\ {\n\ \ \ \ \ assert\ (top\ \!\=\ null\ &&\ top.next\ \!\=\ null);\n\ \ \ \ \ top.next\ \=\ top.next.next;\n\ \ \ \ \ top.next.next\ \=\ top.next;\n\ \ \ \ \ top\ \=\ top.next;\n\ \ }\n=

#. name, q5, feedback
#: m11_qcm/task.yaml
!\nS\u00e9quence\ incorrecte,\ perd\ des\ parties\ de\ la\ cha\u00eene.\n=

#. name, q6, name
#: m11_qcm/task.yaml
!Structures\ de\ donn\u00e9es\ \u00e0\ base\ de\ listes=

#. name, q6, header
#: m11_qcm/task.yaml
!\nParmi\ les\ groupes\ d'affirmations\ suivants,\ lequel\ est\ correct\ ?\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *pile*\ (stack),\ on\ retire\ d'abord\ le\ dernier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ caract\u00e8res\ tap\u00e9s\ par\ l'utilisateur\ sur\ un\ clavier\ d'ordinateur\ sont\ stock\u00e9s\ dans\ une\ *file*\ (queue).\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *file*\ (queue),\ on\ retire\ d'abord\ le\ premier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ variables\ locales\ de\ chaque\ m\u00e9thode\ ou\ routine\ dans\ un\ programme\ informatique\ sont\ stock\u00e9es\ sur\ une\ *pile*\ (stack).\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *pile*\ (stack),\ on\ retire\ d'abord\ le\ dernier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ variables\ locales\ de\ chaque\ m\u00e9thode\ ou\ routine\ dans\ un\ programme\ informatique\ sont\ stock\u00e9es\ sur\ une\ *file*\ (queue).\n=

#. name, q6, feedback
#: m11_qcm/task.yaml
!\nLes\ variables\ locales\ de\ chaque\ m\u00e9thode\ ou\ routine\ dans\ un\ programme\ informatique\ sont\ stock\u00e9es\ sur\ une\ pile.\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *pile*\ (stack),\ on\ retire\ d'abord\ le\ premier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ caract\u00e8res\ tap\u00e9s\ par\ l'utilisateur\ sur\ un\ clavier\ d'ordinateur\ sont\ stock\u00e9s\ dans\ une\ *file*\ (queue).\n=

#. name, q6, feedback
#: m11_qcm/task.yaml
!\nUne\ pile\ suit\ le\ principe\ "dernier\ entr\u00e9,\ premier\ sorti".\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *file*\ (queue),\ on\ retire\ d'abord\ le\ dernier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ variables\ locales\ de\ chaque\ m\u00e9thode\ ou\ routine\ dans\ un\ programme\ informatique\ sont\ stock\u00e9es\ sur\ une\ *pile*\ (stack).\n=

#. name, q6, feedback
#: m11_qcm/task.yaml
!\nUne\ file\ suit\ le\ principe\ "premier\ entr\u00e9,\ premier\ sorti".\n=

#. name, q6, text
#: m11_qcm/task.yaml
!\n\n-\ Dans\ une\ *file*\ (queue),\ on\ retire\ d'abord\ le\ premier\ \u00e9l\u00e9ment\ ajout\u00e9.\n-\ Les\ caract\u00e8res\ tap\u00e9s\ par\ l'utilisateur\ sur\ un\ clavier\ d'ordinateur\ sont\ stock\u00e9s\ dans\ une\ *pile*\ (stack).\n=

#. name, q6, feedback
#: m11_qcm/task.yaml
!\nLes\ caract\u00e8res\ tap\u00e9s\ par\ l'utilisateur\ sur\ un\ clavier\ d'ordinateur\ sont\ stock\u00e9s\ dans\ une\ file.\n=

#. name, q7, name
#: m11_qcm/task.yaml
!Pile\ \:\ utilisation=

#. name, q7, header
#: m11_qcm/task.yaml
!\nQue\ fait\ la\ m\u00e9thode\ suivante\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ m(StackOfInt\ stack)\ {\n\ \ \ \ \ \ \ \ int\ a\ \=\ stack.pop();\n\ \ \ \ \ \ \ \ int\ b\ \=\ stack.pop();\n\ \ \ \ \ \ \ \ stack.push(a+b);\n\ \ \ \ }\n=

#. name, q7, text
#: m11_qcm/task.yaml
!\n\n-\ Si\ la\ pile\ contient\ au\ moins\ deux\ \u00e9l\u00e9ments,\ remplace\ les\ deux\ \u00e9l\u00e9ments\ au\ sommet\ de\ la\ pile\ par\ leur\ somme.\ \ Sinon,\ lance\ une\ ``IllegalStateException``.\n=

#. name, q7, text
#: m11_qcm/task.yaml
!\n\n-\ Si\ la\ pile\ contient\ au\ moins\ deux\ \u00e9l\u00e9ments,\ ajoute\ leur\ somme\ au\ sommet\ de\ la\ pile.\ \ Sinon,\ lance\ une\ ``IllegalStateException``.\n=

#. name, q7, feedback
#: m11_qcm/task.yaml
!\nLes\ deux\ \u00e9l\u00e9ments\ sont\ d'abord\ retir\u00e9s.\n=

#. name, q7, text
#: m11_qcm/task.yaml
!\n\n-\ Retire\ les\ deux\ \u00e9l\u00e9ments\ au\ sommet\ de\ la\ pile\ et\ retourne\ leur\ somme.\ \ Si\ la\ pile\ contient\ moins\ de\ deux\ \u00e9l\u00e9ments,\ lance\ une\ ``IllegalStateException``.\n=

#. name, q7, feedback
#: m11_qcm/task.yaml
!\nLa\ somme\ n'est\ pas\ retourn\u00e9e.\n=

#. name, q7, text
#: m11_qcm/task.yaml
!\n\n-\ Si\ la\ pile\ contient\ exactement\ deux\ \u00e9l\u00e9ments,\ remplace\ les\ deux\ \u00e9l\u00e9ments\ au\ sommet\ de\ la\ pile\ par\ leur\ somme.\ \ Sinon,\ lance\ une\ ``IllegalStateException``.\n=

#. name, q7, feedback
#: m11_qcm/task.yaml
!\nLa\ pile\ peut\ contenir\ plus\ de\ deux\ \u00e9l\u00e9ments\ sans\ qu'une\ exception\ se\ produise.\n=

#. name, q7, text
#: m11_qcm/task.yaml
!\n\n-\ Si\ la\ pile\ contient\ au\ moins\ deux\ \u00e9l\u00e9ments,\ retire\ les\ deux\ \u00e9l\u00e9ments\ au\ sommet\ de\ la\ pile\ ajoute\ leur\ somme\ au\ fond\ de\ la\ pile.\ \ Sinon,\ lance\ une\ ``IllegalStateException``.\n=

#. name, q7, feedback
#: m11_qcm/task.yaml
!\nLa\ somme\ n'est\ pas\ ajout\u00e9e\ au\ fond\ de\ la\ pile.\n=

#. author
#: m11dem11/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka\ (ressource\ \:\ Syllabus\ d'exercices\ LSINF1101)=

#. context
#: m11dem11/task.yaml
!Dans\ la\ phase\ de\ r\u00e9alisation,\ vous\ devez\ utiliser\ des\ m\u00e9thodes\ provenant\ du\ framework\ de\ test\ **JUnit**\ afin\ de\ tester\ votre\ impl\u00e9mentation\ dans\ BlueJ.\ L'objectif\ de\ cet\ exercice\ est\ d'utiliser\ les\ m\u00e9thodes\ de\ JUnit\ pour\ v\u00e9rifier\ le\ bon\ fonctionnement\ de\ la\ classe\ ``DList``.\ ci-apr\u00e8s\ \:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ class\ DList{\n\ \ \ \ \ \ \ \ List<Double>\ l;\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ liste\ initialement\ vide\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DList(){\n\ \ \ \ \ \ \ \ \ \ \ \ l\ \=\ new\ LinkedList<Double>();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ ajout\u00e9\ le\ Double\ d\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ add(Double\ d){\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(d);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouvait\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ retire\ de\ la\ liste\ toutes\ les\ instances\ de\ Double\ egales\ a\ d\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ remove(Double\ d){\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\ \!\=\ null;\n\ \ \ \ \ \ \ \ \ \ \ \ int\ i\ \=\ l.indexOf(d);\n\ \ \ \ \ \ \ \ \ \ \ \ if(i\ >\=\ 0){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Double\ d1\ \=\ l.remove(i);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouve\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ contains(Double\ d){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.contains(d);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ Double\ se\ trouvant\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ size(){\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.size();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nIl\ vous\ est\ propos\u00e9\ une\ classe\ de\ test\ comme\ exemple\ dans\ laquelle\ les\ assertions\ JUnit\ ne\ sont\ que\ partiellement\ \u00e9crites.\ Lisez\ attentivement\ le\ code\ de\ cette\ classe\ afin\ de\ remplacer\ les\ blocs\ de\ commentaires\ \ du\ type\ ``/*(numero)???*/``\ par\ le\ code\ qui\ convient.\ Si\ cela\ est\ fait\ correctement,\ JUnit\ pourra\ d\u00e9tecter\ l'erreur\ contenue\ dans\ l'impl\u00e9mentation\ de\ la\ classe\ ``DList``.\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ public\ static\ class\ DListTest\ extends\ junit.framework.TestCase{\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ verifie\ le\ bon\ fonctionnement\ de\ la\ methode\ contains\ sur\ plusieurs\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ exemples\ d'utilisation\ de\ la\ liste\ de\ Double\:\ cette\ m\u00e9thode\ v\u00e9rifie\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ que\ l'appel\ \u00e0\ la\ m\u00e9thode\ contains\ r\u00e9ussit\ quand\ il\ le\ faut.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ testReussiteContains(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Creation\ de\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ DList\ l\ \=\ new\ DList();\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Ajout\ de\ trois\ Double\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Verification\ sur\ base\ des\ elements\ ajoutes\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("La\ verification\ de\ la\ presence\ d'un\ element\ present\ une\ fois\ dans\ la\ liste\ devrait\ renvoyer\ true",\ /*(1)???*/,\ /*(2)???*/);\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("La\ verification\ de\ la\ presence\ d'un\ element\ present\ deux\ fois\ dans\ la\ liste\ devrait\ renvoyer\ true",\ /*(3)???*/,\ /*(4)???*/);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ verifie\ le\ bon\ fonctionnement\ de\ la\ methode\ contains\ sur\ plusieurs\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ exemples\ d'utilisation\ de\ la\ liste\ de\ Double\:\ cette\ m\u00e9thode\ v\u00e9rifie\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ que\ l'appel\ \u00e0\ la\ m\u00e9thode\ contains\ \u00e9choue\ quand\ il\ le\ faut.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ testEchecContains(){\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Creation\ de\ la\ DList\n\ \ \ \ \ \ \ \ \ \ \ \ DList\ l\ \=\ new\ DList();\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Ajout\ de\ trois\ Double\ dans\ la\ DList\n\ \ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\ \ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Verification\ v\u00e9rification\ prennant\ en\ compte\ les\ \u00e9l\u00e9ments\ pr\u00e9c\u00e9demment\ ajout\u00e9s\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("La\ verification\ de\ la\ presence\ d'un\ element\ absent\ de\ la\ liste\ devrait\ renvoyer\ false",\ /*(5)???*/,\ /*(6)???*/);\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Verification\ qu'un\ element\ supprim\u00e9\ n'est\ plus\ contenu\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ l.remove(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("La\ verification\ de\ la\ presence\ d'un\ element\ qui\ n'est\ plus\ present\ dans\ la\ liste\ devrait\ renvoyer\ false",\ /*(7)???*/,\ /*(8)???*/);\n\ \ \ \ \ \ \ \ }\n\n=

#. name
#: m11dem11/task.yaml
!Mission\ 11\ \:\ Question\ de\ D\u00e9marrage\ 1\ \:\ JUnit\ (partie1)=

#. author
#: m11dem12/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka\ (ressource\:\ syllabus\ d'exercices\ SINF1101)=

#. context
#: m11dem12/task.yaml
!Suite\ de\ la\ question\ de\ d\u00e9marrage\ 1.\n\nLa\ classe\ sous\ test\:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ class\ DList\n\ \ \ \ {\n\ \ \ \ \ \ \ \ List<Double>\ l;\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ liste\ initialement\ vide\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DList()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ l\=new\ LinkedList<Double>();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ ajout\ le\ Double\ d\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ add(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\!\=null;\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(d);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouvait\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ retire\ de\ la\ liste\ toutes\ les\ instances\ de\ Double\ egales\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ d\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ remove(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\!\=null;\n\ \ \ \ \ \ \ \ \ \ \ \ int\ i\=l.indexOf(d);\n\ \ \ \ \ \ \ \ \ \ \ \ if(i>\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Double\ d1\=l.remove(i);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouve\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ contains(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.contains(d);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ Double\ se\ trouvant\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ size()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.size();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nLa\ partie\ de\ la\ classe\ test\ \u00e0\ compl\u00e9ter\:\n\n..\ Code-block\ \:\:\ java\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ verification\ du\ bon\ fonctionnement\ de\ la\ methode\ remove\:\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ cette\ m\u00e9thode\ v\u00e9rifie\ que\ la\ m\u00e9thode\ remove\ \u00e9choue\ quand\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ il\ le\ faut.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ testReussiteRemove()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Creation\ de\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ DList\ l\=new\ DList();\n\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ ajout\ de\ trois\ elements\ a\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ retrait\ de\ ces\ trois\ elements\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ se\ trouvant\ dans\ la\ liste"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "\ devrait\ renvoyer\ true",/*(1)???*/,/*(2)???*/);\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ se\ trouvant\ deux\ fois\ dans"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "\ la\ liste\ devrait\ renvoyer\ true",/*(3)???*/,/*(4)???*/);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ verification\ du\ bon\ fonctionnement\ de\ la\ methode\ remove\:\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ cette\ m\u00e9thode\ v\u00e9rifie\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ que\ la\ m\u00e9thode\ remove\ \u00e9choue\ quand\ il\ le\ faut.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ testEchecRemove(){\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Creation\ de\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ DList\ l\=new\ DList();\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Retrait\ d'un\ element\ d'une\ liste\ vide\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ ne\ se\ trouvant\ pas\ dans"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "\ la\ liste\ devriat\ renvoyer\ false",/*(5)???*/,/*(6)???*/);\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Ajout\ de\ trois\ elements\ a\ la\ liste\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ /*(7)???*/\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(new\ Double(2.4));\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ Retrait\ de\ ces\ trois\ elements\n\ \ \ \ \ \ \ \ \ \ \ \ l.remove(new\ Double(2.3));\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ ne\ se\ trouvant\ plus\ dans"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "\ la\ liste\ devrait\ renvoyer\ false",/*(8)???*/,/*(9)???*/);\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ ne\ se\ trouvant\ pas\ dans\ "\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "la\ liste\ devriat\ renvoyer\ false",/*(10)???*/,/*(11)???*/);\n\ \ \ \ \ \ \ \ \ \ \ \ l.remove(new\ Double(2.4));\n\ \ \ \ \ \ \ \ \ \ \ \ assertEquals("Le\ retrait\ d'un\ element\ dont\ les\ deux\ exemplaires"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ "\ ne\ sont\ plus\ dans\ la\ liste\ devrait\ renvoyer\ false",/*(12)???*/,/*(13)???*/);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ }\n=

#. name
#: m11dem12/task.yaml
!Mission\ 11\:\ Question\ de\ D\u00e9marrage\ 2\ \:\ JUnit\ (partie\ 2)=

#. author
#: m11dem13/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka\ (ressource\ \:\ syllabus\ d'exercices\ SINF1101)=

#. context
#: m11dem13/task.yaml
!A\ la\ suite\ de\ l'\u00e9criture\ de\ la\ classe\ ``DListTest``\ faite\ aux\ questions\ pr\u00e9c\u00e9dentes,\ vous\ avez\ r\u00e9ussi\ \u00e0\ d\u00e9couvrir\ \u00e0\ l'aide\ de\ JUnit\ l'erreur\ contenue\ dans\ la\ classe\ test\u00e9e.\ Soumettez\ pour\ finir\ une\ version\ corrig\u00e9e\ de\ cette\ classe\ ``DList``.\n\n**Attention,\ vous\ devez\ soumettre\ la\ classe\ DList\ enti\u00e8re\ avec\ exactement\ les\ m\u00eames\ attributs\ et\ les\ m\u00eames\ m\u00e9thodes.\ Seul\ le\ corps\ des\ m\u00e9thodes\ et\ les\ valeurs\ des\ attributs\ peuvent\ \u00eatre\ diff\u00e9rents.**=

#. name
#: m11dem13/task.yaml
!Mission\ 11\ \:\ Question\ de\ D\u00e9marrage\ 3\ \:\ JUnit\ (partie3)\ une\ DList\ correcte=

#. name, q1, header
#: m11dem13/task.yaml
!Rappel\ de\ la\ classe\ ``DList``\ \u00e0\ corriger\:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ class\ DList\n\ \ \ \ {\n\ \ \ \ \ \ \ \ List<Double>\ l;\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ construit\ une\ liste\ initialement\ vide\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ DList()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ l\=new\ LinkedList<Double>();\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ a\ ajout\ le\ Double\ d\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ add(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\!\=null;\n\ \ \ \ \ \ \ \ \ \ \ \ l.add(d);\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouvait\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ retire\ de\ la\ liste\ toutes\ les\ instances\ de\ Double\ egales\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ d\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ remove(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ assert\ d\!\=null;\n\ \ \ \ \ \ \ \ \ \ \ \ int\ i\=l.indexOf(d);\n\ \ \ \ \ \ \ \ \ \ \ \ if(i>\=0)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Double\ d1\=l.remove(i);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ d\!\=null\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ true\ si\ d\ se\ trouve\ dans\ la\ liste\ et\ false\ sinon\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ contains(Double\ d)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.contains(d);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nombre\ de\ Double\ se\ trouvant\ dans\ la\ liste\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ int\ size()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ l.size();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n=

#. context
#: m11real/task.yaml
!Vous\ pouvez\ soumettre\ ici\ ou\ via\ BlueJ\ votre\ phase\ de\ r\u00e9alisation\ pour\ la\ Mission\ 11.\n\nVous\ attendons\ une\ archive\ **.zip**\ contenant\ uniquement\ les\ fichiers\ \:\n\n-\ Classement.java\n-\ ClassementTemps.java\n-\ Coureur.java\n-\ Dlist.java\n-\ DListTest.java\n-\ Main.java\n-\ Resultat.java\n-\ Temps.java\n-\ README.txt=

#. name
#: m11real/task.yaml
!Mission\ 11\:\ Phase\ de\ r\u00e9alisation\:\ Soumission=

#. name, q1, name
#: m11real/task.yaml
!Phase\ de\ r\u00e9alisation\ de\ la\ Mission\ 11=

#. author
#: m12_examj2011enonce_online/task.yaml
!Charles\ Pecheur=

#. context
#: m12_examj2011enonce_online/task.yaml
!--------\nContexte\n--------\n\nUne\ *grappe\ d'ordinateurs*\ (computer\ cluster)\ est\ un\ ensemble\ d'ordinateurs\ connect\u00e9s\ entre\ eux\ et\ organis\u00e9s\ de\ mani\u00e8re\ \u00e0\ appara\u00eetre\ comme\ une\ large\ ressource\ de\ calcul\ sur\ laquelle\ peuvent\ s'ex\u00e9cuter\ simultan\u00e9ment\ de\ nombreuses\ t\u00e2ches,\ la\ r\u00e9partition\ des\ t\u00e2ches\ entre\ les\ diff\u00e9rents\ ordinateurs\ \u00e9tant\ g\u00e9r\u00e9e\ par\ le\ syst\u00e8me\ de\ mani\u00e8re\ transparente\ pour\ l'utilisateur.\ \ On\ appelle\ *processus*\ (process)\ une\ t\u00e2che\ individuelle\ dont\ un\ utilisateur\ peut\ demander\ l'ex\u00e9cution\ sur\ la\ grappe.\n\n..\ image\:\:\ m12_examj2011enonce_online/cluster.png\n\ \ \ \ \:align\:\ center\n\ \ \ \ \:scale\:\ 50%\n\nLe\ programme\ que\ vous\ devez\ compl\u00e9ter\ permet\ de\ repr\u00e9senter\ la\ gestion\ des\ processus\ sur\ une\ grappe\ d'ordinateurs.\ \ La\ grappe\ est\ d\u00e9crite\ par\ la\ classe\ ``Cluster``.\ Une\ grappe\ contient\ la\ liste\ des\ ordinateurs\ de\ la\ grappe,\ organis\u00e9e\ sous\ forme\ de\ **liste\ cha\u00een\u00e9e\ circulaire**\u00a0\:\ les\ noeuds\ de\ la\ liste\ sont\ connect\u00e9s\ en\ boucle,\ de\ sorte\ que\ la\ liste\ n'a\ pas\ de\ d\u00e9but\ ni\ de\ fin.\ \ Cette\ organisation\ est\ utilis\u00e9e\ pour\ ajouter\ les\ nouveaux\ processus\ \u00e0\ chaque\ ordinateur\ \u00e0\ tour\ de\ r\u00f4le,\ dans\ la\ mesure\ des\ ressources\ disponibles.\n\n..\ image\:\:\ m12_examj2011enonce_online/listeCirc.png\n\ \ \ \ \:align\:\ center\n\ \ \ \ \:scale\:\ 60%\n\nLe\ fonctionnement\ de\ la\ liste\ est\ document\u00e9\ dans\ la\ classe\ ``Cluster``.\ \ La\ t\u00eate\ de\ liste\ se\ d\u00e9cale\ \u00e0\ chaque\ ajout\ de\ processus\ pour\ assurer\ une\ r\u00e9partition\ plus\ \u00e9quitable.\ \ Par\ exemple,\ dans\ la\ situation\ illustr\u00e9e\ ci-dessus,\ l'ordinateur\ 1\ est\ en\ t\u00eate\ de\ liste.\ \ Si\ on\ d\u00e9sire\ ajouter\ un\ processus,\ et\ que\ ni\ l'ordinateur\ 1\ ni\ le\ 2\ ne\ disposent\ des\ ressources\ suffisantes,\ le\ processus\ sera\ ajout\u00e9\ \u00e0\ l'ordinateur\ 3,\ et\ l'ordinateur\ 4\ deviendra\ la\ nouvelle\ t\u00eate\ de\ liste.\n\nUne\ grappe\ peut\ contenir\ plusieurs\ types\ d'ordinateurs,\ dont\ les\ fonctionnalit\u00e9s\ communes\ sont\ d\u00e9crites\ dans\ l'interface\ ``ComputerIF``.\ \ Deux\ impl\u00e9mentations\ de\ cette\ interface\ sont\ fournies\u00a0\:\n\n-\ \ \ \ ``BasicComputer``\ qui\ supporte\ un\ seul\ processus\ \u00e0\ la\ fois,\ et\n-\ \ \ \ ``FullComputer``\ qui\ supporte\ un\ nombre\ maximum\ d\u00e9termin\u00e9\ de\ processus,\ g\u00e9r\u00e9s\ dans\ un\ tableau.\n\nUn\ processus\ est\ d\u00e9crit\ par\ la\ classe\ ``Process``,\ que\ vous\ devez\ \u00e9crire\ \u00e0\ la\ question\ 3.\ \ Le\ programme\ utilise\ aussi\ sa\ propre\ classe\ d'exceptions,\ d\u00e9finie\ dans\ ``UnavailableException``.\n\nRappelons\ qu'il\ convient\ d'utiliser\ la\ m\u00e9thode\ ``equals``\ pour\ comparer\ des\ objets,\ m\u00eame\ si\ cette\ m\u00e9thode\ n'est\ pas\ explicitement\ re-d\u00e9finie\ dans\ les\ classes\ correspondantes.\n\n--------------\nRessources\n--------------\n\n-\ \ \ \ `The\ Java\ API\ <http\://docs.oracle.com/javase/8/docs/api/>`_\n-\ \ \ \ `Introduction\ to\ Programming\ Using\ Java\ (JavaNotes)\ <http\://math.hws.edu/javanotes/>`_\n\n--------\nAnnexes\n--------\n\nVous\ trouverez\ ci-apr\u00e8s\ les\ sources\ (incompl\u00e8tes)\ du\ programme\ auquel\ se\ rapportent\ les\ questions\ \:\n\n-\ \ \ \ ComputerIF.java_\n-\ \ \ \ BasicComputer.java_\n-\ \ \ \ Process.java_\n-\ \ \ \ UnavailableException.java_\n-\ \ \ \ FullComputer.java_\n-\ \ \ \ Cluster.java_\n\n------------------\n\nComputerIF.java\n----------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Un\ ordinateur,\ sur\ lequel\ on\ peut\ ajouter\ et\ retirer\ des\ processus.\n\ \ \ \ \ *\ L'ordinateur\ dispose\ de\ ressources\ (nombre\ de\ processus,\ volume\ de\ stockage)\n\ \ \ \ \ *\ \u00e9ventuellement\ limit\u00e9es,\ et\ donc\ peut\ refuser\ l'ajout\ de\ processus\ suppl\u00e9mentaires.\n\ \ \ \ \ *\ Un\ ordinateur\ a\ un\ nom.\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure,\ Ch.\ Pecheur\n\ \ \ \ \ *\ @version\ Juin\ 2011\n\ \ \ \ \ */\n\n\ \ \ \ public\ interface\ ComputerIF\n\ \ \ \ {\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ cet\ ordinateur\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ \u00e0\ cet\ ordinateur,\ si\ les\ ressources\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ n\u00e9cessaires\ sont\ disponibles.\ \ Retourne\ true\ si\ le\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ \u00e9t\u00e9\ ajout\u00e9,\ false\ sinon.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ addProcess(Process\ p);\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ p\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ retir\u00e9\ de\ cet\ ordinateur,\ si\ ce\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ se\ trouve\ sur\ cet\ ordinateur.\ \ Retourne\ true\ si\ le\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ a\ \u00e9t\u00e9\ supprim\u00e9,\ false\ sinon.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ removeProcess(Process\ p);\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Tous\ les\ processus\ de\ cet\ ordinateur\ ont\ \u00e9t\u00e9\ retir\u00e9s.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ removeAllProcesses();\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'ordinateur.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getName();\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Retourne\ la\ liste\ des\ processus\ de\ cet\ ordinateur\ sous\ forme\ de\ texte,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ une\ ligne\ par\ processus,\ chaque\ ligne\ comprenant\ le\ nom\ du\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ sa\ taille\ de\ stockage,\ s\u00e9par\u00e9s\ par\ un\ espace,\ et\ se\ termine\ par\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ un\ passage\ \u00e0\ la\ ligne.\ \ Par\ exemple\:\n\ \ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ process1\ 0\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ bigprocess\ 200\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ smallprocess\ 20\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getState();\n\ \ \ \ \ }\n\nBasicComputer.java\n----------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ \ *\ Un\ ordinateur\ de\ base,\ supportant\ un\ seul\ processus\ et\ sans\ capacit\u00e9\ de\ stockage.\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure,\ Ch.\ Pecheur\n\ \ \ \ \ *\ @version\ Juin\ 2011\n\ \ \ \ \ */\n\ \ \ \ public\ class\ BasicComputer\ implements\ ComputerIF\n\ \ \ \ {\n\ \ \ \ \ \ \ \ private\ String\ name;\ //\ Nom\ de\ l'ordinateur\n\ \ \ \ \ \ \ \ private\ Process\ proc;\ //\ processus\ \u00e9ventuel,\ null\ si\ absent\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ name\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ Construit\ un\ BasicComputer\ de\ nom\ name.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ BasicComputer(String\ name)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ this.name\ \=\ name;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ retourne\ le\ nom\ de\ l'ordinateur.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getName()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ return\ name;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ cet\ ordinateur\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ \u00e0\ cet\ ordinateur,\ si\ aucun\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ n'est\ pr\u00e9sent\ et\ si\ p\ ne\ demande\ pas\ de\ stockage.\ Retourne\ true\ si\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ processus\ a\ \u00e9t\u00e9\ ajout\u00e9,\ false\ sinon.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ addProcess(Process\ p)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (proc\ \=\=\ null\ &&\ p.getRequiredStorage()\ \=\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ proc\ \=\ p;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ p\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ retir\u00e9\ de\ cet\ ordinateur,\ s'il\ s'agit\ bien\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ processus\ pr\u00e9sent.\ Retourne\ true\ si\ le\ processus\ a\ \u00e9t\u00e9\ supprim\u00e9,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ false\ sinon.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ removeProcess(Process\ p)\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 1\n\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Tous\ les\ processus\ de\ cet\ ordinateur\ ont\ \u00e9t\u00e9\ retir\u00e9s.\ Retire\ proc\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ s'il\ est\ actif.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ removeAllProcesses()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ proc\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Retourne\ la\ liste\ des\ processus\ de\ cet\ ordinateur\ sous\ forme\ de\ texte,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ avec\ une\ ligne\ par\ processus,\ chaque\ ligne\ comprenant\ le\ nom\ du\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ sa\ taille\ de\ stockage,\ s\u00e9par\u00e9s\ par\ un\ espace,\ et\ se\ termine\ par\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ un\ passage\ \u00e0\ la\ ligne.\ \ Par\ exemple\:\n\ \ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ process1\ 0\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ bigprocess\ 200\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ smallprocess\ 20\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ String\ getState()\ {\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (proc\ \!\=\ null)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ proc.getDescr()\ +\ "\\n";\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ "";\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nProcess.java\n-----------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 3\n\n\n\nUnavailableException.java\n---------------------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ exception\ utilis\u00e9e\ lorsqu'une\ op\u00e9ration\ ne\ peut\ \u00eatre\ effectu\u00e9e\n\ \ \ \ \ *\ par\ manque\ de\ ressources.\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure,\ Ch.\ Pecheur\n\ \ \ \ \ *\ @version\ Juin\ 2011\n\ \ \ \ \ */\n\ \ \ \ public\ class\ UnavailableException\ extends\ Exception\n\ \ \ \ {\n\ \ \ \ \ \ \ \ public\ UnavailableException()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ super();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\nFullComputer.java\n-----------------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Un\ ordinateur\ avec\ capacit\u00e9\ de\ stockage\ limit\u00e9e\ et\ nombre\ de\ processus\ limit\u00e9.\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure,\ Ch.\ Pecheur\n\ \ \ \ \ *\ @version\ Juin\ 2011\n\ \ \ \ \ */\n\ \ \ \ public\ class\ FullComputer\ extends\ BasicComputer\n\ \ \ \ {\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ Les\ processus\ pr\u00e9sents\ sur\ cet\ ordinateur.\ \ Les\ processus\ sont\ dans\n\ \ \ \ \ \ \ \ \ *\ procs[0]\ ..\ procs[count-1],\ et\ procs[i]\ \=\=\ null\ pour\ i\ >\=\ count.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ private\ Process[]\ procs;\n\ \ \ \ \ \ \ \ private\ int\ count;\ \ \ \ \ \ \ \ \ //\ nombre\ de\ processus\ pr\u00e9sents\n\ \ \ \ \ \ \ \ private\ int\ storage;\ \ \ \ \ \ \ //\ capacit\u00e9\ de\ stockage\ totale\n\ \ \ \ \ \ \ \ private\ int\ availStorage;\ \ //\ capacit?\u00e9\ de\ stockage\ restante\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ n\ >\ 0,\ name\ \!\=\ null,\ storage\ >\=\ 0\n\ \ \ \ \ \ \ \ \ *\ @post\ Construit\ un\ FullComputer\ de\ nom\ name,\ supportant\ n\ processus\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ et\ avec\ une\ capacit\u00e9\ de\ stockage\ \u00e9gale\ \u00e0\ storage\n\ \ \ \ \ \ \ \ \ */\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 2\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ cet\ ordinateur\n\ \ \ \ \ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ \u00e0\ cet\ ordinateur,\ si\ (1)\ le\ nombre\ de\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ processus\ maximal\ n'est\ pas\ atteint\ et\ (2)\ la\ capacit\u00e9\ de\ stockage\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ n\u00e9cessaire\ pour\ p\ est\ disponible.\ Retourne\ true\ si\ le\ processus\ a\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \u00e9t\u00e9\ ajout\u00e9,\ false\ sinon.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ boolean\ addProcess(Process\ p)\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 4\n\n\n\ \ \ \ \ \ \ \ \ RESTE\ DU\ CODE\ NON\ FOURNI\n\n\ \ \ \ }\n\nCluster.java\n-----------------------------\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ Une\ grappe\ (cluster)\ d'ordinateurs\ formant\ une\ ressource\ commune\ pour\n\ \ \ \ \ *\ l'ex\u00e9cution\ de\ processus.\ \ Les\ ordinateurs\ du\ cluster\ sont\ g\u00e9r\u00e9s\ comme\n\ \ \ \ \ *\ une\ liste\ circulaire,\ de\ telle\ mani\u00e8re\ que\ les\ processus\ soient\ distribu\u00e9s\n\ \ \ \ \ *\ \u00e0\ tour\ de\ r\u00f4le\ \u00e0\ chaque\ ordinateur,\ dans\ la\ limite\ de\ leurs\ ressources\ disponibles.\n\ \ \ \ \ *\ La\ t\u00eate\ de\ la\ liste\ correspond\ prochain\ ordinateur\ \u00e0\ recevoir\ un\ nouveau\ processus,\n\ \ \ \ \ *\ pour\ autant\ qu'il\ ait\ les\ ressources\ n\u00e9cessaires.\n\ \ \ \ \ *\n\ \ \ \ \ *\ @author\ O.\ Bonaventure,\ Ch.\ Pecheur\n\ \ \ \ \ *\ @version\ Juin\ 2011\n\ \ \ \ \ */\n\n\ \ \ \ import\ java.io.*;\n\n\ \ \ \ public\ class\ Cluster\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ classe\ interne\:\ un\ noeud\ de\ la\ liste\ circulaire\ des\ ordinateurs\ du\ cluster\n\ \ \ \ \ \ \ \ private\ class\ ListNode\ {\n\ \ \ \ \ \ \ \ \ \ \ \ ListNode\ next;\n\ \ \ \ \ \ \ \ \ \ \ \ ComputerIF\ elem;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ La\ t\u00eate\ courante\ de\ la\ liste\ des\ ordinateurs.\ Les\ noeuds\ suivants\ sont\n\ \ \ \ \ \ \ \ \ *\ cha\u00een\u00e9s\ de\ mani\u00e8re\ circulaire\:\ la\ cha\u00eene\ finit\ toujours\ par\ revenir\ \u00e0\n\ \ \ \ \ \ \ \ \ *\ current.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ private\ ListNode\ current;\n\ \ \ \ \ \ \ \ private\ int\ count;\ //\ nombre\ d'ordinateurs\ dans\ le\ cluster\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ Constructeur\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ Cluster()\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ count\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ current\ \=\ null;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ un\ ordinateur\ du\ cluster.\n\ \ \ \ \ \ \ \ \ *\ @post\ Le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ au\ premier\ ordinateur,\ \u00e0\ partir\ de\ la\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ t\u00eate\ de\ la\ liste,\ disposant\ des\ ressources\ n\u00e9cessaires.\ La\ nouvelle\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ t\u00eate\ de\ liste\ est\ le\ noeud\ qui\ suit\ celui\ de\ l'ordinateur\ o\u00f9\ p\ a\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \u00e9t\u00e9\ ajout\u00e9.\ Si\ aucun\ ordinateur\ ne\ dispose\ de\ ressources\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ suffisantes,\ la\ t\u00eate\ de\ liste\ est\ inchang\u00e9e\ et\ une\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ UnavailableException\ est\ lanc\u00e9e.\n\ \ \ \ \ \ \ \ \ */\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 5\n\n\ \ \ \ \f\ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ p\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ Le\ processus\ p\ a\ \u00e9t\u00e9\ retir\u00e9\ du\ premier\ ordinateur\ du\ cluster\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ sur\ lequel\ il\ se\ trouvait,\ \u00e0\ partir\ de\ la\ t\u00eate\ de\ la\ liste.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Si\ p\ n'est\ pas\ trouv\u00e9,\ lance\ UnavailableException.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ removeProcess(Process\ p)\ throws\ UnavailableException\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ CODE\ NON\ FOURNI\n\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ -\n\ \ \ \ \ \ \ \ \ *\ @post\ Tous\ les\ processus\ de\ tous\ les\ ordinateurs\ ont\ \u00e9t\u00e9\ retir\u00e9s.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ removeAllProcesses()\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ CODE\ NON\ FOURNI\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ \ comp\ \!\=\ null,\ comp\ ne\ fait\ pas\ d\u00e9j\u00e0\ partie\ du\ cluster.\n\ \ \ \ \ \ \ \ \ *\ @post\ L'ordinateur\ comp\ est\ ajout\u00e9\ \u00e0\ la\ liste\ des\ ordinateurs.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ addComputer(ComputerIF\ comp)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ ListNode\ l\ \=\ new\ ListNode();\n\ \ \ \ \ \ \ \ \ \ \ \ l.elem\ \=\ comp;\n\ \ \ \ \ \ \ \ \ \ \ if(count\ \=\=\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ l.next\ \=\ l;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current\ \=\ l;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ l.next\ \=\ current.next;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ current.next\ \=\ l;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ count++;\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ comp\ \!\=\ null\n\ \ \ \ \ \ \ \ \ *\ @post\ L'ordinateur\ comp\ a\ \u00e9t\u00e9\ retir\u00e9\ du\ cluster,\ s'il\ s'y\ trouvait.\ Si\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ comp\ est\ en\ t\u00eate\ de\ liste,\ la\ t\u00eate\ de\ liste\ passe\ au\ noeud\ suivant,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ sinon\ elle\ est\ inchang\u00e9e.\ Retourne\ true\ si\ comp\ a\ \u00e9t\u00e9\ retir\u00e9,\ false\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ sinon.\n\ \ \ \ \ \ \ \ \ */\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 6\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ filename\ est\ un\ nom\ de\ fichier\n\ \ \ \ \ \ \ \ \ *\ @post\ Le\ fichier\ filename\ contient\ l'\u00e9tat\ du\ cluster\ sous\ forme\ de\ texte.\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Pour\ chaque\ processus\ de\ chaque\ ordinateur\ du\ cluster,\ le\ fichier\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ contient\ une\ ligne\ compos\u00e9e\ du\ nom\ et\ de\ la\ capacit\u00e9\ demand\u00e9e,\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ s\u00e9par\u00e9s\ par\ un\ espace.\ Par\ exemple\ \:\n\ \ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ process1\ 0\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ bigprocess\ 200\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ smallprocess\ 20\n\ \ \ \ \ \ \ \ \ *\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ Le\ nom\ des\ ordinateurs\ sur\ lesquels\ se\ trouvent\ les\ processus\ n'est\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ pas\ sauvegard\u00e9.\ Arr\u00eate\ le\ programme\ si\ une\ erreur\ d'I/O\ se\ produit.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ saveState(String\ filename)\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ CODE\ NON\ FOURNI\n\n\n\ \ \ \ \ \ \ \ /**\n\ \ \ \ \ \ \ \ \ *\ @pre\ filename\ le\ nom\ d'un\ fichier\ sauvegard\u00e9\ par\ saveState\n\ \ \ \ \ \ \ \ \ *\ @post\ Retire\ tous\ les\ processus\ pr\u00e9sents\ dans\ le\ cluster,\ puis\ ajoute\ au\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ cluster\ les\ processus\ dont\ les\ noms\ et\ capacit\u00e9s\ sont\ donn\u00e9s\ dans\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ le\ fichier,\ selon\ le\ format\ g\u00e9n\u00e9r\u00e9\ par\ saveState.\ \ Arr\u00eate\ le\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ programme\ si\ une\ erreur\ d'I/O\ se\ produit\ ou\ si\ la\ capacit\u00e9\ du\n\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ cluster\ est\ insuffisante.\n\ \ \ \ \ \ \ \ \ */\n\ \ \ \ \ \ \ \ public\ void\ loadState(String\ fileName)\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ QUESTION\ 7\n\n\ \ \ \ }\n\n\n\n=

#. name
#: m12_examj2011enonce_online/task.yaml
!Examen\ Juin\ 2011\ online\u00a0\:\ Enonc\u00e9=

#. name, q1, header
#: m12_examj2011enonce_online/task.yaml
!**Ne\ rien\ soumettre\ ici\ \!**=

#. context
#: m12_examj2011q1_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/m12_examj2011enonce_online\n\n__\ juin2011_\n\nQuestion\ 1\ \:\ Impl\u00e9mentez\ la\ m\u00e9thode\ ``removeProcess``\ de\ la\ classe\ ``BasicComputer``,\ dont\ la\ signature\ est\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ p\ \!\=\ null\n\ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ retir\u00e9\ de\ cet\ ordinateur,\ s'il\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ s'agit\ bien\ du\ processus\ pr\u00e9sent.\ Retourne\ true\ si\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ le\ processus\ a\ \u00e9t\u00e9\ supprim\u00e9,\ false\ sinon.\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ removeProcess(Process\ p)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n\ \ \ \ }=

#. name
#: m12_examj2011q1_online/task.yaml
!Examen\ Juin\ 2011\ online\ \:\ Question\ 1=

#. name, q1, name
#: m12_examj2011q1_online/task.yaml mX12_examj2011q1/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ removeProcess=

#. name, q1, header
#: m12_examj2011q1_online/task.yaml
!Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ recopiez\ pas\ sa\ signature.=

#. name, zmontest, name
#: m12_examj2011q1_online/task.yaml m12_examj2011q2_online/task.yaml
#: m12_examj2011q3_online/task.yaml m12_examj2011q4_online/task.yaml
#: m12_examj2011q5_online/task.yaml m12_examj2011q6_online/task.yaml
#: m12_examj2011q7_online/task.yaml
!Fonction\ de\ test\ optionnelle=

#. name, zmontest, header
#: m12_examj2011q1_online/task.yaml
!Ins\u00e9rez\ votre\ code\ de\ test\ optionnel\ ci-dessous.\ Vous\ pouvez\ utiliser\ ``System.out.println``\ dans\ cette\ m\u00e9thode\ pour\ d\u00e9bugger\ votre\ programme.\ \ Votre\ code\ sera\ ex\u00e9cut\u00e9\ dans\ une\ m\u00e9thode\ ``montest``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ montest()\ {\ /*\ VOTRE\ CODE\ */\ }\n\nAttention,\ toute\ erreur\ dans\ ce\ code\ peut\ emp\u00eacher\ la\ bonne\ \u00e9valuation\ de\ votre\ r\u00e9ponse.\ \ Vous\ *devez*\ effacer\ ce\ code\ de\ test\ pour\ finaliser\ votre\ soumission.\n\n=

#. author
#: m12_examj2011q2_online/task.yaml mX12_examj2011q2/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka\ (ressource\ \:\ sources\ examen\ LFSAB1041\ juin\ 2011)=

#. context
#: m12_examj2011q2_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/m12_examj2011enonce_online\n\n__\ juin2011_\n\nQuestion\ 2\ \:\ \u00c9crivez\ compl\u00e8tement\ le\ constructeur\ de\ la\ classe\ ``FullComputer``.\ Ce\ constructeur\ prend\ dans\ l'ordre\ les\ arguments\ suivants\ \:\ le\ nom,\ le\ nombre\ de\ processus\ \u00e0\ supporter,\ la\ capacit\u00e9\ de\ stockage.\nSa\ sp\u00e9cification\ est\ la\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pre\ n\ >\ 0,\ name\ \!\=\ null,\ storage\ >\=\ 0\n\ \ \ \ *\ @post\ Construit\ un\ FullComputer\ de\ nom\ name,\ supportant\ n\ processus\n\ \ \ \ *\ et\ avec\ une\ capacit\u00e9\ de\ stockage\ \u00e9gale\ \u00e0\ storage\n\ \ \ \ */\n\n\ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n=

#. name
#: m12_examj2011q2_online/task.yaml
!Examen\ Juin\ 2011\ online\ \:\ Question\ 2=

#. name, q1, name
#: m12_examj2011q2_online/task.yaml mX12_examj2011q2/task.yaml
!Constructeur\ de\ la\ Classe\ FullComputer=

#. name, q1, header
#: m12_examj2011q2_online/task.yaml
!Veillez\ \u00e0\ impl\u00e9menter\ la\ signature\ et\ le\ corps\ du\ constructeur.=

#. name, zmontest, header
#: m12_examj2011q2_online/task.yaml m12_examj2011q3_online/task.yaml
#: m12_examj2011q4_online/task.yaml m12_examj2011q5_online/task.yaml
#: m12_examj2011q6_online/task.yaml m12_examj2011q7_online/task.yaml
!Ins\u00e9rez\ votre\ code\ de\ test\ optionnel\ ci-dessous.\ Vous\ pouvez\ utiliser\ ``System.out.println``\ dans\ cette\ m\u00e9thode\ pour\ d\u00e9bugger\ votre\ programme.\ \ Votre\ code\ sera\ ex\u00e9cut\u00e9\ dans\ une\ m\u00e9thode\ ``montest``\:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ public\ static\ void\ montest()\ {\ /*\ VOTRE\ CODE\ */\ }\n\nAttention,\ toute\ erreur\ dans\ ce\ code\ peut\ emp\u00eacher\ la\ bonne\ \u00e9valuation\ de\ votre\ r\u00e9ponse.\ \ Vous\ *devez*\ effacer\ ce\ code\ de\ test\ pour\ finaliser\ votre\ soumission.\n=

#. context
#: m12_examj2011q3_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/m12_examj2011enonce_online\n\n__\ juin2011_\n\nQuestion\ 3\u00a0\:\ Ecrivez\ compl\u00e8tement\ (y\ compris\ les\ sp\u00e9cifications)\ le\ corps\ de\ la\ classe\ ``Process``\ qui\ repr\u00e9sente\ un\ processus.\ Chaque\ processus\ a\ un\ nom\ (``String``),\ une\ capacite\u0301\ de\ stockage\ requise\ (``int``)\ et\ un\ identifiant\ de\ processus\ ou\ PID\ (``int``).\ Les\ PIDs\ sont\ attribus\ squentiellement\ a\u0300\ la\ cration\ de\ chaque\ nouveau\ processus\ (1\ pour\ le\ premier,\ 2\ pour\ le\ deuxi\u00e8me,\ etc.)\ La\ classe\ doit\ d\u00e9finir\ \:\n\n-\ \ \ \ Un\ constructeur\ avec\ le\ nom\ et\ la\ capacit\u00e9\ comme\ param\u00e8tres,\ dans\ cet\ ordre,\n-\ \ \ \ Des\ m\u00e9thodes\ ``getName``,\ ``getRequiredStorage``\ et\ ``getPid``\ retournant\ respectivement\ le\ nom,\ la\ capacit\u00e9\ et\ le\ PID,\n-\ \ \ \ Une\ m\u00e9thode\ ``toString``\ retournant\ une\ cha\u00eene\ de\ caract\u00e8res\ comprenant\ le\ nom\ du\ processus\ et\ la\ capacit\u00e9\ de\ stockage\ n\u00e9cessaire,\ s\u00e9par\u00e9s\ par\ un\ espace,\n-\ \ \ \ Toutes\ les\ variables\ et\ m\u00e9thodes\ compl\u00e9mentaires\ n\u00e9cessaires\ \u00e0\ votre\ impl\u00e9mentation.\n\nIl\ n'est\ pas\ n\u00e9cessaire\ de\ re-d\u00e9finir\ la\ m\u00e9thode\ ``equals``.\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ \ *\ Un\ processus,\ avec\ un\ nom\ (String),\ une\ capacit\u00e9\ de\ stockage\n\ \ \ \ \ *\ requise\ (int)\ et\ un\ identifiant\ de\ processus,\ ou\ PID\ (int).\n\ \ \ \ \ *\ Les\ PIDs\ sont\ attribu\u00e9s\ s\u00e9quentiellement\ \u00e0\ la\ cr\u00e9ation\ de\ chaque\n\ \ \ \ \ *\ nouveau\ processus\ (1\ pour\ le\ premier,\ 2\ pour\ le\ deuxi\u00e8me,\ etc.).\n\ \ \ \ \ *\ Le\ premier\ argument\ du\ constructeur\ doit\ \u00eatre\ le\ nom\ du\ processus.\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Process\n\ \ \ \ {\n\ \ \ \ \ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n\ \ \ \ }=

#. name
#: m12_examj2011q3_online/task.yaml
!Examen\ Juin\ 2011\ online\u00a0\:\ Question\ 3=

#. name, q1, name
#: m12_examj2011q3_online/task.yaml mX12_examj2011q3/task.yaml
!La\ classe\ Process=

#. name, q1, header
#: m12_examj2011q3_online/task.yaml
!Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ ``public\ class\ Process{...}``.\ Respectez\ bien\ le\ nom\ et\ les\ param\u00e8tres\ demand\u00e9s\ des\ m\u00e9thodes\ et\ constructeurs.=

#. author
#: m12_examj2011q4_online/task.yaml m12_examj2011q6_online/task.yaml
#: mX12_examj2011q4/task.yaml mX12_examj2011q6/task.yaml
!Munyabarenzi\ Cl\u00e9mentine\ Zaninka\ (ressource\ \:\ sources\ examen\ LFSAB1401\ juin\ 2011)=

#. context
#: m12_examj2011q4_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/m12_examj2011enonce_online\n__\ juin2011_\n\nQuestion\ 4\ \:\ Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``addProcess``\ de\ la\ classe\ ``FullComputer``.\ Pensez\ \u00e0\ utiliser\ les\ m\u00e9thodes\ de\ la\ classe\ ``Process``\ d\u00e9finies\ \u00e0\ la\ question\ 3.\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pre\ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ cet\ ordinateur\n\ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ \u00e0\ cet\ ordinateur,\ si\ (1)le\n\ \ \ \ *\ \ \ \ \ \ \ nombre\ de\ processus\ maximal\ n'est\ pas\ atteint\ et\ (2)\ la\ capacit\u00e9\ de\n\ \ \ \ *\ \ \ \ \ \ \ stockage\ n\u00e9cessaire\ pour\ p\ est\ disponible.\ Retourne\ true\ si\ le\n\ \ \ \ *\ \ \ \ \ \ \ processus\ a\ \u00e9t\u00e9\ ajout\u00e9,\ false\ sinon.\n\ \ \ \ */\n\ \ \ \ \ \ \ public\ boolean\ addProcess(Process\ p)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n\ \ \ \ }=

#. name
#: m12_examj2011q4_online/task.yaml
!Examen\ juin\ 2011\ online\u00a0\:\ Question\ 4=

#. name, q1, name
#: m12_examj2011q4_online/task.yaml mX12_examj2011q4/task.yaml
!Corps\ de\ la\ m\u00e9thode\ addProcess=

#. name, q1, header
#: m12_examj2011q4_online/task.yaml mX12_examj2011q4/task.yaml
!Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ r\u00e9\u00e9crivez\ pas\ la\ signature.=

#. context
#: m12_examj2011q5_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nQuestion\ 5\ \:\ Impl\u00e9mentez\ la\ m\u00e9thode\ ``addProcess()``\ de\ la\ classe\ ``Cluster``,\ selon\ la\ sp\u00e9cification\ donn\u00e9e.\ \ Aidez-vous\ de\ l'exemple\ pr\u00e9sent\u00e9\ dans\ l'\u00e9nonc\u00e9.\ \ Indice\:\ vous\ pouvez\ utiliser\ la\ valeur\ de\ ``count``.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ un\ ordinateur\ du\n\ \ \ \ \ *\ \ \ \ \ \ \ \ cluster.\n\ \ \ \ \ *\ @post\ Le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ au\ premier\ ordinateur,\ \u00e0\ partir\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ de\ la\ t\u00eate\ de\ la\ liste,\ disposant\ des\ ressources\ n\u00e9cessaires.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ La\ nouvelle\ t\u00eate\ de\ liste\ est\ le\ noeud\ qui\ suit\ celui\ de\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ l'ordinateur\ o\u00f9\ p\ a\ \u00e9t\u00e9\ ajout\u00e9.\ Si\ aucun\ ordinateur\ ne\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ dispose\ de\ ressources\ suffisantes,\ la\ t\u00eate\ de\ liste\ est\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ inchang\u00e9e\ et\ une\ UnavailableException\ est\ lanc\u00e9e.\n\ \ \ \ \ */\n\ \ \ \ public\ void\ addProcess(Process\ p)\ throws\ UnavailableException\ {\n\ \ \ \ \ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n\ \ \ \ }=

#. name
#: m12_examj2011q5_online/task.yaml
!Examen\ Juin\ 2011\ online\ \:\ Question\ 5=

#. name, q1, name
#: m12_examj2011q5_online/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ addProcess=

#. name, q1, header
#: m12_examj2011q5_online/task.yaml
!Veillez\ \u00e0\ n'\u00e9crire\ que\ le\ corps,\ ne\ recopiez\ pas\ sa\ signature.\ =

#. context
#: m12_examj2011q6_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nQuestion\ 6\ \:\ Ecrivez\ compl\u00e8tement\ la\ m\u00e9thode\ ``removeComputer``\ de\ la\ classe\ ``Cluster``\ selon\ la\ sp\u00e9cification\ donn\u00e9e.\ Indice\:\ vous\ pouvez\ utiliser\ la\ valeur\ de\ ``count``.\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pre\ comp\ \!\=\ null\n\ \ \ \ *\ @post\ L'ordinateur\ comp\ a\ \u00e9t\u00e9\ retir\u00e9\ du\ cluster,\ s'il\ s'y\ trouvait.\n\ \ \ \ *\ \ \ \ \ \ \ \ Si\ comp\ est\ en\ t\u00eate\ de\ liste,\ la\ t\u00eate\ de\ liste\ passe\ au\ noeud\ suivant,\n\ \ \ \ *\ \ \ \ \ \ \ \ \ \ sinon\ elle\ est\ inchang\u00e9e.\n\ \ \ \ *\ \ \ \ \ \ \ \ Retourne\ true\ si\ comp\ a\ \u00e9t\u00e9\ retir\u00e9,\ false\ sinon.\n\ \ \ \ */\n\n\ \ \ \ /***\ VOTRE\ REPONSE\ ***/=

#. name
#: m12_examj2011q6_online/task.yaml
!Examen\ juin\ 2011\ online\ \:\ Question\ 6=

#. name, q1, name
#: m12_examj2011q6_online/task.yaml mX12_examj2011q6/task.yaml
!M\u00e9thode\ removeComputer=

#. name, q1, header
#: m12_examj2011q6_online/task.yaml
!Veillez\ \u00e0\ donner\ la\ signature\ et\ le\ corps\ de\ la\ m\u00e9thode.=

#. context
#: m12_examj2011q7_online/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nQuestion\ 7\ \:\ Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``loadState``\ de\ la\ classe\ ``Cluster``\ selon\ la\ sp\u00e9cification\ donn\u00e9e.\ Notez\ que\ la\ pr\u00e9-condition\ garantit\ le\ format\ du\ contenu\ du\ fichier;\ pas\ besoin\ donc\ de\ traiter\ les\ erreurs\ de\ format\ du\ texte.\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ /**\n\ \ \ \ \ *\ @pre\ \ \ \ \ filename\ le\ nom\ d'un\ fichier\ sauvegard\u00e9\ par\ saveState\n\ \ \ \ \ *\ @post\ \ \ \ Retire\ tous\ les\ processus\ pr\u00e9sents\ dans\ le\ cluster,\ puis\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ ajoute\ au\ cluster\ les\ processus\ dont\ les\ noms\ et\ capacit\u00e9s\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ sont\ donn\u00e9s\ dans\ le\ fichier,\ selon\ le\ format\ g\u00e9n\u00e9r\u00e9\ par\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ saveState.\ \ Arr\u00eate\ le\ programme\ si\ une\ erreur\ d'I/O\ se\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ produit\ ou\ si\ la\ capacit\u00e9\ du\ cluster\ est\ insuffisante.\n\ \ \ \ \ */\n\ \ \ \ public\ void\ loadState(String\ fileName){\n\ \ \ \ \ \ \ \ /***\ VOTRE\ REPONSE\ ***/\n\ \ \ \ }=

#. name
#: m12_examj2011q7_online/task.yaml
!Examen\ Juin\ 2011\ online\u00a0\:\ Question\ 7=

#. name, q1, name
#: m12_examj2011q7_online/task.yaml mX12_examj2011q7/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ loadState=

#. name, q1, header
#: m12_examj2011q7_online/task.yaml
!Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ la\ signature.=

#. context
#: mX12_examj2011q1/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 1\ \:\ Impl\u00e9mentez\ la\ m\u00e9thode\ ``removeProcess``\ de\ la\ classe\ ``BasicComputer``,\ dont\ la\ signature\ est\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ p\ \!\=\ null\n\ \ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ retir\u00e9\ de\ cet\ ordinateur,\ s'il\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ s'agit\ bien\ du\ processus\ pr\u00e9sent.\ Retourne\ true\ si\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ le\ processus\ a\ \u00e9t\u00e9\ supprim\u00e9,\ false\ sinon.\n\ \ \ \ \ */\n\ \ \ \ public\ boolean\ removeProcess(Process\ p)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }\n\n\n**Vu\ que\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q1/task.yaml
!Examen\ Juin\ 2011\:\ Question\ 1=

#. name, q1, header
#: mX12_examj2011q1/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ removeProcess.\ Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps\ de\ la\ m\u00e9thode,\ ne\ recopiez\ pas\ sa\ signature.\ Pensez\ \u00e0\ respecter\ scrupuleusement\ les\ sp\u00e9cifications.=

#. context
#: mX12_examj2011q2/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 2\ \:\ \u00c9crivez\ compl\u00e8tement\ le\ constructeur\ de\ la\ classe\ ``FullComputer``\ \ dont\ la\ sp\u00e9cification\ est\ la\ suivante\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pre\ n\ >\ 0,\ name\ \!\=\ null,\ storage\ >\=\ 0\n\ \ \ \ *\ @post\ Construit\ un\ FullComputer\ de\ nom\ name,\ supportant\ n\ processus\n\ \ \ \ *\ et\ avec\ une\ capacit\u00e9\ de\ stockage\ \u00e9gale\ \u00e0\ storage\n\ \ \ \ */\n\n\ \ \ \ //\ \u00c0\ impl\u00e9menter\n\nCe\ constructeur\ prend\ dans\ l'ordre\ les\ arguments\ suivants\ \:\ le\ nom,\ le\ nombre\ de\ processus\ \u00e0\ suporter,\ la\ capacit\u00e9\ de\ stockage.\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q2/task.yaml
!Examen\ Juin\ 2011\:\ Question\ 2=

#. context
#: mX12_examj2011q3/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 3\ \:\ Impl\u00e9mentez\ la\ classe\ ``Process``\ ci-dessous\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ \ *\ Un\ processus,\ avec\ un\ nom\ (String),\ une\ capacit\u00e9\ de\ stockage\n\ \ \ \ \ *\ requise\ (int)\ et\ un\ identifiant\ de\ processus,\ ou\ PID\ (int).\n\ \ \ \ \ *\ Les\ PIDs\ sont\ attribu\u00e9s\ s\u00e9quentiellement\ \u00e0\ la\ cr\u00e9ation\ de\ chaque\n\ \ \ \ \ *\ nouveau\ processus\ (1\ pour\ le\ premier,\ 2\ pour\ le\ deuxi\u00e8me,\ etc.).\n\ \ \ \ \ *\ Le\ premier\ argument\ du\ constructeur\ doit\ \u00eatre\ le\ nom\ du\ processus.\n\ \ \ \ \ */\n\ \ \ \ public\ class\ Process\n\ \ \ \ {\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }\n\nN'oubliez\ pas\ d'impl\u00e9menter\ les\ m\u00e9thodes\ demand\u00e9es\ dans\ la\ question.\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q3/task.yaml
!Examen\ Juin\ 2011\:\ Question\ 3=

#. name, q1, header
#: mX12_examj2011q3/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ classe\ Process.\ Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ "public\ class\ Process{...}".\ V\u00e9rifiez\ bien\ la\ description\ de\ la\ classe\ et\ ne\ vous\ trompez\ pas\ dans\ le\ nom\ des\ m\u00e9thodes.=

#. context
#: mX12_examj2011q4/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 4\ \:\ Ecrivez\ le\ corps\ de\ la\ m\u00e9thode\ ``addProcess``\ de\ la\ classe\ ``FullComputer``.\ Pensez\ \u00e0\ utiliser\ les\ m\u00e9thodes\ de\ la\ classe\ ``Process``\ d\u00e9finies\ \u00e0\ la\ question\ 3.\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pre\ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ cet\ ordinateur\n\ \ \ \ *\ @post\ le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ \u00e0\ cet\ ordinateur,\ si\ (1)le\n\ \ \ \ *\ nombre\ de\ processus\ maximal\ n'est\ pas\ atteint\ et\ (2)\ la\ capacit\u00e9\ de\n\ \ \ \ *\ stockage\ n\u00e9cessaire\ pour\ p\ est\ disponible.\ Retourne\ true\ si\ le\n\ \ \ \ *\ processus\ a\ \u00e9t\u00e9\ ajout\u00e9,\ false\ sinon.\n\ \ \ \ *\n\ \ \ \ */\n\ \ \ \ public\ boolean\ addProcess(Process\ p)\n\n\ \ \ \ //\ \u00c0\ impl\u00e9menter\n\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q4/task.yaml
!Examen\ juin\ 2011\:\ Question\ 4=

#. context
#: mX12_examj2011q5/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 5\ \:\ Impl\u00e9mentez\ la\ m\u00e9thode\ ``addProcess()``\ de\ la\ classe\ ``Cluster``.\n\nVoici\ sa\ signature\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ /**\n\ \ \ \ \ *\ @pre\ p\ \!\=\ null,\ p\ ne\ se\ trouve\ pas\ d\u00e9j\u00e0\ sur\ un\ ordinateur\ du\n\ \ \ \ \ *\ \ \ \ \ \ \ \ cluster.\n\ \ \ \ \ *\ @post\ Le\ processus\ p\ a\ \u00e9t\u00e9\ ajout\u00e9\ au\ premier\ ordinateur,\ \u00e0\ partir\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ de\ la\ t\u00eate\ de\ la\ liste,\ disposant\ des\ ressources\ n\u00e9cessaires.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ La\ nouvelle\ t\u00eate\ de\ liste\ est\ le\ noeud\ qui\ suit\ celui\ de\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ l'ordinateur\ o\u00f9\ p\ a\ \u00e9t\u00e9\ ajout\u00e9.\ Si\ aucun\ ordinateur\ ne\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ dispose\ de\ ressources\ suffisantes,\ la\ t\u00eate\ de\ liste\ est\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ inchang\u00e9e\ et\ une\ UnavailableException\ est\ lanc\u00e9e.\n\ \ \ \ \ */\n\ \ \ \ public\ void\ addProcess(Process\ p)\ throws\ UnavailableException{\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q5/task.yaml
!Examen\ Juin\ 2011\:\ Question\ 5=

#. name, q1, name
#: mX12_examj2011q5/task.yaml
!Le\ corps\ de\ la\ m\u00e9thode\ addProcess()=

#. name, q1, header
#: mX12_examj2011q5/task.yaml
!\u00c9crivez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ addProcess\ de\ la\ classe\ Cluster.\ Veillez\ \u00e0\ n'\u00e9crire\ que\ le\ corps,\ ne\ recopiez\ pas\ sa\ signature.\ V\u00e9rifiez\ bien\ les\ sp\u00e9cifications.=

#. context
#: mX12_examj2011q6/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 6\ \:\ Ecrivez\ compl\u00e8tement\ la\ m\u00e9thode\ ``removeComputer``\ de\ la\ classe\ ``Cluster``\ dont\ la\ sp\u00e9cification\ et\ la\ signature\ sont\ ci-desosus.\ Indice\:\ vous\ pouvez\ utiliser\ la\ valeur\ de\ ``count``.\n\n..\ code-block\:\:\ java\n\n\ \ \ /**\n\ \ \ \ *\ @pr\ e\ comp\ \!\=\ null\n\ \ \ \ *\ @po\ st\ L'ordinateur\ comp\ a\ \u00e9t\u00e9\ retir\u00e9\ du\ cluster,\ s'il\ s'y\n\ \ \ \ *\ trouvait.\ Si\ comp\ est\ en\ t\u00eate\ de\ liste,\ la\ t\u00eate\ de\ liste\ passe\ au\n\ \ \ \ *\ noeud\ suivant,\ sinon\ elle\ est\ inchang\u00e9e.\ Retourne\ true\ si\ comp\ a\n\ \ \ \ *\ \u00e9t\u00e9\ retir\u00e9,\ false\ sinon.\n\ \ \ \ */\n\n\ \ \ \ //\ \u00c0\ impl\u00e9menter\n\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q6/task.yaml
!Examen\ juin\ 2011\:\ Question\ 6=

#. name, q1, header
#: mX12_examj2011q6/task.yaml
!Veillez\ \u00e0\ ne\ pas\ oublier\ d'\u00e9crire\ la\ signature\ de\ la\ m\u00e9thode.=

#. context
#: mX12_examj2011q7/task.yaml
!Prenez\ connaissance\ de\ l'\u00e9nonc\u00e9\ de\ l'`examen\ de\ juin\ 2011`__.\n\n..\ _juin2011\:\ \ https\://inginious.info.ucl.ac.be/course/LSINF1101/examj2011q1/jun11.pdf\n\n__\ juin2011_\n\nR\u00e9pondez\ ici\ \u00e0\ la\ Question\ 7\ \:\ Impl\u00e9mentez\ la\ m\u00e9thode\ ``loadState()``\ de\ la\ classe\ ``Cluster``.\n\nVoici\ sa\ signature\ \:\n\n..\ code-block\:\:\ java\n\n\ \ \ \ \ \ /**\n\ \ \ \ \ *\ @pre\ \ \ \ \ filename\ le\ nom\ d'un\ fichier\ sauvegard\u00e9\ par\ saveState\n\ \ \ \ \ *\ @post\ \ \ \ Retire\ tous\ les\ processus\ pr\u00e9sents\ dans\ le\ cluster,\ puis\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ ajoute\ au\ cluster\ les\ processus\ dont\ les\ noms\ et\ capacit\u00e9s\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ sont\ donn\u00e9s\ dans\ le\ fichier,\ selon\ le\ format\ g\u00e9n\u00e9r\u00e9\ par\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ saveState.\ \ Arr\u00eate\ le\ programme\ si\ une\ erreur\ d'I/O\ se\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ produit\ ou\ si\ la\ capacit\u00e9\ du\ cluster\ est\ insuffisante.\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ Les\ processus\ sont\ r\u00e9partis\ \u00e9quitablement\ entre\ les\n\ \ \ \ \ *\ \ \ \ \ \ \ \ \ \ \ \ diff\u00e9rents\ ordinateurs\ du\ cluster.\n\ \ \ \ \ */\n\ \ \ \ public\ void\ loadState(String\ fileName){\n\ \ \ \ \ \ \ \ //\ \u00c0\ impl\u00e9menter\n\ \ \ \ }\n\n**Comme\ l'examen\ est\ sur\ papier,\ il\ est\ pr\u00e9f\u00e9rable\ que\ vous\ r\u00e9digiez\ la\ r\u00e9ponse\ sur\ une\ feuille\ de\ papier\ et\ que\ vous\ la\ recopiiez\ ici\ une\ fois\ que\ vous\ \u00eates\ s\u00fbr\ de\ vous.\ INGInious\ vous\ permettra\ de\ v\u00e9rifier\ si\ votre\ code\ est\ correct\ mais\ n'oubliez\ pas\ qu'\u00e0\ l'examen,\ vous\ n'aurez\ pas\ plusieurs\ essais.\ Il\ est\ donc\ important\ de\ s'entra\u00eener\ \u00e0\ r\u00e9diger\ du\ code\ sur\ papier\ pour\ se\ mettre\ en\ situation\ d'examen\ et\ \u00e9valuer\ votre\ temps\ pour\ r\u00e9pondre.**\n\n**Souvenez-vous\ qu'une\ r\u00e9ponse\ correcte\ sur\ INGInious\ ne\ correspond\ pas\ d'office\ \u00e0\ un\ 20\ \u00e0\ l'examen\ (la\ clart\u00e9,\ la\ simplicit\u00e9\ du\ code,\ les\ sp\u00e9cifications\ sont\ aussi\ des\ crit\u00e8res\ importants\ non\ v\u00e9rifi\u00e9s\ par\ INGInious).**=

#. name
#: mX12_examj2011q7/task.yaml
!Examen\ Juin\ 2011\:\ Question\ 7=

#. name, q1, header
#: mX12_examj2011q7/task.yaml
!Impl\u00e9mentez\ ici\ le\ corps\ de\ la\ m\u00e9thode\ loadState.\ Veillez\ \u00e0\ n'impl\u00e9menter\ que\ le\ corps,\ ne\ recopiez\ pas\ la\ signature.\ V\u00e9rifiez\ bien\ les\ sp\u00e9cifications.=

#. context
#: mX1Q19/task.yaml
!Cr\u00e9er\ un\ programme\ permettant\ de\ calculer\ des\ fonctions\ math\u00e9matiques.\ Vous\ ne\ pouvez\ pas\ utiliser\ les\ fonctions\ math\u00e9matiques\ natives\ de\ Java.\ =

#. name
#: mX1Q19/task.yaml
Mission\ 1\ \:\ Question\ suppl\u00e9mentaire\ \:\ Fonctions\ math\u00e9matiques=Assignment 1 \: Additional question \: Mathematical functions

#. name, q1, name
#: mX1Q19/task.yaml
!Fonction\ abs\ -\ donne\ la\ valeur\ absolue\ d'un\ nombre\ entier=

#. name, q1, header
#: mX1Q19/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double\ number;\ //\ le\ nombre\ \u00e0\ \u00e9valuer\n\ \ \ \ double\ abs_number;\ //\ la\ valeur\ absolue\ du\ nombre=

#. name, q2, name
#: mX1Q19/task.yaml
!Fonction\ ceil\ -\ retourne\ l'entier\ sup\u00e9rieur\ d'un\ nombre=

#. name, q2, header
#: mX1Q19/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double\ number;\ //\ le\ nombre\ \u00e0\ \u00e9valuer\n\ \ \ \ int\ ceil_number;\ //\ l'entier\ sup\u00e9rieur\ du\ nombre=

#. name, q3, name
#: mX1Q19/task.yaml
!Fonction\ round\ -\ retourne\ la\ valeur\ arrondie\ d'un\ nombre=

#. name, q3, header
#: mX1Q19/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double\ number;\ //\ le\ nombre\ \u00e0\ \u00e9valuer\n\ \ \ \ int\ round_number;\ //\ l'entier\ arrondi\ du\ nombre=

#. name, q4, name
#: mX1Q19/task.yaml
!Fonction\ floor\ -\ retourne\ l'entier\ inf\u00e9rieur\ d'un\ nombre=

#. name, q4, header
#: mX1Q19/task.yaml
!..\ code-block\:\:\ java\n\n\ \ \ \ double\ number;\ //\ le\ nombre\ \u00e0\ \u00e9valuer\n\ \ \ \ int\ floor_number;\ //\ l'entier\ inf\u00e9rieur\ du\ nombre=

#. context
#: mX2Q2/task.yaml
!Utilisez\ une\ boucle\ pour\ r\u00e9aliser\ une\ division\ euclidienne\!\ le\ diviseur\ et\ dividende\ vous\ sont\ donn\u00e9s,\ vous\ devez\ trouver\ le\ quotient\ et\ le\ reste.\n\n\ ..\ code-block\:\:\ java\n\n\ \ \ \ int\ diviseur;\n\ \ \ \ int\ dividende;\n\n\ \ \ \ int\ reste\ \=\ 0;\n\ \ \ \ int\ quotient\ \=\ 0;=

#. name
#: mX2Q2/task.yaml
!NON\ Mission\ 2\ \:\ Question\ suppl\u00e9mentaire\ \:\ Division\ euclidienne=

#. author
#: mX2ec2/task.yaml
!Cl\u00e9mentine\ Munyabarenzi\ (ressource\ \:\ syllabus\ d'exercices\ LSINF1101)=

#. context
#: mX2ec2/task.yaml
!Ecrivez\ un\ programme\ qui\ permet\ de\ donner,\ lorsqu'elles\ sont\ r\u00e9elles,\ les\ solutions\ de\ l'`\u00e9quation\ du\ second\ degr\u00e9\ <https\://fr.wikipedia.org/wiki/\u00c9quation_du_second_degr\u00e9>`_\n\n..\ math\ \:\:\n\n\ \ \ ax^2+bx+c\=0\n\nPour\ cela,\ \u00e9crivez\ un\ programme\ qui\ demande\ \u00e0\ l'utilisateur\ de\ taper\ les\ valeurs\ de\ *a*,\ *b*\ et\ *c*\ et\ ensuite\ \u00e9crit\ sur\ sa\ sortie\ standard\ les\ racines\ si\ celles-ci\ sont\ r\u00e9elles.\ Pensez\ aux\ diff\u00e9rents\ cas\ possibles\ en\ fonction\ des\ diff\u00e9rentes\ valeurs\ respectives\ de\ *a*,\ *b*\ et\ *c*.\n\nPour\ rappel,\ vous\ pouvez\ calculer\ la\ racine\ carr\u00e9e\ du\ r\u00e9el\ ``x``\ en\ utilisant\ ``Math.sqrt(x)``.\n\nVotre\ r\u00e9ponse\ devra\ compl\u00e9ter\ le\ code\ ci-dessous\:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ \ \ \ \ System.out.print("Entrez\ la\ valeur\ du\ coefficient\ a\ \:");\n\ \ \ \ \ \ \ \ double\ a\=TextIO.getlnDouble();\n\n\ \ \ \ \ \ \ \ System.out.print("Entrez\ la\ valeur\ du\ coefficient\ b\ \:");\n\ \ \ \ \ \ \ \ double\ b\=TextIO.getlnDouble();\n\n\ \ \ \ \ \ \ \ System.out.print("Entrez\ la\ valeur\ du\ coefficient\ c\ \:");\n\ \ \ \ \ \ \ \ double\ c\=TextIO.getlnDouble();\n=

#. name
#: mX2ec2/task.yaml
!NON\ Mission\ 2\ \:\ Exercice\ compl\u00e9mentaire\ 2\ \:\ Equations\ du\ second\ degr\u00e9=

#. name, q1, header
#: mX2ec2/task.yaml
!Une\ r\u00e9ponse\ affich\u00e9e\ *doit*\ ressembler\ \u00e0\ ceci\:\n\n..\ code-block\ \:\:\ java\n\n\ \ \ \ 0.606048584047038\n\ \ \ \ 5.283827730287069=

#. context
#: mX3Q8/task.yaml
!Ecrivez\ la\ m\u00e9thode\ permettant\ de\ calculer\ le\ nombre\ de\ racine\ d'une\ \u00e9quation\ du\ second\ degr\u00e9\nOn\ passe\ a,b\ et\ c\ en\ param\u00e8tre\ de\ votre\ m\u00e9thode.\nLa\ m\u00e9thode\ s'appelle\ eqsecdeg1\ pour\ la\ premi\u00e8re\ partie\ et\ eqsecdeg2\ pour\ la\ seconde.=

#. name
#: mX3Q8/task.yaml
!NON\ Mission\ 3\ \:\ Fonctions\ \u00e9quation\ du\ second\ degr\u00e9=

#. name, q1, name
#: mX3Q8/task.yaml mX3Q9/task.yaml
!Version\ 1,\ afficher\ le\ r\u00e9sultat=

#. name, q2, name
#: mX3Q8/task.yaml
!Version\ 2,\ retourn\u00e9\ le\ r\u00e9sultat=

#. context
#: mX3Q9/task.yaml
!Ecrivez\ la\ m\u00e9thode\ permettant\ de\ calculer\ la\ valeur\ d'une\ \u00e9quation\ du\ second\ degr\u00e9\nOn\ passe\ a,b\ et\ c\ en\ param\u00e8tre\ de\ votre\ m\u00e9thode.\nLa\ m\u00e9thode\ s'appelle\ eqsecdegsol1\ pour\ la\ premi\u00e8re\ partie\ et\ eqsecdegsol2\ pour\ la\ seconde\ On\ vous\ donne\ acc\u00e8s\ \u00e0\ eqsecdeg2\ permettant\ de\ conna\u00eetre\ le\ nombre\ de\ solutions\ .\ Pour\ la\ deuxi\u00e8me\ version\ s'il\ y\ a\ plus\ qu'une\ solution,\ vous\ renvoyez\ -1=

#. name
#: mX3Q9/task.yaml
!NON\ Mission\ 3\ \:\ Fonctions\ solution\ d'une\ \u00e9quation\ du\ second\ degr\u00e9=

#. name, q2, name
#: mX3Q9/task.yaml
!Version\ 2,\ retourne\ le\ r\u00e9sultat=

#. context
#: rev_qcm/task.yaml
!\=\=\=\=\=\=\=\=\nRevision\n\=\=\=\=\=\=\=\=\n=

#. name
#: rev_qcm/task.yaml
!R\u00e9visions\ \:\ QCM=

#. name, q1, header
#: rev_qcm/task.yaml
!\nLes\ m\u00e9thodes\ impl\u00e9ment\u00e9es\ dans\ la\ \ librairie\ standard\ Java\ sont\ souvent\ tr\u00e8s\ utile\ pour\ faciliter\ l'\u00e9criture\ de\ m\u00e9thodes\ plus\ compliqu\u00e9es.\ Consid\u00e9rons\ l'impl\u00e9mentation\ d'une\ m\u00e9thode\ permettant\ de\ calculer\ le\ minimum\ entre\ trois\ r\u00e9els\ pass\u00e9s\ en\ argument.\ Une\ telle\ m\u00e9thode\ peut\ s'\u00e9crire\ en\ utilisant\ une\ suite\ d'instructions\ conditionnelles,\ mais\ il\ est\ aussi\ possible\ de\ r\u00e9utiliser\ la\ m\u00e9thode\ ``Math.min``\ qui\ retourne\ le\ minimum\ entre\ ses\ deux\ arguments.\ Laquelle\ des\ m\u00e9thodes\ ci-dessous\ est\ un\ calcul\ correct\ du\ minimum\ entre\ trois\ nombres\ r\u00e9els\ ?\n=

#. name, q1, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min3(double\ a,\ double\ b,\ double\ c)\ {\n\ \ \ \ \ \ double\ m1\=Math.min(a,b);\n\ \ \ \ \ \ return\ Math.min(m1,c);\n\ \ \ }\n=

#. name, q1, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min3(double\ a,\ double\ b,\ double\ c)\ {\n\ \ \ \ \ \ double\ m\=Math.min(b,c);\n\ \ \ \ \ \ return\ Math.min(a,m);\n\ \ \ }\n=

#. name, q1, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min3(double\ a,\ double\ b,\ double\ c)\ {\n\ \ \ \ \ \ double\ m1\=Math.min(a,b);\n\ \ \ \ \ \ double\ min3\=Math.min(m1,c);\n\ \ \ }\n=

#. name, q1, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Elle\ est\ d\u00e9clar\u00e9e\ comme\ retournant\ un\ ``double``,\ mais\ elle\ ne\ retourne\ rien\ du\ tout.\n=

#. name, q1, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min3(double\ a,\ double\ b,\ double\ c)\ {\n\ \ \ \ \ \ double\ m1\=Math.min(c,b);\n\ \ \ \ \ \ double\ min3\=Math.min(m1,a);\n\ \ \ \ \ \ System.out.println(min3);\n\ \ \ }\n=

#. name, q1, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas.\ Elle\ est\ d\u00e9clar\u00e9e\ comme\ retournant\ un\ ``double``,\ mais\ elle\ ne\ retourne\ rien\ du\ tout.\ Elle\ affiche\ le\ minimum\ \u00e0\ l'\u00e9cran,\ mais\ ce\ n'est\ pas\ ce\ qui\ est\ demand\u00e9.\ Ne\ confondez\ pas\ une\ m\u00e9thode\ qui\ affiche\ un\ r\u00e9sultat\ et\ une\ m\u00e9thode\ qui\ retourne\ un\ r\u00e9sultat.\n=

#. name, q1, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ double\ min3(double\ a,\ double\ b,\ double\ c)\ {\n\ \ \ \ \ \ Math.min(b,c);\n\ \ \ \ \ \ Math.min(a,m);\n\ \ \ }\n=

#. name, q1, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ se\ compile\ pas\ pour\ plusieurs\ raisons.\ Tout\ d'abord,\ la\ m\u00e9thode\ ``Math.min``\ est\ une\ m\u00e9thode\ qui\ retourne,\ lorsqu'elle\ est\ utilis\u00e9e\ avec\ deux\ arguments\ de\ type\ ``double``,\ un\ ``double``.\ Or\ cette\ m\u00e9thode\ utilise\ ``Math.min``\ comme\ si\ il\ s'agissait\ d'une\ m\u00e9thode\ de\ type\ ``void``.\ Ensuite,\ la\ m\u00e9thode\ ``min3``\ est\ d\u00e9clar\u00e9e\ comme\ retournant\ un\ ``double``\ mais\ ne\ comprend\ aucune\ instruction\ ``return``.\n=

#. name, q2, name
#: rev_qcm/task.yaml
!Diviseurs\ entiers=

#. name, q2, header
#: rev_qcm/task.yaml
!\nParmi\ les\ m\u00e9thodes\ ci-dessous,\ laquelle\ est-elle\ une\ impl\u00e9mentation\ correcte\ d'une\ m\u00e9thode\ qui\ retourne\ le\ nombre\ de\ diviseurs\ entiers\ de\ l'entier\ (strictement\ positif)\ pass\u00e9\ en\ argument\ ?\n=

#. name, q2, text
#: rev_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ ndiv(int\ a)\ {\n\ \ \ \ \ \ int\ n\=0;\n\ \ \ \ \ \ for(int\ i\=1;i<\=a;i++)\n\ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ int\ reste\=a%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ n++;\n\ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ n;\n\ \ \ }\n=

#. name, q2, text
#: rev_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ ndiv(int\ a)\ {\n\ \ \ \ \ \ int\ n\=2;\n\ \ \ \ \ \ for(int\ i\=a-1;i>1;i--)\n\ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ int\ r\=a%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ n\=n+1;\n\ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ n;\n\ \ \ }\n=

#. name, q2, text
#: rev_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ ndiv(int\ a)\ {\n\ \ \ \ \ \ int\ n\=0;\n\ \ \ \ \ \ for(int\ i\=1;i<\=n;i++)\n\ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ n++;\n\ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ n;\n\ \ \ }\n=

#. name, q2, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ retourne\ toujours\ la\ valeur\ ``0``.\ Voyez-vous\ pourquoi\ ?\n=

#. name, q2, text
#: rev_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ ndiv(int\ a)\ {\n\ \ \ \ \ \ int\ n\=0;\n\ \ \ \ \ \ for(int\ i\=1;i<\=a;i++)\n\ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ int\ reste\=n%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ return\ n;\n\ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ n;\n\ \ \ }\n=

#. name, q2, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ retourne\ pas\ le\ nombre\ de\ diviseurs.\ Elle\ retourne\ le\ premier\ diviseurs,\ c'est-\u00e0-dire\ ``1``.\n=

#. name, q2, text
#: rev_qcm/task.yaml
#, python-format
!\n..\ code-block\:\:\ java\n\n\ \ \ public\ static\ int\ ndiv(int\ a)\ {\n\ \ \ \ \ \ int\ n\=2;\n\ \ \ \ \ \ for(int\ i\=a;i>0;i--)\n\ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ int\ r\=a%i;\n\ \ \ \ \ if(reste\=\=0)\ {\n\ \ \ \ \ \ \ \ n\=n+1;\n\ \ \ \ \ }\n\ \ \ \ \ \ }\n\ \ \ \ \ \ return\ n;\n\ \ \ }\n=

#. name, q2, feedback
#: rev_qcm/task.yaml
!\nCette\ m\u00e9thode\ ne\ retourne\ pas\ exactement\ le\ nombre\ de\ diviseurs\ entiers.\ V\u00e9rifiez\ les\ limites\ de\ la\ boucle\ ``for``.\n=

#. name, q4, name
#: rev_qcm/task.yaml
!M\u00e9thode\ count=

#. name, q4, header
#: rev_qcm/task.yaml
!\nImpl\u00e9mentez\ une\ m\u00e9thode\ ``count``\ que\ permet\ de\ compter\ le\ nombre\ de\ fois\ qu'un\ caract\u00e8re\ pass\u00e9\ en\ argument\ est\ pr\u00e9sent\ dans\ une\ cha\u00eene\ de\ donn\u00e9es\ donn\u00e9e.\ La\ sp\u00e9cification\ de\ cette\ m\u00e9thode\ est\n\n..\ code-block\:\:\ java\n\n\ /*\n\ \ *\ @pre\ -\n\ \ *\ @post\ retourne\ le\ nombre\ d'occurences\ du\ caract\u00e8re\ c\ dans\ la\ cha\u00eene\ s\n\ \ */\n\ public\ static\ int\ count(String\ s,\ char\ c)\ {\n\nUn\ seul\ des\ corps\ de\ m\u00e9thode\ ci-dessous\ est\ une\ impl\u00e9mentation\ correcte.\ Lequel\ ?\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=0;\n\ for(int\ i\=0;\ i<\ s.length();\ i\=i+1)\ {\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=0;\n\ for(int\ i\=s.length()-1;\ i>\=0;\ i\=i-1)\ {\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=s.length();\n\ for(int\ i\=0;\ i<\ s.length();\ i\=i+1)\ {\n\ \ \ if(s.charAt(i)\!\=c)\ {\n\ \ \ \ \ \ count\=count-1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, feedback
#: rev_qcm/task.yaml
!\nCette\ solution\ fonctionne,\ mais\ elle\ n'est\ pas\ tr\u00e8s\ naturelle.\ Il\ est\ pr\u00e9f\u00e9rable\ de\ d'abord\ initialiser\ la\ variable\ ``count``\ \u00e0\ 0\ et\ d'ensuite\ l'incr\u00e9menter\ pour\ chaque\ occurence\ du\ caract\u00e8re\ ``c``\ plut\u00f4t\ que\ de\ faire\ l'inverse.\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ for(int\ i\=0;\ i<\ s.length();\ i\=i+1)\ {\n\ \ \ int\ count\=0;\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, feedback
#: rev_qcm/task.yaml
!\nCette\ solution\ ne\ fonctionne\ pas\ et\ ``javac``\ refusera\ de\ la\ compiler.\ La\ variable\ ``count``\ est\ d\u00e9clar\u00e9e\ uniquement\ dans\ le\ bloc\ de\ la\ boucle\ ``for``.\ Elle\ ne\ peut\ donc\ pas\ \u00eatre\ utilis\u00e9e\ en\ dehors\ de\ cette\ boucle.\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=0;\n\ for(int\ i\=0;\ i<\=\ s.length();\ i\=i+1)\ {\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, feedback
#: rev_qcm/task.yaml
!\nCette\ solution\ ne\ fonctionne\ pas.\ Lors\ de\ son\ ex\u00e9cution,\ elle\ va\ tenter\ de\ lire\ le\ caract\u00e8re\ \u00e0\ l'indice\ ``s.length()``\ de\ la\ cha\u00eene\ de\ caract\u00e8re\ ``s``.\ Cela\ va\ provoquer\ une\ exception\ ``java.lang.StringIndexOutOfBoundsException``.\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=0;\n\ for(int\ i\=1;\ i<\ s.length();\ i\=i+1)\ {\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=

#. name, q4, feedback
#: rev_qcm/task.yaml
!\nCette\ solution\ ne\ fonctionne\ pas.\ Elle\ ne\ teste\ pas\ le\ premier\ caract\u00e8re\ de\ la\ cha\u00eene\ de\ caract\u00e8res.\n=

#. name, q4, text
#: rev_qcm/task.yaml
!\n..\ code-block\:\:\ java\n\n\ int\ count\=0;\n\ for(int\ i\=s.length();\ i>\=0;\ i\=i-1)\ {\n\ \ \ if(s.charAt(i)\=\=c)\ {\n\ \ \ \ \ \ count\=count+1;\n\ \ \ }\n\ }\n\ return\ count;\n=
