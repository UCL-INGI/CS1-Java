accessible: true
author: Lucas Ody & Tom Rousseaux
categories: []
contact_url: ''
context: |
    Le `OU exclusif <https://fr.wikipedia.org/wiki/Fonction_OU_exclusif>`_ (XOR en anglais) est un opérateur logique à l'instar du "et" et du "ou". Il vous est demandé d'implémenter ce XOR, sachant que, pour ``a`` et ``b`` deux booléens, le résultat de ``a XOR b`` est ``true`` si un et un seul des booléens est ``true``, et ``false`` sinon.

    Pour cette question, il est conseillé d'utiliser les instructions conditionelles et les expressions ``&&``, ``||`` et la négation logique ``!``.

    Pour rappel, les expressions booléennes sont décrites dans la section |jn2.5|_ du livre et l\'instruction conditionelle dans la section `3.1 : Blocks, Loops, and Branches <http://math.hws.edu/javanotes/c3/s1.html>`_

    .. _jn2.5 : http://math.hws.edu/javanotes/c2/s5.html
    .. |jn2.5| replace:: `2.5 : Details of Expressions`


    .. code-block:: java

         boolean a;
         boolean b;
         boolean xor; // placer dans cette variable votre résultat
environment_id: java8judge
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: 'Mission 1 : Question supplémentaire : OU exclusif'
network_grading: false
order: 16
problems:
    q1:
        type: code
        name: ''
        header: ''
        language: java
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
